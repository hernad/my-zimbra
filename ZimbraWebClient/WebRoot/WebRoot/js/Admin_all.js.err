
[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
){var len=v.length; ---> var  <--- d=v.substr(0,len-

[WARNING] Try to use a single 'var' statement per scope.
substr(0,len-1); ---> var  <--- p=v.substr(len-1,

[WARNING] Try to use a single 'var' statement per scope.
{var uniqueArr=[];for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
};if(obj){for( ---> var  <--- key in obj){if(ignoredProperties&&ignoredProperties

[WARNING] Try to use a single 'var' statement per scope.
)>=0){continue;}} ---> var  <--- v=obj[key];if(v

[WARNING] Try to use a single 'var' statement per scope.
{var resultArr=[];for( ---> var  <--- i=0;i<srcArr.length;

[WARNING] Try to use a single 'var' statement per scope.
}var strArr=[];for( ---> var  <--- i=0;i<objArray.length;

[WARNING] Try to use a single 'var' statement per scope.
){var new_v=ZaMsg.VALUE_UNRECOGNIZED; ---> var  <--- myChoices=choices;if(typeof(choices)

[WARNING] Try to use a single 'var' statement per scope.
.call(this);}for( ---> var  <--- i=0;i<myChoices.length;

[WARNING] Try to use a single 'var' statement per scope.
=a.name.toLowerCase(); ---> var  <--- bl=b.name.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=a.name.toLowerCase(); ---> var  <--- bl=b.name.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.removeMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.getRelatedMethods[this._iKeyName]){ ---> var  <--- methods=ZaItem.getRelatedMethods[this._iKeyName]

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.getRelatedMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
var rights=targetObj.right;for( ---> var  <--- r in rights){this.rights[rights

[WARNING] Try to use a single 'var' statement per scope.
[0].a instanceof Array){ ---> var  <--- getAttrs=targetObj.getAttrs[0].a

[WARNING] Try to use a single 'var' statement per scope.
;this.noAttrsAvailable=false;for( ---> var  <--- a in getAttrs){this.getAttrs[getAttrs

[WARNING] Try to use a single 'var' statement per scope.
[0].v instanceof Array){ ---> var  <--- cnt=getAttrs[a]["default"][

[WARNING] Try to use a single 'var' statement per scope.
]=new Array();for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
[0].a instanceof Array){ ---> var  <--- setAttrs=targetObj.setAttrs[0].a

[WARNING] Try to use a single 'var' statement per scope.
}this.noAttrsAvailable=false;for( ---> var  <--- a in setAttrs){this.setAttrs[setAttrs

[WARNING] The variable a has already been declared in the same scope...
this.noAttrsAvailable=false;for(var  ---> a <---  in setAttrs){this.setAttrs[setAttrs[

[WARNING] Try to use a single 'var' statement per scope.
[0].v instanceof Array){ ---> var  <--- cnt=setAttrs[a]["default"][

[WARNING] The variable cnt has already been declared in the same scope...
0].v instanceof Array){var  ---> cnt <--- =setAttrs[a]["default"][0

[WARNING] Try to use a single 'var' statement per scope.
]=new Array();for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
=new Array();for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
val,this.type,expandDefaults); ---> var  <--- inCacheProcess=ZaItem.inCacheProcess(val);var 

[WARNING] Try to use a single 'var' statement per scope.
inCacheProcess=ZaItem.inCacheProcess(val); ---> var  <--- resp;if(((!ZaItem.RightCache

[WARNING] Try to use a single 'var' statement per scope.
)&&inCacheProcess)||!inCacheProcess){ ---> var  <--- soapDoc=AjxSoapDoc.create("GetEffectiveRightsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.setMethodAttribute("expandAllAttrs","getAttrs");} ---> var  <--- elTarget=soapDoc.set("target",val)

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("type",this.type); ---> var  <--- elGrantee=soapDoc.set("grantee",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
elGrantee.setAttribute("by","id"); ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
.callback=callback?callback:null; ---> var  <--- reqMgrParams={};reqMgrParams.controller=(

[WARNING] Try to use a single 'var' statement per scope.
"GetCreateObjectAttrsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elTarget=soapDoc.set("target","")

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(domainBy)){ ---> var  <--- elDomain=soapDoc.set("domain",domain)

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(cosBy)){ ---> var  <--- elCos=soapDoc.set("cos",cos)

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("by",cosBy);} ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=(

[WARNING] Try to use a single 'var' statement per scope.
.busyMsg=ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS;try{ ---> var  <--- resp=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.loadMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.modifyMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(ZaItem.createMethods[key]){ ---> var  <--- methods=ZaItem.createMethods[key];var 

[WARNING] Try to use a single 'var' statement per scope.
methods=ZaItem.createMethods[key]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;}var children=node.childNodes; ---> var  <--- cnt=children.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=children.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- child=children[i];if(child

[WARNING] Try to use a single 'var' statement per scope.
.nodeName!="a"){continue;} ---> var  <--- name=child.getAttribute("n");var 

[WARNING] Try to use a single 'var' statement per scope.
name=child.getAttribute("n"); ---> var  <--- pd=child.getAttribute("pd");if

[WARNING] Try to use a single 'var' statement per scope.
if(child.firstChild!=null){ ---> var  <--- value=child.firstChild.nodeValue;if(

[WARNING] Try to use a single 'var' statement per scope.
if(name in this.attrs){ ---> var  <--- vc=this.attrs[name];if

[WARNING] Try to use a single 'var' statement per scope.
=obj.a.length;for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
if(obj._attrs){for( ---> var  <--- ix in obj._attrs){if(obj

[WARNING] The variable ix has already been declared in the same scope...
(obj._attrs){for(var  ---> ix <---  in obj._attrs){if(obj.

[WARNING] Try to use a single 'var' statement per scope.
};if(obj.a){ ---> var  <--- len=obj.a.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=obj.a.length;for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
if(obj._attrs){for( ---> var  <--- ix in obj._attrs){if(obj

[WARNING] The variable ix has already been declared in the same scope...
(obj._attrs){for(var  ---> ix <---  in obj._attrs){if(obj.

[WARNING] Try to use a single 'var' statement per scope.
];if(value!=null){ ---> var  <--- desc=ZaItem._attrDesc(name);html

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.initMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
("Can't add alias for account type: "+this.type);} ---> var  <--- soapDoc=AjxSoapDoc.create(soapCmd,ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("alias",newAlias); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
("Can't add alias for account type: "+account.type);} ---> var  <--- soapDoc=AjxSoapDoc.create(soapCmd,ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("alias",aliasToRemove); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
().getCurrentController();try{ ---> var  <--- currentSettingObj=this.getForm().getInstance(

[WARNING] Try to use a single 'var' statement per scope.
.getForm().getInstance(); ---> var  <--- defaultValues=currentSettingObj._defaultValues;var soapCmd="CheckExchangeAuthRequest"

[WARNING] Try to use a single 'var' statement per scope.
);var defaultValues=currentSettingObj._defaultValues; ---> var  <--- soapCmd="CheckExchangeAuthRequest";var soapDoc=AjxSoapDoc.create

[WARNING] Try to use a single 'var' statement per scope.
currentSettingObj._defaultValues;var soapCmd="CheckExchangeAuthRequest"; ---> var  <--- soapDoc=AjxSoapDoc.create(soapCmd,ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
soapCmd,ZaZimbraAdmin.URN,null); ---> var  <--- authEl=soapDoc.set("auth","")

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("auth",""); ---> var  <--- attrNames=[ZaDomain.A_zimbraFreebusyExchangeURL,ZaDomain.A_zimbraFreebusyExchangeAuthScheme

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraFreebusyExchangeAuthUsername,ZaDomain.A_zimbraFreebusyExchangeAuthPassword];for( ---> var  <--- i=0;i<attrNames.length;

[WARNING] Try to use a single 'var' statement per scope.
<attrNames.length;i++){ ---> var  <--- n=attrNames[i];var value=

[WARNING] Try to use a single 'var' statement per scope.
{var n=attrNames[i]; ---> var  <--- value=currentSettingObj.attrs[n]||defaultValues

[WARNING] Try to use a single 'var' statement per scope.
];if(value==null){ ---> var  <--- errorMsg;if(n==ZaDomain.A_zimbraFreebusyExchangeURL)

[WARNING] Try to use a single 'var' statement per scope.
(errorMsg);return;}else{ ---> var  <--- attrName;if(n==ZaDomain.A_zimbraFreebusyExchangeURL)

[WARNING] Try to use a single 'var' statement per scope.
setAttribute(attrName,value);}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:controller,busyMsg:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
controller,busyMsg:ZaMsg.BUSY_CHECKING_INTEROP_SETTINGS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.getForm().getInstance(); ---> var  <--- attrNames=[ZaDomain.A_zimbraFreebusyExchangeURL,ZaDomain.A_zimbraFreebusyExchangeAuthScheme

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraFreebusyExchangeAuthPassword,ZaDomain.A_zimbraFreebusyExchangeUserOrg];for( ---> var  <--- i=0;i<attrNames.length;

[WARNING] Try to use a single 'var' statement per scope.
<attrNames.length;i++){ ---> var  <--- n=attrNames[i];this.setInstanceValue

[WARNING] Try to use a single 'var' statement per scope.
.setInstanceValue("",n);} ---> var  <--- form=this.getForm();form.

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.ObjectModifiers[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
{var val=[];for( ---> var  <--- i=0;i<sourceValue.length;

[WARNING] Try to use a single 'var' statement per scope.
rights){returnfalse;}for( ---> var  <--- i=0;i<rights.length;

[WARNING] Try to use a single 'var' statement per scope.
"T"+serverStr.substring(8); ---> var  <--- curDate=AjxDateUtil.parseServerDateTime(ajxTKServerStr);var 

[WARNING] Try to use a single 'var' statement per scope.
curDate=AjxDateUtil.parseServerDateTime(ajxTKServerStr); ---> var  <--- formatter=AjxDateFormat.getDateTimeInstance(AjxDateFormat.LONG)

[WARNING] Try to use a single 'var' statement per scope.
var version=ZaServerVersionInfo.version||"N/A"; ---> var  <--- release=ZaServerVersionInfo.release||"N/A";returnAjxMessageFormat

[WARNING] Try to use a single 'var' statement per scope.
1){throwZaIPUtil.ERROR_MASK_NULL;} ---> var  <--- ipPart=cidrStr.substring(0,maskIndex)

[WARNING] Try to use a single 'var' statement per scope.
cidrStr.substring(0,maskIndex); ---> var  <--- maskPart=cidrStr.substring(maskIndex+1)

[WARNING] Try to use a single 'var' statement per scope.
)){throwZaIPUtil.ERROR_MASK_FORMAT;} ---> var  <--- maskData=parseInt(maskPart,10);var 

[WARNING] Try to use a single 'var' statement per scope.
maskData=parseInt(maskPart,10); ---> var  <--- ipData=ZaIPUtil.isValidIP(ipPart);if

[WARNING] Try to use a single 'var' statement per scope.
(ipData,maskData){var totalBit; ---> var  <--- bitPerChunk;if(ipData.ver==ZaIPData.

[WARNING] Try to use a single 'var' statement per scope.
=128;bitPerChunk=16;}} ---> var  <--- allOneLength=Math.floor(maskData/bitPerChunk)

[WARNING] Try to use a single 'var' statement per scope.
Math.floor(maskData/bitPerChunk); ---> var  <--- highOneBitNum=maskData%bitPerChunk;var nonZeroChunk=ZaIPUtil

[WARNING] Try to use a single 'var' statement per scope.
);var highOneBitNum=maskData%bitPerChunk; ---> var  <--- nonZeroChunk=ZaIPUtil.getNonZeroNum(highOneBitNum,bitPerChunk)

[WARNING] Try to use a single 'var' statement per scope.
ZaIPUtil.getNonZeroNum(highOneBitNum,bitPerChunk); ---> var  <--- netIPData=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var netIPData=[];for( ---> var  <--- i=0;i<ipData.fmtArr.

[WARNING] Try to use a single 'var' statement per scope.
else{if(nonZeroChunk!=0){ ---> var  <--- tmp=ipData.fmtArr[i]&nonZeroChunk

[WARNING] Try to use a single 'var' statement per scope.
return0;}var ret=0; ---> var  <--- baseValue=Math.pow(2,chunkSize-

[WARNING] Try to use a single 'var' statement per scope.
2,chunkSize-sobn);for( ---> var  <--- i=0;i<sobn;i++

[WARNING] Try to use a single 'var' statement per scope.
!=-1)?true:false; ---> var  <--- isColon=(netMask.indexOf(":")!=

[WARNING] Try to use a single 'var' statement per scope.
if(!isDot&&!isColon){ ---> var  <--- netValue=parseInt(netMask,16);return

[WARNING] Try to use a single 'var' statement per scope.
returnZaIPUtil.countOneBit(netValue);} ---> var  <--- ipData=ZaIPUtil.isValidIP(netMask);if

[WARNING] Try to use a single 'var' statement per scope.
(!ipData){return0;} ---> var  <--- netBit=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
;}var netBit=0;for( ---> var  <--- i=0;i<ipData.fmtArr.

[WARNING] Try to use a single 'var' statement per scope.
){var cidrIP=cidrData.ipData; ---> var  <--- mask=cidrData.mask;if(cidrIP.

[WARNING] Try to use a single 'var' statement per scope.
ipData.ver){returnfalse;} ---> var  <--- leftBitNum=mask;var currentCmpBit,crtFirstValue,crtSecondValue

[WARNING] Try to use a single 'var' statement per scope.
returnfalse;}var leftBitNum=mask; ---> var  <--- currentCmpBit,crtFirstValue,crtSecondValue;var chunkSize=(

[WARNING] Try to use a single 'var' statement per scope.
mask;var currentCmpBit,crtFirstValue,crtSecondValue; ---> var  <--- chunkSize=(cidrIP.ver==ZaIPData.v4

[WARNING] Try to use a single 'var' statement per scope.
v4)?8:16;for( ---> var  <--- i=0;i<cidrIP.fmtArr.

[WARNING] Try to use a single 'var' statement per scope.
==-1)?false:true; ---> var  <--- isColon=(ipStr.indexOf(":")==

[WARNING] Try to use a single 'var' statement per scope.
4){throwZaIPUtil.ERROR_IP_FORMAT;} ---> var  <--- longValue;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
.ERROR_IP_FORMAT;}var longValue;for( ---> var  <--- i=0;i<chunks.length;

[WARNING] Try to use a single 'var' statement per scope.
;}else{ipCntStr=ipV6Str;} ---> var  <--- zoneIndex=ipCntStr.indexOf("%");var 

[WARNING] Try to use a single 'var' statement per scope.
zoneIndex=ipCntStr.indexOf("%"); ---> var  <--- zoneContent;if(zoneIndex!=-1){

[WARNING] Try to use a single 'var' statement per scope.
ipCntStr){throwZaIPUtil.ERROR_IP_FORMAT;} ---> var  <--- isDottedQuad=ipCntStr.indexOf("::");if

[WARNING] Try to use a single 'var' statement per scope.
){throwZaIPUtil.ERROR_IP_FORMAT;}} ---> var  <--- chunks=ipCntStr.split(":");if

[WARNING] Try to use a single 'var' statement per scope.
8){throwZaIPUtil.ERROR_IP_FORMAT;} ---> var  <--- zeroLocation;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
.ERROR_IP_FORMAT;}var zeroLocation;for( ---> var  <--- i=0;i<chunks.length;

[WARNING] Try to use a single 'var' statement per scope.
8&&(zeroLocation!==undefined)){ ---> var  <--- addZeroNum=8-chunks.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=8-chunks.length;for( ---> var  <--- j=0;j<addZeroNum;j++

[WARNING] Try to use a single 'var' statement per scope.
;}else{ipCntStr=ipVMixStr;} ---> var  <--- ipV6Prefix=ipCntStr.substring(0,7)

[WARNING] Try to use a single 'var' statement per scope.
)){throwZaIPUtil.ERROR_IP_FORMAT;} ---> var  <--- ipV4Str=ipCntStr.substring(7);var 

[WARNING] Try to use a single 'var' statement per scope.
ipV4Str=ipCntStr.substring(7); ---> var  <--- ipData=ZaIPUtil.isIPV4(ipV4Str);if

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- appCtxt=ZaAppCtxt.getFromShell(shell);var 

[WARNING] Try to use a single 'var' statement per scope.
appCtxt=ZaAppCtxt.getFromShell(shell); ---> var  <--- appController=appCtxt.getAppController();appController.

[WARNING] Try to use a single 'var' statement per scope.
);if(ZaSettings.initMethods){ ---> var  <--- cnt=ZaSettings.initMethods.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=ZaSettings.initMethods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraAdminConsoleUIComponents].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
[i]]=true;}} ---> var  <--- soapDoc=AjxSoapDoc.create("GetAllEffectiveRightsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetAllEffectiveRightsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elGrantee=soapDoc.set("grantee",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
elGrantee.setAttribute("by","id"); ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=ZaApp

[WARNING] Try to use a single 'var' statement per scope.
.busyMsg=ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS;try{ ---> var  <--- resp=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
);}catch(ex){} ---> var  <--- comps=ZaSettings.getUIComponents();var cnt

[WARNING] Try to use a single 'var' statement per scope.
var comps=ZaSettings.getUIComponents(); ---> var  <--- cnt=comps.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
comps=ZaSettings.getUIComponents();var  ---> cnt <--- =comps.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=comps.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=comps.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
{};var cosNameList=[]; ---> var  <--- domainNameList=[];if(resp&&resp

[WARNING] Try to use a single 'var' statement per scope.
resp.target instanceof Array){for( ---> var  <--- i=0;i<resp.target.

[WARNING] Try to use a single 'var' statement per scope.
].entries.length){for( ---> var  <--- j=0;j<resp.target[

[WARNING] Try to use a single 'var' statement per scope.
.entries.length;j++){ ---> var  <--- entry=resp.target[i].entries

[WARNING] Try to use a single 'var' statement per scope.
entries[j].entry;for( ---> var  <--- k=0;k<entry.length;

[WARNING] Try to use a single 'var' statement per scope.
].entries.length){for( ---> var  <--- j=0;j<resp.target[

[WARNING] The variable j has already been declared in the same scope...
.entries.length){for(var  ---> j <--- =0;j<resp.target[i

[WARNING] Try to use a single 'var' statement per scope.
.entries.length;j++){ ---> var  <--- entry=resp.target[i].entries

[WARNING] The variable entry has already been declared in the same scope...
entries.length;j++){var  ---> entry <--- =resp.target[i].entries[

[WARNING] Try to use a single 'var' statement per scope.
entries[j].entry;for( ---> var  <--- k=0;k<entry.length;

[WARNING] The variable k has already been declared in the same scope...
[j].entry;for(var  ---> k <--- =0;k<entry.length;k

[WARNING] Try to use a single 'var' statement per scope.
all[0].right;for( ---> var  <--- r in rights){if(!ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
targetObj.entries.length){for( ---> var  <--- i=0;i<targetObj.entries.

[WARNING] Try to use a single 'var' statement per scope.
.entries.length;i++){ ---> var  <--- entry=targetObj.entries[i];if

[WARNING] Try to use a single 'var' statement per scope.
[0].right.length){ ---> var  <--- rights=entry.rights[0].right

[WARNING] The variable rights has already been declared in the same scope...
0].right.length){var  ---> rights <--- =entry.rights[0].right;

[WARNING] Try to use a single 'var' statement per scope.
rights[0].right;for( ---> var  <--- r in rights){if(!ZaSettings.

[WARNING] The variable r has already been declared in the same scope...
[0].right;for(var  ---> r <---  in rights){if(!ZaSettings.targetRights

[WARNING] Try to use a single 'var' statement per scope.
entry.entry.length){for( ---> var  <--- j=0;j<entry.entry.

[WARNING] Try to use a single 'var' statement per scope.
[j].name){for( ---> var  <--- rightName in ZaSettings.targetRights[targetObj.type]

[WARNING] Try to use a single 'var' statement per scope.
targetObj.inDomains.length){for( ---> var  <--- i=0;i<targetObj.inDomains.

[WARNING] The variable i has already been declared in the same scope...
.inDomains.length){for(var  ---> i <--- =0;i<targetObj.inDomains.length

[WARNING] Try to use a single 'var' statement per scope.
.inDomains.length;i++){ ---> var  <--- entry=targetObj.inDomains[i];var 

[WARNING] The variable entry has already been declared in the same scope...
inDomains.length;i++){var  ---> entry <--- =targetObj.inDomains[i];var domainList

[WARNING] Try to use a single 'var' statement per scope.
entry=targetObj.inDomains[i]; ---> var  <--- domainList=[];if(entry.domain

[WARNING] Try to use a single 'var' statement per scope.
entry.domain.length){for( ---> var  <--- j=0;j<entry.domain.

[WARNING] The variable j has already been declared in the same scope...
.domain.length){for(var  ---> j <--- =0;j<entry.domain.length

[WARNING] Try to use a single 'var' statement per scope.
].right.length){for( ---> var  <--- j=0;j<entry.rights[

[WARNING] The variable j has already been declared in the same scope...
.right.length){for(var  ---> j <--- =0;j<entry.rights[0

[WARNING] Try to use a single 'var' statement per scope.
,some:true};}for( ---> var  <--- k=0;k<domainList.length;

[WARNING] Try to use a single 'var' statement per scope.
.busyMsg=ZaMsg.BUSY_REQUESTING_UI_COMP;try{ ---> var  <--- resp=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
csfeParams,reqMgrParams).Body.GetAdminConsoleUICompResponse; ---> var  <--- comps=[];if(!AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
("head")[0];for( ---> var  <--- i=0;i<includes.length;

[WARNING] Try to use a single 'var' statement per scope.
<includes.length;i++){ ---> var  <--- style=document.createElement("link");style

[WARNING] Try to use a single 'var' statement per scope.
"GetAdminExtensionZimletsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- resp=command.invoke(params);var 

[WARNING] Try to use a single 'var' statement per scope.
resp=command.invoke(params); ---> var  <--- zimlets=null;try{if(resp&&

[WARNING] Try to use a single 'var' statement per scope.
zimlets&&zimlets.length>0){ ---> var  <--- includes=new Array();var cssIncludes=

[WARNING] Try to use a single 'var' statement per scope.
{var includes=new Array(); ---> var  <--- cssIncludes=new Array();var cnt=

[WARNING] Try to use a single 'var' statement per scope.
;var cssIncludes=new Array(); ---> var  <--- cnt=zimlets.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var cnt=zimlets.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
ix].zimletContext[0]){ ---> var  <--- zimlet=zimlets[ix].zimlet[0

[WARNING] Try to use a single 'var' statement per scope.
[ix].zimlet[0]; ---> var  <--- zimletContext=zimlets[ix].zimletContext[0

[WARNING] Try to use a single 'var' statement per scope.
zimlet.include.length>0){ ---> var  <--- cnt2=zimlet.include.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=zimlet.include.length;for( ---> var  <--- j=0;j<cnt2;j++

[WARNING] Try to use a single 'var' statement per scope.
zimlet.includeCSS.length>0){ ---> var  <--- cnt3=zimlet.includeCSS.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=zimlet.includeCSS.length;for( ---> var  <--- j=0;j<cnt3;j++

[WARNING] The variable j has already been declared in the same scope...
zimlet.includeCSS.length;for(var  ---> j <--- =0;j<cnt3;j++)

[WARNING] Try to use a single 'var' statement per scope.
zimlets&&zimlets.length>0){ ---> var  <--- cnt=zimlets.length;for(var ix

[WARNING] The variable cnt has already been declared in the same scope...
&&zimlets.length>0){var  ---> cnt <--- =zimlets.length;for(var ix=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=zimlets.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
cnt=zimlets.length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
ix].zimlet[0]){ ---> var  <--- zimlet=zimlets[ix].zimlet[0

[WARNING] The variable zimlet has already been declared in the same scope...
].zimlet[0]){var  ---> zimlet <--- =zimlets[ix].zimlet[0]

[WARNING] Try to use a single 'var' statement per scope.
.name]=true;}}} ---> var  <--- zimletURL=["/service/zimlet/res/Zimlets-nodev_all.js.zgz",".js?v=",appVers,ZaZimbraAdmin

[WARNING] Try to use a single 'var' statement per scope.
var tz_options_values=AjxTimezone.getZonePreferencesOptions(); ---> var  <--- tz_options_labels=AjxTimezone.getZonePreferences();for(

[WARNING] Try to use a single 'var' statement per scope.
=AjxTimezone.getZonePreferences();for( ---> var  <--- i=0;i<tz_options_values.length;

[WARNING] Try to use a single 'var' statement per scope.
create("GetAvailableLocalesRequest","urn:zimbraAccount",null); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
{};params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:(ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_LOCALE}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAvailableLocalesResponse; ---> var  <--- locales=resp.locale;ZaSettings.localeChoices=

[WARNING] Try to use a single 'var' statement per scope.
ZaSettings.localeChoices=[];for( ---> var  <--- i=0;i<locales.length;

[WARNING] Try to use a single 'var' statement per scope.
<locales.length;i++){ ---> var  <--- displayLabel=locales[i].localName;if

[WARNING] Try to use a single 'var' statement per scope.
+locales[i].name;} ---> var  <--- localeId=locales[i].id.replace

[WARNING] Try to use a single 'var' statement per scope.
AjxSoapDoc.create("ChangePasswordRequest","urn:zimbraAccount"); ---> var  <--- el=soapDoc.set("account",uname)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("password",newPass); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
null);this.uname=uname; ---> var  <--- params=new Object();params.noAuthToken

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("csrfTokenSecured",1); ---> var  <--- command=new ZmCsfeCommand();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
==ZaOperation.HELP){continue;} ---> var  <--- style=(opList[btnOrder[ix]]

[WARNING] Try to use a single 'var' statement per scope.
==ZaOperation.HELP){continue;} ---> var  <--- style=(opList[ix].id==

[WARNING] The variable style has already been declared in the same scope...
ZaOperation.HELP){continue;}var  ---> style <--- =(opList[ix].id==ZaOperation

[WARNING] Try to use a single 'var' statement per scope.
this._views[this._currentView]; ---> var  <--- content=elements[ZaAppViewMgr.C_APP_CONTENT];return

[WARNING] Try to use a single 'var' statement per scope.
(!elements){return"";} ---> var  <--- content=elements[ZaAppViewMgr.C_APP_CONTENT];return

[WARNING] Try to use a single 'var' statement per scope.
=this._hidden.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
list=new Array();for( ---> var  <--- cid in components){this._compList.push

[WARNING] Try to use a single 'var' statement per scope.
this._compList.push(cid); ---> var  <--- comp=components[cid];this._components

[WARNING] Try to use a single 'var' statement per scope.
this._components[cid]=comp; ---> var  <--- htmlEl=comp.getHtmlElement();this.

[WARNING] Try to use a single 'var' statement per scope.
this._htmlEl[cid]=htmlEl; ---> var  <--- contId=ZaSettings.get(ZaAppViewMgr.CONT_ID_KEY[

[WARNING] Try to use a single 'var' statement per scope.
(ZaAppViewMgr.CONT_ID_KEY[cid]); ---> var  <--- contEl=document.getElementById(contId);if

[WARNING] Try to use a single 'var' statement per scope.
<components.length;i++){ ---> var  <--- cid=components[i];var cont=

[WARNING] Try to use a single 'var' statement per scope.
{var cid=components[i]; ---> var  <--- cont=this._containers[cid];if

[WARNING] Try to use a single 'var' statement per scope.
[cid];if(cont){ ---> var  <--- contBds=ZaAppViewMgr._getBounds(cont,cid)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppViewMgr._getBounds(cont,cid); ---> var  <--- comp=this._components[cid];if

[WARNING] Try to use a single 'var' statement per scope.
C_APP_CONTENT||cid==ZaAppViewMgr.C_TOOLBAR_TOP){ ---> var  <--- elements=this._views[this._currentView]

[WARNING] Try to use a single 'var' statement per scope.
newHidden=new Array();for( ---> var  <--- i=0;i<this._hidden.

[WARNING] Try to use a single 'var' statement per scope.
=ev.newWidth-ev.oldWidth; ---> var  <--- deltaHeight=ev.newHeight-ev.oldHeight;

[WARNING] Try to use a single 'var' statement per scope.
oldHeight;if(this._isNewWindow){ ---> var  <--- tabs=this._views[this._currentView]

[WARNING] Try to use a single 'var' statement per scope.
.newWidth,Dwt.DEFAULT);} ---> var  <--- topToolbar=this._views[this._currentView]

[WARNING] Try to use a single 'var' statement per scope.
.newWidth,Dwt.DEFAULT);} ---> var  <--- appContent=this._views[this._currentView]

[WARNING] Try to use a single 'var' statement per scope.
}}else{if(deltaHeight){ ---> var  <--- list=[ZaAppViewMgr.C_APP_CHOOSER,ZaAppViewMgr.C_SASH

[WARNING] Try to use a single 'var' statement per scope.
list);}if(deltaWidth){ ---> var  <--- list=[ZaAppViewMgr.C_BANNER,ZaAppViewMgr.C_APP_TABS

[WARNING] The variable list has already been declared in the same scope...
);}if(deltaWidth){var  ---> list <--- =[ZaAppViewMgr.C_BANNER,ZaAppViewMgr.C_APP_TABS,

[WARNING] Try to use a single 'var' statement per scope.
[viewId];if(show){ ---> var  <--- list=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
list=new Array();for( ---> var  <--- cid in elements){list.push(cid

[WARNING] Try to use a single 'var' statement per scope.
(viewId);}else{for( ---> var  <--- cid in elements){elements[cid].

[WARNING] The variable cid has already been declared in the same scope...
viewId);}else{for(var  ---> cid <---  in elements){elements[cid].setLocation

[WARNING] Try to use a single 'var' statement per scope.
elements=this._views[viewId]; ---> var  <--- content=elements[ZaAppViewMgr.C_APP_CONTENT];var 

[WARNING] Try to use a single 'var' statement per scope.
content=elements[ZaAppViewMgr.C_APP_CONTENT]; ---> var  <--- title="";if(content&&content.

[WARNING] Try to use a single 'var' statement per scope.
view=this.getViewContentById(viewId); ---> var  <--- viewController=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getControllerById(viewId); ---> var  <--- popUpOperations="";var typeImg="";if

[WARNING] Try to use a single 'var' statement per scope.
(viewId);var popUpOperations=""; ---> var  <--- typeImg="";if(viewController&&viewController.

[WARNING] Try to use a single 'var' statement per scope.
C_APP_HEADER].setTypeImg(typeImg);} ---> var  <--- appBarOperations=[];if(viewController&&viewController

[WARNING] Try to use a single 'var' statement per scope.
appBarOperations=viewController.getAppBarAction();} ---> var  <--- appBarOrder=[];if(viewController&&viewController

[WARNING] Try to use a single 'var' statement per scope.
,this.treeMinSize-currentWidth);} ---> var  <--- newTreeWidth=currentWidth+delta;skin.setTreeWidth(

[WARNING] Try to use a single 'var' statement per scope.
delta;skin.setTreeWidth(newTreeWidth); ---> var  <--- me=this;setTimeout(function(){

[WARNING] Try to use a single 'var' statement per scope.
,this.sbMinSize-currentHeight);} ---> var  <--- newSBHeight=currentHeight+delta;skin.setSBHeight(

[WARNING] Try to use a single 'var' statement per scope.
delta;skin.setSBHeight(newSBHeight); ---> var  <--- me=this;setTimeout(function(){

[WARNING] Try to use a single 'var' statement per scope.
className;this.setVisible(false); ---> var  <--- params=ZLoginFactory.copyDefaultParams(ZaMsg);params

[WARNING] Try to use a single 'var' statement per scope.
.clientLevelNotice?ZabMsg.clientLevelNotice:""; ---> var  <--- html=ZLoginFactory.getLoginDialogHTML(params);this

[WARNING] Try to use a single 'var' statement per scope.
"GetDomainInfoRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("domain",location.

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by","virtualHostname"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- reqMgrParams={};var resp=ZaRequestMgr.

[WARNING] Try to use a single 'var' statement per scope.
=true;var reqMgrParams={}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetDomainInfoResponse; ---> var  <--- obj={};ZaItem.prototype.initFromJS

[WARNING] Try to use a single 'var' statement per scope.
.TAB_ORDER.length;i++){ ---> var  <--- element=document.getElementById(ZLoginFactory.TAB_ORDER[

[WARNING] Try to use a single 'var' statement per scope.
){if(AjxEnv.isIE){ ---> var  <--- el=ZLoginFactory.getLoginPanel();var loginEl

[WARNING] Try to use a single 'var' statement per scope.
var el=ZLoginFactory.getLoginPanel(); ---> var  <--- loginEl=this.getHtmlElement();for(

[WARNING] Try to use a single 'var' statement per scope.
=this.getHtmlElement();for( ---> var  <--- i=0;i<el.length;

[WARNING] The variable i has already been declared in the same scope...
this.getHtmlElement();for(var  ---> i <--- =0;i<el.length;i

[WARNING] Try to use a single 'var' statement per scope.
window.onkeypress=ZLoginFactory.handleKeyPress;} ---> var  <--- userIdEl=ZLoginFactory.get(ZLoginFactory.USER_ID)

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._callback){ ---> var  <--- password=ZLoginFactory.get(ZLoginFactory.PASSWORD_ID)

[WARNING] Try to use a single 'var' statement per scope.
get(ZLoginFactory.PASSWORD_ID).value; ---> var  <--- newPassword="";var confPassword="";if

[WARNING] Try to use a single 'var' statement per scope.
).value;var newPassword=""; ---> var  <--- confPassword="";if(ZLoginFactory.isShown(

[WARNING] Try to use a single 'var' statement per scope.
element=target;while(element){ ---> var  <--- object=Dwt.getObjectFromElement(element);if

[WARNING] Try to use a single 'var' statement per scope.
detailStr||detailStr==""){for( ---> var  <--- ix in ex){detailStr+=ix;detailStr

[WARNING] Try to use a single 'var' statement per scope.
.setViewMethods[this._iKeyName]){ ---> var  <--- methods=ZaController.setViewMethods[this._iKeyName]

[WARNING] Try to use a single 'var' statement per scope.
ZaController.setViewMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().dialogs;for( ---> var  <--- dlg in dlgs){dlgs[dlg].

[WARNING] Try to use a single 'var' statement per scope.
_errorDialog._showDetail();}else{ ---> var  <--- gotit=false;for(var ix in ZmCsfeException

[WARNING] Try to use a single 'var' statement per scope.
else{var gotit=false;for( ---> var  <--- ix in ZmCsfeException){if(ZmCsfeException[ix

[WARNING] Try to use a single 'var' statement per scope.
){this._showLoginDialog(true); ---> var  <--- msg=ex.code==ZmCsfeException.ACCT_PASS_RECENTLY_USED?

[WARNING] Try to use a single 'var' statement per scope.
}}}}}else{try{ ---> var  <--- response=resp.getResponse();var body

[WARNING] Try to use a single 'var' statement per scope.
var response=resp.getResponse(); ---> var  <--- body=response.Body;if(body.

[WARNING] Try to use a single 'var' statement per scope.
body.AuthResponse.csrfToken._content;} ---> var  <--- isAuthTokenPresent=true;ZmCsfeCommand.noAuth=false;

[WARNING] Try to use a single 'var' statement per scope.
=true;ZmCsfeCommand.noAuth=false; ---> var  <--- soapDoc=AjxSoapDoc.create("GetInfoRequest","urn:zimbraAccount",

[WARNING] Try to use a single 'var' statement per scope.
create("GetInfoRequest","urn:zimbraAccount",null); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;ZaZimbraAdmin.isFirstRequest=true; ---> var  <--- resp=command.invoke(params);ZaZimbraAdmin

[WARNING] The variable resp has already been declared in the same scope...
true;ZaZimbraAdmin.isFirstRequest=true;var  ---> resp <--- =command.invoke(params);ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
if(ZaZimbraAdmin.LOCALE!=null){ ---> var  <--- index=ZaZimbraAdmin.LOCALE.indexOf("_")

[WARNING] Try to use a single 'var' statement per scope.
;}if(ZaAuthenticate.processResponseMethods){ ---> var  <--- cnt=ZaAuthenticate.processResponseMethods.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=ZaAuthenticate.processResponseMethods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
AjxSoapDoc.create("ChangePasswordRequest","urn:zimbraAccount"); ---> var  <--- el=soapDoc.set("account",uname)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("password",newPass); ---> var  <--- resp=null;try{if(ZaController.

[WARNING] Try to use a single 'var' statement per scope.
ZaZimbraAdmin.showSplash(this._shell); ---> var  <--- callback=new AjxCallback(this,this.authCallback

[WARNING] Try to use a single 'var' statement per scope.
ex.code==ZmCsfeException.ACCT_PASS_CHANGE_TOO_SOON){ ---> var  <--- msg=ex.code==ZmCsfeException.ACCT_PASS_RECENTLY_USED?

[WARNING] Try to use a single 'var' statement per scope.
ZaController.initPopupMenuMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
);dwtEv.setFromDhtmlEvent(event); ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- tooltip=shell.getToolTip();tooltip.

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- tooltip=shell.getToolTip();tooltip.

[WARNING] Try to use a single 'var' statement per scope.
.changeActionsStateMethods[this._iKeyName]){ ---> var  <--- methods=ZaController.changeActionsStateMethods[this._iKeyName]

[WARNING] Try to use a single 'var' statement per scope.
ZaController.changeActionsStateMethods[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=methods.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
_actionMenu&&this._popupOperations){for( ---> var  <--- i in this._popupOperations){if(this

[WARNING] The variable i has already been declared in the same scope...
&&this._popupOperations){for(var  ---> i <---  in this._popupOperations){if(this.

[WARNING] Try to use a single 'var' statement per scope.
i].enabled);}}} ---> var  <--- isCurrentController;var currentController=ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
enabled);}}}var isCurrentController; ---> var  <--- currentController=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
;}else{isCurrentController=true;} ---> var  <--- settingMenu=ZaZimbraAdmin.getInstance().getSettingMenu(

[WARNING] Try to use a single 'var' statement per scope.
this._popupOperations&&settingMenu){for( ---> var  <--- i in this._popupOperations){if(this

[WARNING] The variable i has already been declared in the same scope...
._popupOperations&&settingMenu){for(var  ---> i <---  in this._popupOperations){if(this.

[WARNING] Try to use a single 'var' statement per scope.
().getTabGroup();for( ---> var  <--- i=0;i<this._itemsInTabList.

[WARNING] Try to use a single 'var' statement per scope.
._itemsInTabList.length;i++){ ---> var  <--- item=this._itemsInTabList[i];tabGroup

[WARNING] Try to use a single 'var' statement per scope.
viewId=ZaZimbraAdmin._ACCOUNTS_LIST_VIEW;}}} ---> var  <--- acctListController=ZaApp.getInstance().getAccountListController(

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getAccountListController(viewId); ---> var  <--- query="";if(defaultType!=ZaItem.

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraIsAdminAccount]!="TRUE"){ ---> var  <--- queryChunks=[];var params={asyncMode

[WARNING] Try to use a single 'var' statement per scope.
"TRUE"){var queryChunks=[]; ---> var  <--- params={asyncMode:true,callback:this

[WARNING] Try to use a single 'var' statement per scope.
,defaultType,ev,filterQuery)}; ---> var  <--- domainList=ZaApp.getInstance().getDomainList(

[WARNING] Try to use a single 'var' statement per scope.
}domainList=domainList.getArray(); ---> var  <--- cnt=domainList.length;if(cnt>

[WARNING] Try to use a single 'var' statement per scope.
.push("(|");}for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
func.call(this,realParams); ---> var  <--- xFormViewController=paramList[1];};}

[WARNING] Try to use a single 'var' statement per scope.
{var realParams=paramList[0]; ---> var  <--- xFormViewController=paramList[1];xFormViewController._setSelectionAfterCloseView

[WARNING] Try to use a single 'var' statement per scope.
();if(!newPath){ ---> var  <--- rootItem=tree.getCurrentRootItem();var rootPath

[WARNING] Try to use a single 'var' statement per scope.
var rootItem=tree.getCurrentRootItem(); ---> var  <--- rootPath=tree.getABPath(rootItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
(rootItem.getData("dataItem")); ---> var  <--- topPath="";var lastLoc=rootPath.lastIndexOf

[WARNING] Try to use a single 'var' statement per scope.
"dataItem"));var topPath=""; ---> var  <--- lastLoc=rootPath.lastIndexOf(ZaTree.SEPERATOR)

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().popView(); ---> var  <--- tree=ZaZimbraAdmin.getInstance().getOverviewPanelController(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- rootItem=tree.getCurrentRootItem();var rootPath

[WARNING] Try to use a single 'var' statement per scope.
var rootItem=tree.getCurrentRootItem(); ---> var  <--- rootPath=tree.getABPath(rootItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
(rootItem.getData("dataItem")); ---> var  <--- topPath="";var lastLoc=rootPath.lastIndexOf

[WARNING] Try to use a single 'var' statement per scope.
"dataItem"));var topPath=""; ---> var  <--- lastLoc=rootPath.lastIndexOf(ZaTree.SEPERATOR)

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt>0){ ---> var  <--- method=this.validationStack[cnt-1]

[WARNING] Try to use a single 'var' statement per scope.
if(cnt>0){for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaOperation.SAVE]){return;} ---> var  <--- saveItem=settingMenu.getMenuItem(this._popupOperations[

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.ACCOUNTS,ZaSearch.RESOURCES]; ---> var  <--- searchQuery=new ZaSearchQuery(ZaSearch.searchAliasByNameQuery(alias

[WARNING] Try to use a single 'var' statement per scope.
),types,null,false); ---> var  <--- results=ZaSearch.searchByQueryHolder(searchQuery,1,

[WARNING] Try to use a single 'var' statement per scope.
{var tmpArr=new Array(); ---> var  <--- cnt=list.getArray().length;

[WARNING] Try to use a single 'var' statement per scope.
.getArray().length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
,offset,sortAscending,soapDoc,cnt; ---> var  <--- paramList=null;if(!paramsArr){

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror","continue");for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- getSearchDirDoc=soapDoc.set("SearchDirectoryRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- squery=soapDoc.set("query",paramList[

[WARNING] Try to use a single 'var' statement per scope.
maxResults.toString());}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:this,busyMsg:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
this,busyMsg:ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
ZaRequestMgr.invoke(params,reqMgrParams); ---> var  <--- resultStats;if(respObj.isException&&respObj.

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
null,false);}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;if(

[WARNING] Try to use a single 'var' statement per scope.
SearchDirectoryResponse&&batchResp.SearchDirectoryResponse instanceof Array){ ---> var  <--- cnt2=batchResp.SearchDirectoryResponse.length;ZaSearch.

[WARNING] Try to use a single 'var' statement per scope.
=0;this._list=null; ---> var  <--- hasmore=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
null;var hasmore=false;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] The variable i has already been declared in the same scope...
;var hasmore=false;for(var  ---> i <--- =0;i<cnt2;i++)

[WARNING] Try to use a single 'var' statement per scope.
resp=batchResp.SearchDirectoryResponse[i]; ---> var  <--- subList=new ZaItemList(preParams.CONS);

[WARNING] Try to use a single 'var' statement per scope.
subList.size()>0){ ---> var  <--- listVec=subList.getVector();for(

[WARNING] Try to use a single 'var' statement per scope.
=subList.getVector();for( ---> var  <--- j=0;j<listVec.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();j++){ ---> var  <--- item=listVec.get(j);if

[WARNING] Try to use a single 'var' statement per scope.
.getSearchResultStats(resp,resultStats);} ---> var  <--- limit=preParams.limit?preParams.limit:

[WARNING] The variable limit has already been declared in the same scope...
getSearchResultStats(resp,resultStats);}var  ---> limit <--- =preParams.limit?preParams.limit:this

[WARNING] Try to use a single 'var' statement per scope.
=false;this._list=null; ---> var  <--- tempList=new ZaItemList(params.CONS);

[WARNING] Try to use a single 'var' statement per scope.
&&!resp.isException()){ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
tempList.size()>0){ ---> var  <--- listVec=tempList.getVector();for(

[WARNING] Try to use a single 'var' statement per scope.
=tempList.getVector();for( ---> var  <--- i=0;i<listVec.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- item=listVec.get(i);var 

[WARNING] Try to use a single 'var' statement per scope.
item=listVec.get(i); ---> var  <--- target=null;if(item.type==

[WARNING] Try to use a single 'var' statement per scope.
else{target=item;}for( ---> var  <--- f in params.resultFilter){if(target

[WARNING] Try to use a single 'var' statement per scope.
}this._searchTotal=response.searchTotal; ---> var  <--- limit=params.limit?params.limit:

[WARNING] Try to use a single 'var' statement per scope.
_idHash=new Object();for( ---> var  <--- id in this._targetIdHash){this._targetIdHash

[WARNING] The variable id has already been declared in the same scope...
=new Object();for(var  ---> id <---  in this._targetIdHash){this._targetIdHash[

[WARNING] Try to use a single 'var' statement per scope.
var nodes=respNode.childNodes;for( ---> var  <--- i=0;i<nodes.length;

[WARNING] Try to use a single 'var' statement per scope.
<nodes.length;i++){ ---> var  <--- item;if(this._constructor){item

[WARNING] Try to use a single 'var' statement per scope.
(resp[ix] instanceof Array){ ---> var  <--- arr=resp[ix];var len=

[WARNING] Try to use a single 'var' statement per scope.
{var arr=resp[ix]; ---> var  <--- len=arr.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=arr.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- item;if(this._constructor){item

[WARNING] Try to use a single 'var' statement per scope.
.length)){returnidHash;} ---> var  <--- ids=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
ids=new Array();for( ---> var  <--- i=0;i<list.length;

[WARNING] Try to use a single 'var' statement per scope.
<list.length;i++){ ---> var  <--- id=list[i].id;if

[WARNING] Try to use a single 'var' statement per scope.
if(_type==DwtListView.TYPE_LIST_ITEM){ ---> var  <--- item=this.getItemFromElement(div);if

[WARNING] Try to use a single 'var' statement per scope.
if(item&&item.getToolTip){ ---> var  <--- tt_content="";try{tt_content=item.

[WARNING] Try to use a single 'var' statement per scope.
var htmlArr=new Array(3); ---> var  <--- idx=0;htmlArr[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;htmlArr[idx++]="</td></tr></table>"; ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
(query){var keyword=""; ---> var  <--- sw="zimbraDomainName=*";var domflag="@";var 

[WARNING] Try to use a single 'var' statement per scope.
keyword="";var sw="zimbraDomainName=*"; ---> var  <--- domflag="@";var ew="*";if

[WARNING] Try to use a single 'var' statement per scope.
sw="zimbraDomainName=*";var domflag="@"; ---> var  <--- ew="*";if(!query){

[WARNING] Try to use a single 'var' statement per scope.
(!query){returnkeyword;} ---> var  <--- start=query.indexOf(sw);if

[WARNING] Try to use a single 'var' statement per scope.
-1){return[];} ---> var  <--- end=query.indexOf(ew,start+

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- controller=searchCtl;var query="("+ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
getNextId();var controller=searchCtl; ---> var  <--- query="("+ZaDomain.A_domainName;if(

[WARNING] Try to use a single 'var' statement per scope.
;}else{query="";} ---> var  <--- callback=new AjxCallback(this,this.searchAliasDomainCallback

[WARNING] Try to use a single 'var' statement per scope.
:offset,limit:limit}); ---> var  <--- searchParams={query:query,types:[

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- domainArr=new Array();if(response

[WARNING] Try to use a single 'var' statement per scope.
domain.length>0){for( ---> var  <--- i=0;i<response.domain.

[WARNING] Try to use a single 'var' statement per scope.
.domain.length;i++){ ---> var  <--- domain=response.domain[i].name

[WARNING] Try to use a single 'var' statement per scope.
,offset,limit){var paramsArr; ---> var  <--- searchTypes=ZaSearch.ALIASES;var searchQuery="(uid=*"

[WARNING] Try to use a single 'var' statement per scope.
paramsArr;var searchTypes=ZaSearch.ALIASES; ---> var  <--- searchQuery="(uid=*";if(!childQueries){

[WARNING] Try to use a single 'var' statement per scope.
1]+")";}}}} ---> var  <--- controller=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
{paramsArr=new Array();} ---> var  <--- busyId=Dwt.getNextId();var inParams

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- inParams={limit:controller.RESULTSPERPAGE,show

[WARNING] Try to use a single 'var' statement per scope.
openInSearchTab:true,busyId:busyId}; ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
this.searchCallback,inParams);for( ---> var  <--- i=0;i<domainArr.length;

[WARNING] Try to use a single 'var' statement per scope.
<domainArr.length;i++){ ---> var  <--- searchParams={offset:offset,limit:limit

[WARNING] Try to use a single 'var' statement per scope.
,offset,sortAscending,soapDoc,cnt; ---> var  <--- paramList=null;if(!paramsArr){

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror","continue");for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- getSearchDirDoc=soapDoc.set("SearchDirectoryRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- squery=soapDoc.set("query",paramList[

[WARNING] Try to use a single 'var' statement per scope.
maxResults.toString());}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={busyMsg:ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS};

[WARNING] Try to use a single 'var' statement per scope.
={busyMsg:ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
null,false);}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;if(

[WARNING] Try to use a single 'var' statement per scope.
SearchDirectoryResponse&&batchResp.SearchDirectoryResponse instanceof Array){ ---> var  <--- cnt2=batchResp.SearchDirectoryResponse.length;ZaSearch.

[WARNING] Try to use a single 'var' statement per scope.
.length;ZaSearch.TOO_MANY_RESULTS_FLAG=false; ---> var  <--- tempResultList=null;var hasmore=false;var 

[WARNING] Try to use a single 'var' statement per scope.
TOO_MANY_RESULTS_FLAG=false;var tempResultList=null; ---> var  <--- hasmore=false;var searchTotal=0;for

[WARNING] Try to use a single 'var' statement per scope.
tempResultList=null;var hasmore=false; ---> var  <--- searchTotal=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
false;var searchTotal=0;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] The variable i has already been declared in the same scope...
;var searchTotal=0;for(var  ---> i <--- =0;i<cnt2;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt2;i++){ ---> var  <--- resp=batchResp.SearchDirectoryResponse[i];var 

[WARNING] Try to use a single 'var' statement per scope.
resp=batchResp.SearchDirectoryResponse[i]; ---> var  <--- subList=new ZaItemList(preParams.CONS);

[WARNING] Try to use a single 'var' statement per scope.
subList.size()>0){ ---> var  <--- listVec=subList.getVector();for(

[WARNING] Try to use a single 'var' statement per scope.
=subList.getVector();for( ---> var  <--- j=0;j<listVec.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();j++){ ---> var  <--- item=listVec.get(j);if

[WARNING] Try to use a single 'var' statement per scope.
|hasmore;}if(tempResultList){ ---> var  <--- tmpArr=new Array();var cnt=

[WARNING] Try to use a single 'var' statement per scope.
{var tmpArr=new Array(); ---> var  <--- cnt=tempResultList.getArray().length;

[WARNING] The variable cnt has already been declared in the same scope...
var tmpArr=new Array();var  ---> cnt <--- =tempResultList.getArray().length;for

[WARNING] Try to use a single 'var' statement per scope.
.getArray().length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- flag=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
){var flag=false;for( ---> var  <--- i=0;i<this._list.

[WARNING] The variable i has already been declared in the same scope...
{var flag=false;for(var  ---> i <--- =0;i<this._list.size

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
:null,busyId:busyId}); ---> var  <--- searchParams=this.scrollSearchParams;searchParams.offset=

[WARNING] Try to use a single 'var' statement per scope.
searchParams&&searchParams.scrollType=="isAliasSearch"){ ---> var  <--- searchQueryList=new Array();searchQueryList.push

[WARNING] Try to use a single 'var' statement per scope.
);searchQueryList.push(searchParams); ---> var  <--- keyword=ZaListView._getSearchKeyWord(searchParams.query)

[WARNING] Try to use a single 'var' statement per scope.
=new ZaItemList(params.CONS); ---> var  <--- tempResultList=new ZaItemList(params.CONS);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaItemList(params.CONS); ---> var  <--- hasmore=false;if(resp&&!resp

[WARNING] Try to use a single 'var' statement per scope.
&&!resp.isException()){ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
tempList.size()>0){ ---> var  <--- listVec=tempList.getVector();for(

[WARNING] Try to use a single 'var' statement per scope.
=tempList.getVector();for( ---> var  <--- i=0;i<listVec.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- item=listVec.get(i);var 

[WARNING] Try to use a single 'var' statement per scope.
item=listVec.get(i); ---> var  <--- target=null;if(item.type==

[WARNING] Try to use a single 'var' statement per scope.
else{target=item;}for( ---> var  <--- f in params.resultFilter){if(target

[WARNING] Try to use a single 'var' statement per scope.
.more;}if(tempResultList){ ---> var  <--- tmpArr=new Array();var cnt=

[WARNING] Try to use a single 'var' statement per scope.
{var tmpArr=new Array(); ---> var  <--- cnt=tempResultList.getArray().length;

[WARNING] Try to use a single 'var' statement per scope.
.getArray().length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
target=DwtUiEvent.getTarget(ev); ---> var  <--- lv=DwtControl.findControl(target);if

[WARNING] Try to use a single 'var' statement per scope.
){this.setScrollHasMore(false); ---> var  <--- params={offset:this._list.size

[WARNING] Try to use a single 'var' statement per scope.
this._resetColWidth),10]); ---> var  <--- params={scrollDiv:this._getScrollDiv()

[WARNING] Try to use a single 'var' statement per scope.
){var div=params.scrollDiv; ---> var  <--- sh=div.scrollHeight,st=div.

[WARNING] Try to use a single 'var' statement per scope.
.scrollTop,rh=params.rowHeight; ---> var  <--- h=div.clientHeight||Dwt.getSize(

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(div).y; ---> var  <--- target=h+(params.threshold*rh

[WARNING] Try to use a single 'var' statement per scope.
+(params.threshold*rh); ---> var  <--- bottom=sh-st;if(bottom==

[WARNING] Try to use a single 'var' statement per scope.
.sbCallback.run();}} ---> var  <--- rowsNeeded=0;if(bottom<target)

[WARNING] Try to use a single 'var' statement per scope.
getSize(this._listColDiv).y; ---> var  <--- thislistViewHeight=this.getSize().y;

[WARNING] Try to use a single 'var' statement per scope.
=this.getSize().y; ---> var  <--- sashHeight=thislistViewHeight-4;Dwt.setSize(

[WARNING] Try to use a single 'var' statement per scope.
_listDiv.appendChild(this._headerSash); ---> var  <--- sashY=-headerHeight;Dwt.setLocation(this

[WARNING] Try to use a single 'var' statement per scope.
this._headerSashX=ev.docX;} ---> var  <--- thislistViewX=Dwt.getLocation(this._listDiv)

[WARNING] Try to use a single 'var' statement per scope.
getLocation(this._listDiv).x; ---> var  <--- sashX=ev.docX-thislistViewX;Dwt.

[WARNING] Try to use a single 'var' statement per scope.
){var opList=this._opList; ---> var  <--- btnOrder=this._btnOrder;if(!AjxUtil

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(btnOrder)&&opList){ ---> var  <--- cnt=btnOrder.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var cnt=btnOrder.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
else{if(opList){for( ---> var  <--- ix in opList){if(opList[ix

[WARNING] The variable ix has already been declared in the same scope...
{if(opList){for(var  ---> ix <---  in opList){if(opList[ix]

[WARNING] Try to use a single 'var' statement per scope.
){var h=0;for( ---> var  <--- i in this._buttons){h=Math

[WARNING] The variable hideText has already been declared in the same scope...
,height,hideText,showMoreActions){var  ---> hideText <--- =hideText||false;var showMoreActions=showMoreActions||

[WARNING] Try to use a single 'var' statement per scope.
){var hideText=hideText||false; ---> var  <--- showMoreActions=showMoreActions||true;var moreActionsButton=this

[WARNING] The variable showMoreActions has already been declared in the same scope...
{var hideText=hideText||false;var  ---> showMoreActions <--- =showMoreActions||true;var moreActionsButton=this.

[WARNING] Try to use a single 'var' statement per scope.
false;var showMoreActions=showMoreActions||true; ---> var  <--- moreActionsButton=this._buttons[ZaOperation.MORE_ACTIONS]

[WARNING] Try to use a single 'var' statement per scope.
this._buttons[ZaOperation.MORE_ACTIONS]; ---> var  <--- el=this.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
!el){return;}for( ---> var  <--- i in this._buttons){var b=

[WARNING] Try to use a single 'var' statement per scope.
(var i in this._buttons){ ---> var  <--- b=this._buttons[i];if

[WARNING] Try to use a single 'var' statement per scope.
b.setVisible(true);}} ---> var  <--- offset=el.firstChild.offsetWidth;if(

[WARNING] Try to use a single 'var' statement per scope.
offsetWidth;if(offset>width){ ---> var  <--- totalVisibleButtonWidth=this.getAlwaysVisibleButtonWidths();if(

[WARNING] Try to use a single 'var' statement per scope.
totalVisibleButtonWidth+=moreActionsButton.getW();} ---> var  <--- btnList=null;if(!AjxUtil.isEmpty

[WARNING] Try to use a single 'var' statement per scope.
else{btnList=this._btnList;} ---> var  <--- cnt=btnList.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var cnt=btnList.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- b=this._buttons[btnList[ix]

[WARNING] The variable b has already been declared in the same scope...
ix<cnt;ix++){var  ---> b <--- =this._buttons[btnList[ix]]

[WARNING] Try to use a single 'var' statement per scope.
.getVisible()){continue;} ---> var  <--- text=b.getText();if(

[WARNING] Try to use a single 'var' statement per scope.
"");}if(showMoreActions){ ---> var  <--- w=b.getW();totalVisibleButtonWidth+=

[WARNING] Try to use a single 'var' statement per scope.
if(type==ZaOperation.TYPE_MENU){ ---> var  <--- menu=new ZaPopupMenu(b,null,null

[WARNING] Try to use a single 'var' statement per scope.
var ctrl=new DwtControl(this); ---> var  <--- html=ZaToolBar.getSeparatorHtml();ctrl.

[WARNING] Try to use a single 'var' statement per scope.
var ctrl=new DwtControl(this); ---> var  <--- html=ZaToolBar.getLeftBracketHtml();ctrl.

[WARNING] Try to use a single 'var' statement per scope.
var ctrl=new DwtControl(this); ---> var  <--- html=ZaToolBar.getRightBracketHtml();ctrl.

[WARNING] Try to use a single 'var' statement per scope.
;var index=-1;for( ---> var  <--- i=0;i<this._btnOrder.

[WARNING] Try to use a single 'var' statement per scope.
.RIGHT_BRACKET){continue;}else{ ---> var  <--- op=this._opList[this._btnOrder[

[WARNING] Try to use a single 'var' statement per scope.
function(){var w=0; ---> var  <--- isAfterNoneOp=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
0;var isAfterNoneOp=false;for( ---> var  <--- i=0;i<this._btnOrder.

[WARNING] Try to use a single 'var' statement per scope.
._btnOrder.length;i++){ ---> var  <--- b=this._buttons[this._btnOrder[

[WARNING] Try to use a single 'var' statement per scope.
this._buttons[ZaOperation.MORE_ACTIONS]; ---> var  <--- moreActionMenu;if(moreActionsButton){moreActionMenu=moreActionsButton

[WARNING] Try to use a single 'var' statement per scope.
moreActionsButton.getVisible()){for( ---> var  <--- i=0;i<this._btnOrder.

[WARNING] Try to use a single 'var' statement per scope.
._btnOrder.length;i++){ ---> var  <--- opId=this._btnOrder[i];if

[WARNING] Try to use a single 'var' statement per scope.
==ZaOperation.MORE_ACTIONS){break;} ---> var  <--- toolbarButton=this._buttons[opId];if

[WARNING] Try to use a single 'var' statement per scope.
if(!toolbarButton){continue;} ---> var  <--- visiblity=toolbarButton.getVisible();var menuItem

[WARNING] Try to use a single 'var' statement per scope.
var visiblity=toolbarButton.getVisible(); ---> var  <--- menuItem=moreActionMenu.getMenuItem(opId);if

[WARNING] Try to use a single 'var' statement per scope.
this._buttons[ZaOperation.MORE_ACTIONS]; ---> var  <--- moreActionMenu;if(moreActionsButton){moreActionMenu=moreActionsButton

[WARNING] Try to use a single 'var' statement per scope.
function(){var templateId="dwt.Widgets#ZToolbarButton"; ---> var  <--- data={id:this._htmlElId};

[WARNING] Try to use a single 'var' statement per scope.
var opSz=this.getSize(); ---> var  <--- h=opSz.y;var w=opSz

[WARNING] Try to use a single 'var' statement per scope.
);var h=opSz.y; ---> var  <--- w=opSz.x;this._treePanel.

[WARNING] Try to use a single 'var' statement per scope.
){var on=DBG._showTiming; ---> var  <--- newState=on?"off":"on";alert(

[WARNING] Try to use a single 'var' statement per scope.
("Turning debug timing info "+newState);}else{ ---> var  <--- level=argv[1];if(level

[WARNING] Try to use a single 'var' statement per scope.
"CheckRightRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elGrantee=soapDoc.set("grantee",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
elGrantee.setAttribute("by","id"); ---> var  <--- elTarget=soapDoc.set("target",targetVal)

[WARNING] Try to use a single 'var' statement per scope.
elTarget.setAttribute("by",targetBy); ---> var  <--- elRight=soapDoc.set("right",right)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("right",right); ---> var  <--- cnt=attrs.length;if(cnt>

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt>0){ ---> var  <--- elAttrs=soapDoc.set("attrs","")

[WARNING] Try to use a single 'var' statement per scope.
set("attrs","");for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- elA=soapDoc.set("a",attrs[

[WARNING] Try to use a single 'var' statement per scope.
[i].n);}} ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=ZaApp

[WARNING] Try to use a single 'var' statement per scope.
.busyMsg=ZaMsg.BUSY_REQUESTING_ACCESS_RIGHTS;try{ ---> var  <--- resp=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
show(true);}}else{ ---> var  <--- ctl=this._appCtxt.getAppController().

[WARNING] Try to use a single 'var' statement per scope.
.getAppController().getOverviewPanelController(); ---> var  <--- homePath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
getFolderTree().setSelectionByPath(homePath); ---> var  <--- historyObject=new ZaHistory(homePath,ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
_appCtxt,this._container,this); ---> var  <--- viewId=ZaZimbraAdmin._ACCOUNTS_LIST_VIEW;if(isAlias)

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.domainSearchCallback

[WARNING] Try to use a single 'var' statement per scope.
domainSearchCallback,{busyId:busyId}); ---> var  <--- searchParams={query:query,types:[

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.domainSearchCallback

[WARNING] Try to use a single 'var' statement per scope.
:domainItem,busyId:busyId}); ---> var  <--- searchParams={query:this._domainQuery,types

[WARNING] Try to use a single 'var' statement per scope.
}else{ZaSearch.TOO_MANY_RESULTS_FLAG=false; ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- domainList=new ZaItemList(ZaDomain);domainList.

[WARNING] Try to use a single 'var' statement per scope.
domainItem.setError(ZaMsg.ERROR_NO_SUCH_DOMAIN); ---> var  <--- event=new DwtXFormsEvent(this,domainItem,domainItem

[WARNING] Try to use a single 'var' statement per scope.
._serverList.getArray().length; ---> var  <--- myServer=new ZaServer(this);for(

[WARNING] Try to use a single 'var' statement per scope.
=new ZaServer(this);for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(ZaServer);if(tmpArray){ ---> var  <--- resArray=new Array();var cnt=

[WARNING] Try to use a single 'var' statement per scope.
{var resArray=new Array(); ---> var  <--- cnt=tmpArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=tmpArray.length;for( ---> var  <--- i=0;i>cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
{var resArray=new Array(); ---> var  <--- tmpArray=this._mbsList.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._mbsList.getArray(); ---> var  <--- cnt=tmpArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=tmpArray.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._serverList.getIdHash(); ---> var  <--- mailServerArr=[];for(var i in 

[WARNING] Try to use a single 'var' statement per scope.
;var mailServerArr=[];for( ---> var  <--- i in hashMap){if(hashMap[i

[WARNING] Try to use a single 'var' statement per scope.
=this._serverList.getIdHash(); ---> var  <--- mailServerArr=[];for(var i in 

[WARNING] Try to use a single 'var' statement per scope.
;var mailServerArr=[];for( ---> var  <--- i in hashMap){if(hashMap[i

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaServer.A_zimbraMailClientServiceEnabled]){ ---> var  <--- obj=new Object();obj[ZaServer

[WARNING] Try to use a single 'var' statement per scope.
.getArray().length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.hasGlobalCOSSListAccess()){ ---> var  <--- cosNameList=ZaApp.getInstance()._cosNameList;

[WARNING] Try to use a single 'var' statement per scope.
;returnthis._cosList;}for( ---> var  <--- i=0;i<cosNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
="(|"+query+")";}} ---> var  <--- searchParams={query:query,types:[

[WARNING] Try to use a single 'var' statement per scope.
.searchDirectory(searchParams);}else{ ---> var  <--- response=ZaSearch.searchDirectory(searchParams).Body

[WARNING] Try to use a single 'var' statement per scope.
if(!response){return;} ---> var  <--- searchDirectoryResponse=response.SearchDirectoryResponse;if(!searchDirectoryResponse

[WARNING] Try to use a single 'var' statement per scope.
getDomainList();if(domainList){ ---> var  <--- domainListArray=domainList.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=domainList.getArray();for( ---> var  <--- i=0;i<domainListArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<domainListArray.length;i++){ ---> var  <--- domain=domainListArray[i];if(domain

[WARNING] Try to use a single 'var' statement per scope.
"GetAllSkinsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=ZaApp

[WARNING] Try to use a single 'var' statement per scope.
try{this._installedSkins=[]; ---> var  <--- resp=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
resp&&resp.skin){for( ---> var  <--- i=0;i<resp.skin.

[WARNING] Try to use a single 'var' statement per scope.
{var skinChoices=[];for( ---> var  <--- i=0;i<skins.length;

[WARNING] Try to use a single 'var' statement per scope.
<skins.length;i++){ ---> var  <--- skin=skins[i];skinChoices.push

[WARNING] Try to use a single 'var' statement per scope.
(detls instanceof Array)){for( ---> var  <--- key in detls){this._cosList.remove

[WARNING] Try to use a single 'var' statement per scope.
.getArray().length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
0){return;}var tabId; ---> var  <--- closable=true;var selected=true;var 

[WARNING] Try to use a single 'var' statement per scope.
}var tabId;var closable=true; ---> var  <--- selected=true;var onOpen=null;if

[WARNING] Try to use a single 'var' statement per scope.
closable=true;var selected=true; ---> var  <--- onOpen=null;if(typeofarguments[0

[WARNING] Try to use a single 'var' statement per scope.
{tabId=arguments[0];} ---> var  <--- tabGroup=this.getTabGroup();var appView

[WARNING] Try to use a single 'var' statement per scope.
var tabGroup=this.getTabGroup(); ---> var  <--- appView=this.getViewById(tabId)[ZaAppViewMgr

[WARNING] Try to use a single 'var' statement per scope.
(tabId)[ZaAppViewMgr.C_APP_CONTENT]; ---> var  <--- params={id:tabId,icon:appView

[WARNING] Try to use a single 'var' statement per scope.
selected:selected,onOpen:onOpen}; ---> var  <--- tab=new ZaAppTab(tabGroup,params);

[WARNING] Try to use a single 'var' statement per scope.
this.updateSearchTab();}else{ ---> var  <--- appView=this.getViewById(tabId)[ZaAppViewMgr

[WARNING] Try to use a single 'var' statement per scope.
(tabId)[ZaAppViewMgr.C_APP_CONTENT]; ---> var  <--- icon=appView.getTabIcon();var titleLabel

[WARNING] Try to use a single 'var' statement per scope.
var icon=appView.getTabIcon(); ---> var  <--- titleLabel=appView.getTabTitle();tab.

[WARNING] Try to use a single 'var' statement per scope.
.removeHiddenView(viewId);}for( ---> var  <--- n in view){if(view[n

[WARNING] Try to use a single 'var' statement per scope.
?DwtEvent.ONMOUSEENTER:DwtEvent.ONMOUSEOVER; ---> var  <--- leaveEvent=AjxEnv.isIE?DwtEvent.ONMOUSELEAVE:

[WARNING] Try to use a single 'var' statement per scope.
AjxMsg.detail,DwtDialog.ALIGN_LEFT); ---> var  <--- id=contextId?ZaId.getDialogId(ZaId.

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._detailCellId); ---> var  <--- detailBtn=this._button[ZaErrorDialog.DETAIL_BUTTON]

[WARNING] Try to use a single 'var' statement per scope.
;var html=new Array(); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
.XFormModifiers[this._iKeyName]){ ---> var  <--- methods=ZaTabView.XFormModifiers[this._iKeyName]

[WARNING] Try to use a single 'var' statement per scope.
ZaTabView.XFormModifiers[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaTabView.ObjectModifiers[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
var cntAttrs=attrsArray.length;for( ---> var  <--- i=0;i<cntAttrs;i++

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(rightsArray)){ ---> var  <--- cntRights=rightsArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cntRights=rightsArray.length;for( ---> var  <--- i=0;i<cntRights;i++

[WARNING] The variable i has already been declared in the same scope...
cntRights=rightsArray.length;for(var  ---> i <--- =0;i<cntRights;i++)

[WARNING] Try to use a single 'var' statement per scope.
}if(!this._extraButtons){ ---> var  <--- helpButton=new DwtDialog_ButtonDescriptor(ZaXDialog.HELP_BUTTON,ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
titleWidth=Dwt.__checkPxVal(titleWidth); ---> var  <--- titleId=this._htmlElId+"_title";var titleElement

[WARNING] Try to use a single 'var' statement per scope.
var titleId=this._htmlElId+"_title"; ---> var  <--- titleElement=document.getElementById(titleId);if

[WARNING] Try to use a single 'var' statement per scope.
_iKeyName:this.toString();} ---> var  <--- title=this.getTitle();if(

[WARNING] Try to use a single 'var' statement per scope.
title=this.toString();} ---> var  <--- viewForPopup;if(this.miniType==1)

[WARNING] Try to use a single 'var' statement per scope.
;}else{viewForPopup=this;} ---> var  <--- taskItem=new ZaTaskItem(viewForPopup,cacheName,title

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.focusFirst(); ---> var  <--- kbMgr=this._shell.getKeyboardMgr();

[WARNING] Try to use a single 'var' statement per scope.
.XFormModifiers[this._iKeyName]){ ---> var  <--- methods=ZaXDialog.XFormModifiers[this._iKeyName]

[WARNING] Try to use a single 'var' statement per scope.
ZaXDialog.XFormModifiers[this._iKeyName]; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(),"background-color");var row2; ---> var  <--- col2;row2=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
(this,this._helpButtonListener)); ---> var  <--- nextButton=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.NEXT_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
(this,this.goNext)); ---> var  <--- prevButton=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.PREV_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
(this,this.goPrev)); ---> var  <--- finishButton=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.FINISH_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
newXFormMetaData={items:[]}; ---> var  <--- stepChoices=xFormMetaData.items[0];stepChoices

[WARNING] Try to use a single 'var' statement per scope.
="step_container";stepChoices.colSpan=1; ---> var  <--- content=xFormMetaData.items[3];var 

[WARNING] Try to use a single 'var' statement per scope.
content=xFormMetaData.items[3]; ---> var  <--- contentContainerCssClass=content.containerCssClass;if(contentContainerCssClass)

[WARNING] Try to use a single 'var' statement per scope.
ldapPort=this.getInheritedProperty("ldapPort"); ---> var  <--- ldapSSLPort=this.getInheritedProperty("ldapSSLPort");this

[WARNING] Try to use a single 'var' statement per scope.
.defPort=ldapPort?ldapPort:"389"; ---> var  <--- instance=this.getForm().getInstance(

[WARNING] Try to use a single 'var' statement per scope.
null&&itemVal.length>0){ ---> var  <--- URLChunks=itemVal.split(/(:\/\/)/);if

[WARNING] Try to use a single 'var' statement per scope.
val="";if(itemVal){ ---> var  <--- URLChunks=itemVal.split(/[:\/]/);if

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isIE){ ---> var  <--- urlPortPair=itemVal.substring(7);var 

[WARNING] Try to use a single 'var' statement per scope.
urlPortPair=itemVal.substring(7); ---> var  <--- chunks=urlPortPair.split(":");val

[WARNING] Try to use a single 'var' statement per scope.
{var val;if(itemVal){ ---> var  <--- URLChunks=itemVal.split(/[:\/]/);if

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isIE){ ---> var  <--- urlPortPair=itemVal.substring(7);var 

[WARNING] Try to use a single 'var' statement per scope.
urlPortPair=itemVal.substring(7); ---> var  <--- chunks=urlPortPair.split(":");val

[WARNING] Try to use a single 'var' statement per scope.
().defSSLPort;returntrue;} ---> var  <--- val=false;var protocol="ldap://";if

[WARNING] Try to use a single 'var' statement per scope.
returntrue;}var val=false; ---> var  <--- protocol="ldap://";if(itemVal!=null&&

[WARNING] Try to use a single 'var' statement per scope.
null&&itemVal.length>0){ ---> var  <--- URLChunks=itemVal.split(/[:\/]/);protocol

[WARNING] Try to use a single 'var' statement per scope.
val="";if(itemVal){ ---> var  <--- URLChunks=itemVal.split(":");if

[WARNING] Try to use a single 'var' statement per scope.
val="";if(itemVal){ ---> var  <--- URLChunks=itemVal.split(":");if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){var value=null;if( ---> eval <--- ("ins."+ref)!=null){value

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+ref)!=null){value= ---> eval <--- ("ins."+ref)/1048576;if(

[WARNING] Try to use a single 'var' statement per scope.
{var pathParts=new Array(); ---> var  <--- val=Math.round(value*1048576)

[WARNING] Try to use a single 'var' statement per scope.
]=val;returnval;}} ---> var  <--- cnt=pathParts.length-1;var obj

[WARNING] Try to use a single 'var' statement per scope.
var cnt=pathParts.length-1; ---> var  <--- obj=instance[pathParts[0]];

[WARNING] Try to use a single 'var' statement per scope.
[pathParts[0]];for( ---> var  <--- ix=1;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- value=(eval("ins._defaultValues."+_ref)!=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
"/",".");var value=( ---> eval <--- ("ins._defaultValues."+_ref)!=null)?Number

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+_ref)!=null)?Number( ---> eval <--- ("ins._defaultValues."+_ref)/1048576).toFixed

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- value=(eval("ins."+_ref)!=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
"/",".");var value=( ---> eval <--- ("ins."+_ref)!=null)?Number

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
+_ref)!=null)?Number( ---> eval <--- ("ins."+_ref)/1048576).toFixed

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- radioBoxLabel1=this.getInheritedProperty("radioBoxLabel1");var 

[WARNING] Try to use a single 'var' statement per scope.
radioBoxLabel1=this.getInheritedProperty("radioBoxLabel1"); ---> var  <--- radioBoxLabel2=this.getInheritedProperty("radioBoxLabel2");var 

[WARNING] Try to use a single 'var' statement per scope.
radioBoxLabel2=this.getInheritedProperty("radioBoxLabel2"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- radioBox1={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
.checked=!value;}}; ---> var  <--- radioBox2={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
,instanceValue,event){}}; ---> var  <--- selectChck={type:_OSELECT_CHECK_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
);},cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:3

[WARNING] Try to use a single 'var' statement per scope.
prefixes=this.getInheritedProperty("choicePrefixes"); ---> var  <--- cnt=prefixes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=prefixes.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
var value=this.getInstanceValue(); ---> var  <--- normalizedValue=new Array();if(typeof

[WARNING] Try to use a single 'var' statement per scope.
"object"||value instanceof Array){for( ---> var  <--- a in value){normalizedValue[a]=

[WARNING] Try to use a single 'var' statement per scope.
.split(",");}}} ---> var  <--- prefixes=this.getInheritedProperty("choicePrefixes");var 

[WARNING] Try to use a single 'var' statement per scope.
prefixes=this.getInheritedProperty("choicePrefixes"); ---> var  <--- numPrefixes=prefixes.length;var numValues=normalizedValue

[WARNING] Try to use a single 'var' statement per scope.
);var numPrefixes=prefixes.length; ---> var  <--- numValues=normalizedValue.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var numValues=normalizedValue.length;for( ---> var  <--- i=0;i<numValues;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<numValues;i++){ ---> var  <--- hasPrefix=false;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
){var hasPrefix=false;for( ---> var  <--- j=0;j<numPrefixes;j++

[WARNING] Try to use a single 'var' statement per scope.
var normalizedValues=this.getNormalizedInstanceValue(); ---> var  <--- newValues=[];var found=false;

[WARNING] Try to use a single 'var' statement per scope.
();var newValues=[]; ---> var  <--- found=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
];var found=false;for( ---> var  <--- i=0;i<normalizedValues.length;

[WARNING] Try to use a single 'var' statement per scope.
)){newValues=[];} ---> var  <--- modelItem=this.getModelItem();if(

[WARNING] Try to use a single 'var' statement per scope.
var normalizedValues=this.getNormalizedInstanceValue(); ---> var  <--- newValues=[];var found=false;

[WARNING] Try to use a single 'var' statement per scope.
();var newValues=[]; ---> var  <--- found=false;var i;if(newValue

[WARNING] Try to use a single 'var' statement per scope.
=[];var found=false; ---> var  <--- i;if(newValue instanceof Array||typeofnewValue

[WARNING] Try to use a single 'var' statement per scope.
(0,1)!="-"){ ---> var  <--- prefix="+";for(i=0;

[WARNING] Try to use a single 'var' statement per scope.
)){newValues=[];} ---> var  <--- modelItem=this.getModelItem();if(

[WARNING] Try to use a single 'var' statement per scope.
prefixes=this.getInheritedProperty("choicePrefixes"); ---> var  <--- ref=this.getFormGlobalRef()+".getItemById('"+

[WARNING] Try to use a single 'var' statement per scope.
+this.getId()+"')"; ---> var  <--- id=this.getId();var retVal

[WARNING] Try to use a single 'var' statement per scope.
var id=this.getId(); ---> var  <--- retVal=["<tr><td class=",cssClass,' onmouseover="',ref

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.Available,"</td></tr></table></td>"];for( ---> var  <--- i=0;i<prefixes.length;

[WARNING] Try to use a single 'var' statement per scope.
zimlet=ZaZimlet.zimlets[zimletName]; ---> var  <--- desc;if(!zimlet){desc=

[WARNING] Try to use a single 'var' statement per scope.
{desc=ZaMsg.Zimlet_Description_Loading;}} ---> var  <--- dwtEv=new DwtUiEvent(true);dwtEv.

[WARNING] Try to use a single 'var' statement per scope.
);dwtEv.setFromDhtmlEvent(event); ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- tooltip=shell.getToolTip();var html

[WARNING] Try to use a single 'var' statement per scope.
var tooltip=shell.getToolTip(); ---> var  <--- html=new Array(20);var idx

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- tooltip=shell.getToolTip();tooltip.

[WARNING] Try to use a single 'var' statement per scope.
(itemNum);if(chEl){ ---> var  <--- el=chEl[1];el.className

[WARNING] Try to use a single 'var' statement per scope.
.className=this.getChoiceSelectedCssClass(); ---> var  <--- checks=el.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
(itemNum);if(chEl){ ---> var  <--- el=chEl[1];el.className

[WARNING] Try to use a single 'var' statement per scope.
.className=this.getChoiceCssClass(); ---> var  <--- checks=el.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
,prefixIndex].join(""); ---> var  <--- chEl=this.getElement(id);if

[WARNING] Try to use a single 'var' statement per scope.
.className=this.getChoiceSelectedCssClass(); ---> var  <--- checks=chEl.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
,prefixIndex].join(""); ---> var  <--- chEl=this.getElement(id);if

[WARNING] Try to use a single 'var' statement per scope.
.className=this.getChoiceCssClass(); ---> var  <--- checks=chEl.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
this.getInheritedProperty("choicePrefixes");for( ---> var  <--- i=0;i<prefixes.length;

[WARNING] Try to use a single 'var' statement per scope.
<prefixes.length;i++){ ---> var  <--- id=[this.getId(),"_choice_"

[WARNING] Try to use a single 'var' statement per scope.
,i].join(""); ---> var  <--- chEl=this.getElement(id);if

[WARNING] Try to use a single 'var' statement per scope.
=this.getChoiceCssClass()+"_disabled"; ---> var  <--- radios=chEl.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
this.getInheritedProperty("choicePrefixes");for( ---> var  <--- i=0;i<prefixes.length;

[WARNING] Try to use a single 'var' statement per scope.
<prefixes.length;i++){ ---> var  <--- id=[this.getId(),"_choice_"

[WARNING] Try to use a single 'var' statement per scope.
,i].join(""); ---> var  <--- chEl=this.getElement(id);if

[WARNING] Try to use a single 'var' statement per scope.
.className=this.getChoiceCssClass(); ---> var  <--- radios=chEl.getElementsByTagName("input");if

[WARNING] Try to use a single 'var' statement per scope.
.innerHTML=this.getChoicesHTML(); ---> var  <--- normalizedValues=this.getNormalizedInstanceValue();this.

[WARNING] Try to use a single 'var' statement per scope.
);if(normalizedValues){for( ---> var  <--- i=0;i<normalizedValues.length;

[WARNING] Try to use a single 'var' statement per scope.
<normalizedValues.length;i++){ ---> var  <--- itemNum=this.getChoiceNum(normalizedValues[i]

[WARNING] Try to use a single 'var' statement per scope.
if(!choices){return;} ---> var  <--- values=choices.values;if(!values

[WARNING] Try to use a single 'var' statement per scope.
if(!values){return;} ---> var  <--- cnt=values.length;var prefixes=this

[WARNING] Try to use a single 'var' statement per scope.
;}var cnt=values.length; ---> var  <--- prefixes=this.getInheritedProperty("choicePrefixes");var 

[WARNING] Try to use a single 'var' statement per scope.
prefixes=this.getInheritedProperty("choicePrefixes"); ---> var  <--- numPrefixes=prefixes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var numPrefixes=prefixes.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- chkbx=this.getElement([this.getId

[WARNING] Try to use a single 'var' statement per scope.
i].join("")); ---> var  <--- chkBoxTD=this.getElement([this.getId

[WARNING] Try to use a single 'var' statement per scope.
;chkbx.disabled=true;for( ---> var  <--- j=0;j<numPrefixes;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<numPrefixes;j++){ ---> var  <--- id=[this.getId(),"_radiochoiceitem_"

[WARNING] Try to use a single 'var' statement per scope.
,j].join(""); ---> var  <--- TDid=[this.getId(),"_choice_"

[WARNING] Try to use a single 'var' statement per scope.
,j].join(""); ---> var  <--- radio=this.getElement(id);var 

[WARNING] Try to use a single 'var' statement per scope.
radio=this.getElement(id); ---> var  <--- tdEl=this.getElement(TDid);tdEl

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- selectLabel=this.getInheritedProperty("selectLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
selectLabel=this.getInheritedProperty("selectLabel"); ---> var  <--- selectLabelLocation=this.getInheritedProperty("selectLabelLocation");var 

[WARNING] Try to use a single 'var' statement per scope.
selectLabelLocation=this.getInheritedProperty("selectLabelLocation"); ---> var  <--- choicesWidth=this.getInheritedProperty("choicesWidth")||"500px"

[WARNING] Try to use a single 'var' statement per scope.
this.getInheritedProperty("choicesWidth")||"500px"; ---> var  <--- selectChck={type:_ZA_ZIMLET_SELECT_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
bmolsnr:true,cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:4

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- selectLabel=this.getInheritedProperty("selectLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
selectLabel=this.getInheritedProperty("selectLabel"); ---> var  <--- choicesWidth=AjxEnv.isIE?"275px":(this

[WARNING] Try to use a single 'var' statement per scope.
.getInheritedProperty("choicesWidth")||"275px"); ---> var  <--- selectChck={type:_OSELECT_CHECK_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
bmolsnr:true,cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:3

[WARNING] Try to use a single 'var' statement per scope.
]=val;returnval;}} ---> var  <--- cnt=pathParts.length-1;var obj

[WARNING] Try to use a single 'var' statement per scope.
var cnt=pathParts.length-1; ---> var  <--- obj=instance[pathParts[0]];

[WARNING] Try to use a single 'var' statement per scope.
[pathParts[0]];for( ---> var  <--- ix=1;ix<cnt;ix++

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.replace("/",".");return ---> eval <--- ("ins._defaultValues."+_ref);};Cos_String_XModelItem.

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
.replace("/",".");return ---> eval <--- ("ins."+_ref);};Cos_String_XModelItem.

[WARNING] Try to use a single 'var' statement per scope.
if(selectionIsOpen){returnvalue;} ---> var  <--- choices=this.getChoices();for(

[WARNING] Try to use a single 'var' statement per scope.
=this.getChoices();for( ---> var  <--- i=0;i<choices.length;

[WARNING] Try to use a single 'var' statement per scope.
<choices.length;i++){ ---> var  <--- choice=choices[i];if(AjxUtil

[WARNING] Try to use a single 'var' statement per scope.
=this.getSuperValue(instance);} ---> var  <--- POLLING_REGEX=/^([0-9])+([dhms]|ms)$/;if(!POLLING_REGEX.test

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- lst=eval("ins._defaultValues."+_ref);if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
("/",".");var lst= ---> eval <--- ("ins._defaultValues."+_ref);if(lst)

[WARNING] Try to use a single 'var' statement per scope.
getItemDelimiter());}}else{ ---> var  <--- retval=[];if(!(lst

[WARNING] Try to use a single 'var' statement per scope.
){lst=[lst];} ---> var  <--- cnt=lst.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=lst.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
split(this.getInputDelimiter()); ---> eval <--- ("ins."+ref+" = value");this.

[WARNING] Try to use a single 'var' statement per scope.
,value,ref);}else{ ---> var  <--- value=eval("ins."+ref+" = val")

[WARNING] The variable value has already been declared in the same scope...
value,ref);}else{var  ---> value <--- =eval("ins."+ref+" = val");

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
ref);}else{var value= ---> eval <--- ("ins."+ref+" = val");this.

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- value=eval("ins."+_ref);if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
("/",".");var value= ---> eval <--- ("ins."+_ref);if(value&&

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- value=null;if((eval("ins._defaultValues."

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
;var value=null;if(( ---> eval <--- ("ins._defaultValues."+_ref)!=null)&&(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
"ins._defaultValues."+_ref)!=null)&&( ---> eval <--- ("ins._defaultValues."+_ref)!="")){

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
)!="")){value=( ---> eval <--- ("ins._defaultValues."+_ref)/1048576);if

[WARNING] Try to use a single 'var' statement per scope.
ref.replace("/","."); ---> var  <--- value=null;if(eval("ins."+

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
);var value=null;if( ---> eval <--- ("ins."+_ref)!=null&&eval(

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
eval("ins."+_ref)!=null&& ---> eval <--- ("ins."+_ref)!=""){value

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
_ref)!=""){value=( ---> eval <--- ("ins."+_ref)/1048576);if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(2);}}returnvalue|| ---> eval <--- ("ins."+_ref);};Cos_MailQuota_XModelItem.

[WARNING] Try to use a single 'var' statement per scope.
(value){var val="0"; ---> var  <--- lastChar="d";if(value==this.

[WARNING] Try to use a single 'var' statement per scope.
null&&value.length>0){ ---> var  <--- lastChar=(value.toLowerCase()).

[WARNING] The variable lastChar has already been declared in the same scope...
&&value.length>0){var  ---> lastChar <--- =(value.toLowerCase()).charAt

[WARNING] Try to use a single 'var' statement per scope.
levels=levels-4;}for( ---> var  <--- ix=0;ix<levels;ix++

[WARNING] Try to use a single 'var' statement per scope.
),this.getCssClass()); ---> var  <--- height=this.getHeight();var width

[WARNING] Try to use a single 'var' statement per scope.
var height=this.getHeight(); ---> var  <--- width=this.getWidth();var el

[WARNING] Try to use a single 'var' statement per scope.
var width=this.getWidth(); ---> var  <--- el=null;if(width!=null||

[WARNING] Try to use a single 'var' statement per scope.
.style.height=height;}} ---> var  <--- label=this.getLabel();if(

[WARNING] Try to use a single 'var' statement per scope.
;}widget.setText(label); ---> var  <--- ls=new AjxListener(this,Super_AnchorHelper_XFormItem.prototype

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- labelCssStyle=this.getInheritedProperty("labelCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssStyle=this.getInheritedProperty("labelCssStyle"); ---> var  <--- labelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- textFieldCssClass=this.getInheritedProperty("textFieldCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
textFieldCssClass=this.getInheritedProperty("textFieldCssClass"); ---> var  <--- textFieldCssStyle=this.getInheritedProperty("textFieldCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
textFieldCssStyle=this.getInheritedProperty("textFieldCssStyle"); ---> var  <--- textFieldWidth=this.getInheritedProperty("textFieldWidth");var 

[WARNING] Try to use a single 'var' statement per scope.
textFieldWidth=this.getInheritedProperty("textFieldWidth"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- getDisplayValue=this.getInheritedProperty("getDisplayValue");var 

[WARNING] Try to use a single 'var' statement per scope.
getDisplayValue=this.getInheritedProperty("getDisplayValue"); ---> var  <--- txtField={type:_TEXTFIELD_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
){txtField.getDisplayValue=getDisplayValue;} ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- txtBoxLabelCssStyle=this.getInheritedProperty("txtBoxLabelCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabelCssStyle=this.getInheritedProperty("txtBoxLabelCssStyle"); ---> var  <--- textAreaCssClass=this.getInheritedProperty("textAreaCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
textAreaCssClass=this.getInheritedProperty("textAreaCssClass"); ---> var  <--- textAreaCssStyle=this.getInheritedProperty("textAreaCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
textAreaCssStyle=this.getInheritedProperty("textAreaCssStyle"); ---> var  <--- textAreaWidth=this.getInheritedProperty("textAreaWidth");var 

[WARNING] Try to use a single 'var' statement per scope.
textAreaWidth=this.getInheritedProperty("textAreaWidth"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- labelCssStyle=this.getInheritedProperty("labelCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssStyle=this.getInheritedProperty("labelCssStyle"); ---> var  <--- labelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- txtArea={type:_TEXTAREA_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
:this.getInheritedProperty("labelWrap")}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- checkboxSubLabel=this.getInheritedProperty("checkboxSubLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
checkboxSubLabel=this.getInheritedProperty("checkboxSubLabel"); ---> var  <--- checkLabelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
checkLabelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- chkBox={type:_CHECKBOX_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
("falseValue"),forceUpdate:true}; ---> var  <--- chkBoxElementChanged=this.getInheritedProperty("checkBoxElementChanged");if

[WARNING] Try to use a single 'var' statement per scope.
){chkBox.elementChanged=chkBoxElementChanged;} ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
Composite_XFormItem.onFieldChange,cssStyle:"width:150px"}; ---> var  <--- customOvewriteChecks=this.getInheritedProperty("customOvewriteChecks");if

[WARNING] Try to use a single 'var' statement per scope.
){anchorHlpr.cssStyle=anchorCssStyle;} ---> var  <--- checkBoxLabel=this.getInheritedProperty("checkBoxLabel");if

[WARNING] Try to use a single 'var' statement per scope.
.getInheritedProperty("conSpan")||3;} ---> var  <--- checkBoxLabelLocation=this.getInheritedProperty("checkBoxLabelLocation");if

[WARNING] Try to use a single 'var' statement per scope.
){chkBox.labelLocation=checkBoxLabelLocation;} ---> var  <--- checkBoxAlign=this.getInheritedProperty("checkboxAlign");if

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
Composite_XFormItem.onFieldChange,cssStyle:"width:150px"}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");if

[WARNING] Try to use a single 'var' statement per scope.
){anchorHlpr.cssStyle=anchorCssStyle;} ---> var  <--- textBoxLabel=this.getInheritedProperty("textBoxLabel");if

[WARNING] Try to use a single 'var' statement per scope.
;p=p.getParentItem(); ---> var  <--- focusFunc=p.getInheritedProperty("onClick");if

[WARNING] Try to use a single 'var' statement per scope.
focusFunc!=null&&focusFunc!=""){ ---> var  <--- func=new Function("event","item","return "

[WARNING] Try to use a single 'var' statement per scope.
;p=p.getParentItem(); ---> var  <--- focusFunc=p.getInheritedProperty("onMouseout");if

[WARNING] Try to use a single 'var' statement per scope.
focusFunc!=null&&focusFunc!=""){ ---> var  <--- func=new Function("event","item","return "

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- sorted=this.getInheritedProperty("sorted");var 

[WARNING] Try to use a single 'var' statement per scope.
sorted=this.getInheritedProperty("sorted"); ---> var  <--- layoutStyle=this.getInheritedProperty("layoutStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
layoutStyle=this.getInheritedProperty("layoutStyle"); ---> var  <--- sourceRef=this.getInheritedProperty("sourceRef");var 

[WARNING] Try to use a single 'var' statement per scope.
sourceRef=this.getInheritedProperty("sourceRef"); ---> var  <--- widgetClass=this.getInheritedProperty("widgetClass");var 

[WARNING] Try to use a single 'var' statement per scope.
widgetClass=this.getInheritedProperty("widgetClass"); ---> var  <--- tableWidth=this.getInheritedProperty("tableWidth");var 

[WARNING] Try to use a single 'var' statement per scope.
tableWidth=this.getInheritedProperty("tableWidth"); ---> var  <--- labelWidth=this.getInheritedProperty("labelWidth");var 

[WARNING] Try to use a single 'var' statement per scope.
labelWidth=this.getInheritedProperty("labelWidth"); ---> var  <--- splitButtons=this.getInheritedProperty("splitButtons");var 

[WARNING] Try to use a single 'var' statement per scope.
splitButtons=this.getInheritedProperty("splitButtons"); ---> var  <--- resetToSuperLabel=this.getInheritedProperty("resetToSuperLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
resetToSuperLabel=this.getInheritedProperty("resetToSuperLabel"); ---> var  <--- listWidth=this.getInheritedProperty("listWidth");var 

[WARNING] Try to use a single 'var' statement per scope.
listWidth=this.getInheritedProperty("listWidth"); ---> var  <--- listHeight=this.getInheritedProperty("listHeight");var 

[WARNING] Try to use a single 'var' statement per scope.
listHeight=this.getInheritedProperty("listHeight"); ---> var  <--- anchorItem={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
align:_CENTER_,containerCssStyle:"width:90%;float:center;align:center;text-align:center;"}; ---> var  <--- chooserItem={type:_DWT_CHOOSER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- checkBoxLabel=this.getInheritedProperty("checkBoxLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
checkBoxLabel=this.getInheritedProperty("checkBoxLabel"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- checkBox={type:_CHECKBOX_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
).checked=value;}}; ---> var  <--- selectChck={type:_OSELECT_CHECK_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
);},cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:3

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- limitLabel=this.getInheritedProperty("limitLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
limitLabel=this.getInheritedProperty("limitLabel"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- radioBox1={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
,this.refPath);}}; ---> var  <--- radioBox2={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
getSuperValue(this.getInstance()); ---> var  <--- arr2=[];if(arr){

[WARNING] Try to use a single 'var' statement per scope.
=[];if(arr){ ---> var  <--- cnt=arr.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arr.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
,arr2,event);}}; ---> var  <--- selectChck={type:_OSELECT_CHECK_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
var cnt=value.length;for( ---> var  <--- i=cnt-1;i>=0;

[WARNING] Try to use a single 'var' statement per scope.
);},cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:3

[WARNING] Try to use a single 'var' statement per scope.
selectRef=this.getInheritedProperty("selectRef"); ---> var  <--- limitLabel=this.getInheritedProperty("limitLabel");var 

[WARNING] Try to use a single 'var' statement per scope.
limitLabel=this.getInheritedProperty("limitLabel"); ---> var  <--- choices=this.getInheritedProperty("choices");var 

[WARNING] Try to use a single 'var' statement per scope.
choices=this.getInheritedProperty("choices"); ---> var  <--- radioBox1={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
,this.refPath);}}; ---> var  <--- radioBox2={type:_RADIO_,groupname:this

[WARNING] Try to use a single 'var' statement per scope.
getSuperValue(this.getInstance()); ---> var  <--- arr2=[];if(arr){

[WARNING] Try to use a single 'var' statement per scope.
=[];if(arr){ ---> var  <--- cnt=arr.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arr.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
,arr2,event);}}; ---> var  <--- selectChck={type:_ZA_ZIMLET_SELECT_,choices:choices

[WARNING] Try to use a single 'var' statement per scope.
width:"500px",cssStyle:"margin-bottom:5px;margin-top:5px;border:2px inset gray;"}; ---> var  <--- selectChckGrp={type:_GROUP_,numCols:4

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
],onChange:Composite_XFormItem.onFieldChange}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");if

[WARNING] Try to use a single 'var' statement per scope.
else{anchorHlpr.cssStyle="width:150px";} ---> var  <--- choices=this.getInheritedProperty("choices");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.choices=choices;} ---> var  <--- editable=this.getInheritedProperty("editable");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.editable=editable;} ---> var  <--- inputSize=this.getInheritedProperty("inputSize");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.inputSize=inputSize;} ---> var  <--- valueWidth=this.getInheritedProperty("valueWidth");if

[WARNING] Try to use a single 'var' statement per scope.
buttonImage=this.getInheritedProperty("buttonImage"); ---> var  <--- width=this.getInheritedProperty("width");this

[WARNING] Try to use a single 'var' statement per scope.
,onChange:Composite_XFormItem.onFieldChange}]; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");if

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- labelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- txtField={type:_TEXTFIELD_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- selectField={type:_OSELECT1_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
if(itemVal.length>1){ ---> var  <--- lastChar=(itemVal.toLowerCase()).

[WARNING] Try to use a single 'var' statement per scope.
labelLocation:_NONE_,forceUpdate:true}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- labelCssStyle=this.getInheritedProperty("labelCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssStyle=this.getInheritedProperty("labelCssStyle"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- txtField={type:_TEXTFIELD_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- selectField={type:_OSELECT1_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
labelLocation:_NONE_,forceUpdate:true}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- labelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- txtField={type:_TEXTFIELD_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- selectField={type:_OUTPUT_,ref:null

[WARNING] Try to use a single 'var' statement per scope.
{returnAjxMsg.days;}}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
txtBoxLabel=this.getInheritedProperty("txtBoxLabel"); ---> var  <--- labelCssClass=this.getInheritedProperty("labelCssClass");var 

[WARNING] Try to use a single 'var' statement per scope.
labelCssClass=this.getInheritedProperty("labelCssClass"); ---> var  <--- toolTip=this.getInheritedProperty("toolTipContent");var 

[WARNING] Try to use a single 'var' statement per scope.
toolTip=this.getInheritedProperty("toolTipContent"); ---> var  <--- txtField={type:_TEXTFIELD_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- selectField={type:_OUTPUT_,ref:null

[WARNING] Try to use a single 'var' statement per scope.
{returnAjxMsg.minutes;}}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
var cntAttrs=attrsArray.length;for( ---> var  <--- i=0;i<cntAttrs;i++

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(rightsArray){ ---> var  <--- cntRights=rightsArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cntRights=rightsArray.length;for( ---> var  <--- i=0;i<cntRights;i++

[WARNING] The variable i has already been declared in the same scope...
cntRights=rightsArray.length;for(var  ---> i <--- =0;i<cntRights;i++)

[WARNING] Try to use a single 'var' statement per scope.
gridLabelCss=this.getInheritedProperty("gridLabelCss"); ---> var  <--- oldItems=this.getItems();var subitems

[WARNING] Try to use a single 'var' statement per scope.
var oldItems=this.getItems(); ---> var  <--- subitems;if(oldItems.length==1&&

[WARNING] Try to use a single 'var' statement per scope.
else{subitems=oldItems;}for( ---> var  <--- i=0;i<subitems.length;

[WARNING] Try to use a single 'var' statement per scope.
var cntAttrs=attrsArray.length;for( ---> var  <--- i=0;i<cntAttrs;i++

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(rightsArray){ ---> var  <--- cntRights=rightsArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cntRights=rightsArray.length;for( ---> var  <--- i=0;i<cntRights;i++

[WARNING] The variable i has already been declared in the same scope...
cntRights=rightsArray.length;for(var  ---> i <--- =0;i<cntRights;i++)

[WARNING] Try to use a single 'var' statement per scope.
var cntAttrs=attrsArray.length;for( ---> var  <--- i=0;i<cntAttrs;i++

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(rightsArray){ ---> var  <--- cntRights=rightsArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cntRights=rightsArray.length;for( ---> var  <--- i=0;i<cntRights;i++

[WARNING] The variable i has already been declared in the same scope...
cntRights=rightsArray.length;for(var  ---> i <--- =0;i<cntRights;i++)

[WARNING] Try to use a single 'var' statement per scope.
this.getInheritedProperty("gridLabelCss")||"gridGroupBodyLabel"; ---> var  <--- oldItems=this.getItems();if(

[WARNING] Try to use a single 'var' statement per scope.
);if(oldItems){for( ---> var  <--- i=0;i<oldItems.length;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- tabLevel=this.getTabLevel();var headerLevel

[WARNING] Try to use a single 'var' statement per scope.
var tabLevel=this.getTabLevel(); ---> var  <--- headerLevel=this.getHeaderLevel();var formParentElement

[WARNING] Try to use a single 'var' statement per scope.
var headerLevel=this.getHeaderLevel(); ---> var  <--- formParentElement=this.getForm().parent.

[WARNING] Try to use a single 'var' statement per scope.
().parent.getHtmlElement(); ---> var  <--- totalHeight=parseInt(formParentElement.style.height)

[WARNING] Try to use a single 'var' statement per scope.
formParentElement.clientHeight:formParentElement.offsetHeight;} ---> var  <--- formHeaders=form.getItemsById("xform_header");var 

[WARNING] Try to use a single 'var' statement per scope.
formHeaders=form.getItemsById("xform_header"); ---> var  <--- headerHeight=0;if(formHeaders){var 

[WARNING] Try to use a single 'var' statement per scope.
headerHeight=0;if(formHeaders){ ---> var  <--- formHeader=formHeaders[0];if(formHeader

[WARNING] Try to use a single 'var' statement per scope.
.clientHeight:formHeader.offsetHeight;}} ---> var  <--- formTabBars=form.getItemsById("xform_tabbar");var 

[WARNING] Try to use a single 'var' statement per scope.
formTabBars=form.getItemsById("xform_tabbar"); ---> var  <--- tabBarHeight=0;if(formTabBars){var 

[WARNING] Try to use a single 'var' statement per scope.
tabBarHeight=0;if(formTabBars){ ---> var  <--- formTabBar=formTabBars[0];if(formTabBar

[WARNING] Try to use a single 'var' statement per scope.
.clientHeight:formTabBar.offsetHeight;}} ---> var  <--- totalHeaderHeight=headerHeight*headerLevel;var totalTabBarHeight=tabBarHeight

[WARNING] Try to use a single 'var' statement per scope.
}}var totalHeaderHeight=headerHeight*headerLevel; ---> var  <--- totalTabBarHeight=tabBarHeight*tabLevel;if(totalHeight<=

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- formParentElement=this.getForm().parent.

[WARNING] Try to use a single 'var' statement per scope.
().parent.getHtmlElement(); ---> var  <--- totalWidth=parseInt(formParentElement.style.width)

[WARNING] Try to use a single 'var' statement per scope.
0){return"100%";}else{ ---> var  <--- res=totalWidth-this.getHMargin();

[WARNING] Try to use a single 'var' statement per scope.
.cacheInheritedMethod("getCustomPaddingStyle","$getCustomPaddingStyle")){ ---> var  <--- paddingStyle=this.cacheInheritedMethod("getCustomPaddingStyle","$getCustomPaddingStyle")

[WARNING] Try to use a single 'var' statement per scope.
var element=this.getElement(); ---> var  <--- height=this.cacheInheritedMethod("getCustomHeight","$getCustomHeight")

[WARNING] Try to use a single 'var' statement per scope.
,"$getCustomHeight").call(this); ---> var  <--- width=this.cacheInheritedMethod("getCustomWidth","$getCustomWidth")

[WARNING] Try to use a single 'var' statement per scope.
if(loadMethods&&loadMethods instanceof Array){ ---> var  <--- cnt=loadMethods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=loadMethods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(loadMethods[i] instanceof Array){ ---> var  <--- func=loadMethods[i].shift()

[WARNING] Try to use a single 'var' statement per scope.
items=this.getInheritedProperty("repeatItems"); ---> var  <--- repeatItem={type:_REPEAT_,items:items

[WARNING] Try to use a single 'var' statement per scope.
);},bmolsnr:true}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");var 

[WARNING] Try to use a single 'var' statement per scope.
anchorCssStyle=this.getInheritedProperty("anchorCssStyle"); ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
(this,value);}}; ---> var  <--- anchorHlpr={type:_SUPER_ANCHOR_HELPER_,ref:"."

[WARNING] Try to use a single 'var' statement per scope.
],onChange:Composite_XFormItem.onFieldChange}; ---> var  <--- anchorCssStyle=this.getInheritedProperty("anchorCssStyle");if

[WARNING] Try to use a single 'var' statement per scope.
else{anchorHlpr.cssStyle="width:150px";} ---> var  <--- choices=this.getInheritedProperty("choices");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.choices=choices;} ---> var  <--- toolTipContent=this.getInheritedProperty("slctToolTipContent");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.toolTipContent=toolTipContent;} ---> var  <--- dataFetcherClass=this.getInheritedProperty("dataFetcherClass");if

[WARNING] Try to use a single 'var' statement per scope.
){slct.dataFetcherClass=dataFetcherClass;} ---> var  <--- dataFetcherMethod=this.getInheritedProperty("dataFetcherMethod");if

[WARNING] Try to use a single 'var' statement per scope.
(!choices){return"";} ---> var  <--- html=new AjxBuffer();this.outputChoicesHTMLStart

[WARNING] Try to use a single 'var' statement per scope.
);this.outputChoicesHTMLStart(html); ---> var  <--- choiceCssClass=this.getChoiceCssClass();for(

[WARNING] Try to use a single 'var' statement per scope.
=this.getChoiceCssClass();for( ---> var  <--- i=0;i<choices.length;

[WARNING] Try to use a single 'var' statement per scope.
._getLabelHTML(item.name);} ---> var  <--- hdlr="onSearchClick";var label=item.name

[WARNING] Try to use a single 'var' statement per scope.
name);}var hdlr="onSearchClick"; ---> var  <--- label=item.name;if(item.

[WARNING] Try to use a single 'var' statement per scope.
.displayName+" "+label;}} ---> var  <--- ref=this.getFormGlobalRef()+".getItemById('"+

[WARNING] Try to use a single 'var' statement per scope.
target||item.target==""){ ---> var  <--- slController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchListController(); ---> var  <--- searchField=slController._searchField;searchField.searchSelectedType=

[WARNING] Try to use a single 'var' statement per scope.
"");return;}}}} ---> var  <--- value=this.getInstanceValue();var processEntryKey

[WARNING] Try to use a single 'var' statement per scope.
var value=this.getInstanceValue(); ---> var  <--- processEntryKey=this.getInheritedProperty("entryKeyMethod");if

[WARNING] Try to use a single 'var' statement per scope.
}var stats={};for( ---> var  <--- i=0;i<data.length;

[WARNING] Try to use a single 'var' statement per scope.
[i].value="";} ---> var  <--- realQuery=this._searchFieldValue();var displayQuery

[WARNING] Try to use a single 'var' statement per scope.
var realQuery=this._searchFieldValue(); ---> var  <--- displayQuery='"'+realQuery+'"';data.

[WARNING] Try to use a single 'var' statement per scope.
,target:""});for( ---> var  <--- prop in stats){if(stats.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
(stats.hasOwnProperty(prop)){ ---> var  <--- searchAttr=ZaSearch.TYPES[prop];data

[WARNING] Try to use a single 'var' statement per scope.
getContainer()).width-20; ---> var  <--- maxNumberOfLetters=Math.floor((itemW-30

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchListController(); ---> var  <--- searchField=slController._searchField;if(arguments.

[WARNING] Try to use a single 'var' statement per scope.
var origChoices=this.colSelect.choices; ---> var  <--- newChoices=new XFormChoices(origChoices.getChoiceObject()

[WARNING] Try to use a single 'var' statement per scope.
getItemById(this.__attributes.ancestorId); ---> var  <--- current=this.getInstanceValue();this.

[WARNING] Try to use a single 'var' statement per scope.
ancestor._markSelected(newVal,current); ---> var  <--- act=new AjxTimedAction(ancestor,Collaborated_Select_XFormItem.prototype

[WARNING] Try to use a single 'var' statement per scope.
;}var num=0;for( ---> var  <--- j=0;j<this.choiceItems.

[WARNING] Try to use a single 'var' statement per scope.
__excluded[j]=false;for( ---> var  <--- i=0;i<vals.length;

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue()[instanceNum]; ---> var  <--- removed=removedItem[this.colSelect.ref]

[WARNING] Try to use a single 'var' statement per scope.
}}if(items){for( ---> var  <--- i=0;i<items.length;

[WARNING] Try to use a single 'var' statement per scope.
<items.length;i++){ ---> var  <--- result=this._findColSelect(items[i]

[WARNING] Try to use a single 'var' statement per scope.
i]=false;}}for( ---> var  <--- i=0;i<this.choiceItems.

[WARNING] The variable i has already been declared in the same scope...
]=false;}}for(var  ---> i <--- =0;i<this.choiceItems.length

[WARNING] Try to use a single 'var' statement per scope.
{var result=[];for( ---> var  <--- i=0;i<this.choiceItems.

[WARNING] Try to use a single 'var' statement per scope.
0,0,"100%","100%"); ---> var  <--- htmlElement=this.getHtmlElement();htmlElement.

[WARNING] Try to use a single 'var' statement per scope.
className;this.setVisible(false); ---> var  <--- params=ZLoginFactory.copyDefaultParams(ZaMsg);params

[WARNING] Try to use a single 'var' statement per scope.
.clientLevelNotice?ZabMsg.clientLevelNotice:""; ---> var  <--- html=ZLoginFactory.getLoginDialogHTML(params);this

[WARNING] Try to use a single 'var' statement per scope.
(this._currentWidth-10)){ ---> var  <--- textLength=this._currentWidth-ZaCurrentAppToolBar.getWidth(

[WARNING] Try to use a single 'var' statement per scope.
ZaCurrentAppToolBar.getWidth("...")-10; ---> var  <--- maxNumberOfLetters=Math.floor(textLength*(title

[WARNING] Try to use a single 'var' statement per scope.
.style.position=Dwt.ABSOLUTE_STYLE; ---> var  <--- shellEl=DwtShell.getShell(window).getHtmlElement

[WARNING] Try to use a single 'var' statement per scope.
span.style.fontSize="13px";} ---> var  <--- cache=ZaCurrentAppToolBar.WIDTH;if(cache[

[WARNING] Try to use a single 'var' statement per scope.
};ZaCurrentAppToolBar._cacheSize=0;} ---> var  <--- span=ZaCurrentAppToolBar._testSpan;span.innerHTML=

[WARNING] The variable span has already been declared in the same scope...
;ZaCurrentAppToolBar._cacheSize=0;}var  ---> span <--- =ZaCurrentAppToolBar._testSpan;span.innerHTML=str

[WARNING] Try to use a single 'var' statement per scope.
._testSpan;span.innerHTML=str; ---> var  <--- w=cache[str]=Dwt.getSize

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- currentRoot=tree.getCurrentRootItem();var dataItem

[WARNING] Try to use a single 'var' statement per scope.
var currentRoot=tree.getCurrentRootItem(); ---> var  <--- dataItem=currentRoot.getData("dataItem");var 

[WARNING] Try to use a single 'var' statement per scope.
dataItem=currentRoot.getData("dataItem"); ---> var  <--- path=tree.getABPath(dataItem);var 

[WARNING] The variable path has already been declared in the same scope...
=currentRoot.getData("dataItem");var  ---> path <--- =tree.getABPath(dataItem);var pathItems

[WARNING] Try to use a single 'var' statement per scope.
path=tree.getABPath(dataItem); ---> var  <--- pathItems=ZaTree.getPathItems(path);if

[WARNING] Try to use a single 'var' statement per scope.
{pathItems.pop();}} ---> var  <--- displayName=pathItems[pathItems.length-1]

[WARNING] Try to use a single 'var' statement per scope.
pathItems[pathItems.length-1]; ---> var  <--- resultPath=ZaTree.getPathByArray(pathItems);return

[WARNING] Try to use a single 'var' statement per scope.
){var mouseX=ev.docX; ---> var  <--- dropDownX=Dwt.toWindow(this._dropDownEl,

[WARNING] Try to use a single 'var' statement per scope.
0,0,window).x; ---> var  <--- isAfterDropDown=true;if(mouseX<dropDownX)

[WARNING] Try to use a single 'var' statement per scope.
<dropDownX){isAfterDropDown=false;} ---> var  <--- isBeforeCollapse=true;if(this._imgEl)

[WARNING] Try to use a single 'var' statement per scope.
true;if(this._imgEl){ ---> var  <--- imgX=Dwt.toWindow(this._imgEl,

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getBounds(this._arrowEl); ---> var  <--- textBounds=Dwt.getBounds(this._textEl)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getBounds(this._textEl); ---> var  <--- start=arrowBounds.x;var end=textBounds

[WARNING] Try to use a single 'var' statement per scope.
);var start=arrowBounds.x; ---> var  <--- end=textBounds.x+textBounds.width;

[WARNING] Try to use a single 'var' statement per scope.
=textBounds.x+textBounds.width; ---> var  <--- mouseX=ev.docX;if(mouseX<

[WARNING] Try to use a single 'var' statement per scope.
displayText=text;if(text){ ---> var  <--- titleWidth=Dwt.getSize(this._textEl)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this._textEl); ---> var  <--- totalTextWidth=AjxStringUtil.getWidth(text);if

[WARNING] Try to use a single 'var' statement per scope.
if(totalTextWidth>titleWidth.x){ ---> var  <--- totalNumber=text.length;var textLength=titleWidth

[WARNING] Try to use a single 'var' statement per scope.
){var totalNumber=text.length; ---> var  <--- textLength=titleWidth.x-AjxStringUtil.getWidth(

[WARNING] Try to use a single 'var' statement per scope.
x-AjxStringUtil.getWidth("..."); ---> var  <--- maxNumberOfLetters=Math.floor(textLength*totalNumber/

[WARNING] Try to use a single 'var' statement per scope.
;}var parent=menu.parent; ---> var  <--- parentBounds=parent.getBounds();var windowSize

[WARNING] Try to use a single 'var' statement per scope.
var parentBounds=parent.getBounds(); ---> var  <--- windowSize=menu.shell.getSize();

[WARNING] Try to use a single 'var' statement per scope.
=menu.shell.getSize(); ---> var  <--- menuSize=menu.getSize();var parentElement

[WARNING] Try to use a single 'var' statement per scope.
var menuSize=menu.getSize(); ---> var  <--- parentElement=parent.getHtmlElement();var parentLocation

[WARNING] Try to use a single 'var' statement per scope.
var parentElement=parent.getHtmlElement(); ---> var  <--- parentLocation=Dwt.toWindow(parentElement,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(parentElement,0,0); ---> var  <--- leftBorder=(parentElement.style.borderLeftWidth==""

[WARNING] Try to use a single 'var' statement per scope.
parseInt(parentElement.style.borderLeftWidth); ---> var  <--- x;var dropDownEl=parent._dropDownEl;if

[WARNING] Try to use a single 'var' statement per scope.
.style.borderLeftWidth);var x; ---> var  <--- dropDownEl=parent._dropDownEl;if(!dropDownEl

[WARNING] Try to use a single 'var' statement per scope.
parentLocation.x+leftBorder;}else{ ---> var  <--- dropDownLocation=Dwt.toWindow(dropDownEl,0,

[WARNING] Try to use a single 'var' statement per scope.
.x-menuSize.x:x; ---> var  <--- y;var horizontalBorder=(parentElement.style.

[WARNING] Try to use a single 'var' statement per scope.
menuSize.x:x;var y; ---> var  <--- horizontalBorder=(parentElement.style.borderTopWidth==""

[WARNING] Try to use a single 'var' statement per scope.
function(){var i=0; ---> var  <--- mi;var listener=new AjxListener(this,

[WARNING] Try to use a single 'var' statement per scope.
{var i=0;var mi; ---> var  <--- listener=new AjxListener(this,this.goToTreeItemListener

[WARNING] Try to use a single 'var' statement per scope.
AjxListener(this,this.goToTreeItemListener); ---> var  <--- allHistory=this._historyMgr.getAllHistory();

[WARNING] Try to use a single 'var' statement per scope.
allHistory.size()>20){ ---> var  <--- j=allHistory.size()-1;

[WARNING] Try to use a single 'var' statement per scope.
=allHistory.size()-1; ---> var  <--- findNum=0;for(j=allHistory.

[WARNING] Try to use a single 'var' statement per scope.
;j>=0;j--){ ---> var  <--- currentHistory=allHistory.get(j);if

[WARNING] Try to use a single 'var' statement per scope.
0){i=j;}} ---> var  <--- currentHistory;if(i>0){currentHistory

[WARNING] The variable currentHistory has already been declared in the same scope...
){i=j;}}var  ---> currentHistory <--- ;if(i>0){currentHistory=

[WARNING] Try to use a single 'var' statement per scope.
;}ZaCrtAppTreeHeader.searchHistoryCache={}; ---> var  <--- minIndex=i;for(i=allHistory.

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("onerror","continue"); ---> var  <--- versionInfoReq=soapDoc.set("GetVersionInfoRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- resp=command.invoke(params).Body

[WARNING] Try to use a single 'var' statement per scope.
invoke(params).Body.BatchResponse; ---> var  <--- versionResponse=resp.GetVersionInfoResponse[0];ZaServerVersionInfo

[WARNING] Try to use a single 'var' statement per scope.
0,0,0,0); ---> var  <--- yyyy=parseInt(dateTimeStr.substr(0,

[WARNING] Try to use a single 'var' statement per scope.
(0,4),10); ---> var  <--- MM=parseInt(dateTimeStr.substr(4,

[WARNING] Try to use a single 'var' statement per scope.
(4,2),10); ---> var  <--- dd=parseInt(dateTimeStr.substr(6,

[WARNING] Try to use a single 'var' statement per scope.
d=ZaServerVersionInfo._parseDate(dateTimeStr); ---> var  <--- hh=parseInt(dateTimeStr.substr(9,

[WARNING] Try to use a single 'var' statement per scope.
(9,2),10); ---> var  <--- mm=parseInt(dateTimeStr.substr(11,

[WARNING] Try to use a single 'var' statement per scope.
prototype.constructWidget.call(this); ---> var  <--- opList=this.getNormalizedValues();if(

[WARNING] Try to use a single 'var' statement per scope.
if(opList&&opList.length){ ---> var  <--- menu=new ZaPopupMenu(widget,null,null

[WARNING] Try to use a single 'var' statement per scope.
parent,className,DwtControl.ABSOLUTE_STYLE); ---> var  <--- app=null;try{this.shell.

[WARNING] Try to use a single 'var' statement per scope.
);}catch(e){} ---> var  <--- _dataLoaderClass=params.dataLoaderClass;this._dataLoaderObject=

[WARNING] Try to use a single 'var' statement per scope.
IS_DELIM=new Object();for( ---> var  <--- i=0;i<ZaAutoCompleteListView.DELIMS.

[WARNING] The variable i has already been declared in the same scope...
=new Object();for(var  ---> i <--- =0;i<ZaAutoCompleteListView.DELIMS.length

[WARNING] Try to use a single 'var' statement per scope.
DwtUiEvent.getTargetWithProp(ev,"id"); ---> var  <--- aclv=element&&AjxCore.objectWithId(element.

[WARNING] Try to use a single 'var' statement per scope.
_inputLength=element.value.length;} ---> var  <--- key=DwtKeyEvent.getCharCode(ev);return

[WARNING] Try to use a single 'var' statement per scope.
.getTargetWithProp(ev,"id");} ---> var  <--- aclv=AjxCore.objectWithId(element._acListViewId)

[WARNING] Try to use a single 'var' statement per scope.
AjxCore.objectWithId(element._acListViewId); ---> var  <--- id=element.id;var key=DwtKeyEvent

[WARNING] Try to use a single 'var' statement per scope.
);var id=element.id; ---> var  <--- key=DwtKeyEvent.getCharCode(ev);if

[WARNING] Try to use a single 'var' statement per scope.
==27)){returntrue;} ---> var  <--- value=element.value;ev.inputLengthChanged=

[WARNING] Try to use a single 'var' statement per scope.
value.length!=aclv._inputLength); ---> var  <--- inputFieldOldValue;if(aclv._inputFieldXFormItem){DBG

[WARNING] Try to use a single 'var' statement per scope.
=aclv._inputFieldXFormItem.getInstanceValue(); ---> var  <--- onChangeMethod=aclv._inputFieldXFormItem.getOnChangeMethod();

[WARNING] Try to use a single 'var' statement per scope.
)){aclv._numChars++;} ---> var  <--- isDelim=(aclv.getVisible()&&(

[WARNING] Try to use a single 'var' statement per scope.
!=46)){returntrue;} ---> var  <--- ev1=new DwtKeyEvent();DwtKeyEvent.copy

[WARNING] Try to use a single 'var' statement per scope.
aclv._acAction,aclv._acInterval); ---> var  <--- inputFieldNewValue=inputFieldOldValue;if(aclv._inputFieldXFormItem)

[WARNING] Try to use a single 'var' statement per scope.
var idx=this._getSelectedIndex(); ---> var  <--- size=this.size();if(

[WARNING] Try to use a single 'var' statement per scope.
(size<=1){return;} ---> var  <--- newIdx;if(key==40&&(idx

[WARNING] Try to use a single 'var' statement per scope.
try{var element=ev.element; ---> var  <--- aclv=ev.aclv;aclv._acActionId=

[WARNING] Try to use a single 'var' statement per scope.
0;if(this._locCallback){ ---> var  <--- loc=this._locCallback.run(ev)

[WARNING] Try to use a single 'var' statement per scope.
<text.length;i++){ ---> var  <--- c=text.charAt(i);if

[WARNING] Try to use a single 'var' statement per scope.
if(!match){return;} ---> var  <--- start=this._start;var end=hasDelim

[WARNING] Try to use a single 'var' statement per scope.
;}var start=this._start; ---> var  <--- end=hasDelim?this._end+1:

[WARNING] Try to use a single 'var' statement per scope.
._end+1:this._end; ---> var  <--- value=match[this._matchValue];this

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.SELECTION)){ ---> var  <--- selEv=DwtShell.selectionEvent;DwtUiEvent.copy(

[WARNING] Try to use a single 'var' statement per scope.
();thisHtmlElement.innerHTML=""; ---> var  <--- len=this._matches.size();

[WARNING] Try to use a single 'var' statement per scope.
._matches.size();for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- match=this._matches.get(i)

[WARNING] Try to use a single 'var' statement per scope.
(i);if(match){ ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
if(!children){return;} ---> var  <--- len=children.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=children.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- div=children[i];var curStyle=

[WARNING] Try to use a single 'var' statement per scope.
{var div=children[i]; ---> var  <--- curStyle=div.className;if(i==

[WARNING] Try to use a single 'var' statement per scope.
var len=list.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- match=list[i];this._append

[WARNING] Try to use a single 'var' statement per scope.
if(curList.getVisible()){ ---> var  <--- obj=DwtControl.getTargetControl(ev);if

[WARNING] Try to use a single 'var' statement per scope.
autoCompleteListViewClass=this.getInheritedProperty("widgetClass"); ---> var  <--- locCallback=new AjxCallback(this,this._getAcListLoc

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this._getAcListLoc); ---> var  <--- compCallback=new AjxCallback(this,this.getInheritedProperty

[WARNING] Try to use a single 'var' statement per scope.
,this.getInheritedProperty("compCallback")); ---> var  <--- params={parent:this.getForm()

[WARNING] Try to use a single 'var' statement per scope.
compCallback:compCallback,separator:""}; ---> var  <--- widget=new autoCompleteListViewClass(params);returnwidget

[WARNING] Try to use a single 'var' statement per scope.
){var element=ev.element; ---> var  <--- loc=Dwt.getLocation(element);var 

[WARNING] Try to use a single 'var' statement per scope.
loc=Dwt.getLocation(element); ---> var  <--- height=Dwt.getSize(element).y

[WARNING] Try to use a single 'var' statement per scope.
;ZaKeyMap.prototype.constructor=ZaKeyMap; ---> var  <--- i=0;ZaKeyMap.CANCEL=i++

[WARNING] The variable i has already been declared in the same scope...
ZaKeyMap.prototype.constructor=ZaKeyMap;var  ---> i <--- =0;ZaKeyMap.CANCEL=i++;

[WARNING] Try to use a single 'var' statement per scope.
);}var html=[]; ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
idx++]="'></div><br>";}for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
);}var html=[]; ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
idx++]="'></div><br>";}for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
(shouldShift){var nextX=0; ---> var  <--- tabW=this.getTabWidth();var w

[WARNING] Try to use a single 'var' statement per scope.
var tabW=this.getTabWidth(); ---> var  <--- w=tabW-7;this.setCurrentTabWidth(

[WARNING] Try to use a single 'var' statement per scope.
7;this.setCurrentTabWidth(w); ---> var  <--- tabH=this.getTabHeight();var groupWidth

[WARNING] Try to use a single 'var' statement per scope.
var tabH=this.getTabHeight(); ---> var  <--- groupWidth=this.getW();if(

[WARNING] Try to use a single 'var' statement per scope.
()){groupWidth-=16;} ---> var  <--- isShiftNeeded=false;var indexOfHiddenSelectedTab;var y;

[WARNING] Try to use a single 'var' statement per scope.
-=16;}var isShiftNeeded=false; ---> var  <--- indexOfHiddenSelectedTab;var y;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var isShiftNeeded=false;var indexOfHiddenSelectedTab; ---> var  <--- y;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
;var indexOfHiddenSelectedTab;var y;for( ---> var  <--- i=0;i<ZaAppTabGroup._TABS.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- cTab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
;}if(isShiftNeeded&&shouldShift){ ---> var  <--- n;if(indexOfHiddenSelectedTab<this._visibleStartTab)

[WARNING] Try to use a single 'var' statement per scope.
(),"RightArrow");}}} ---> var  <--- nextX=0;var groupWidth=this.getW

[WARNING] Try to use a single 'var' statement per scope.
;}}}var nextX=0; ---> var  <--- groupWidth=this.getW();this.

[WARNING] Try to use a single 'var' statement per scope.
;this._visibleStartTab+=n;for( ---> var  <--- i=0;i<totalNoTabs;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<totalNoTabs;i++){ ---> var  <--- cTab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
getTabWidth=function(){var tabWidth; ---> var  <--- tabMinWidth=ZaAppTab.DEFAULT_MIN_WIDTH;var tabMaxWidth=ZaAppTab

[WARNING] Try to use a single 'var' statement per scope.
tabWidth;var tabMinWidth=ZaAppTab.DEFAULT_MIN_WIDTH; ---> var  <--- tabMaxWidth=ZaAppTab.DEFAULT_MAX_WIDTH;var groupWidth=this

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_MIN_WIDTH;var tabMaxWidth=ZaAppTab.DEFAULT_MAX_WIDTH; ---> var  <--- groupWidth=this.getW();if(

[WARNING] Try to use a single 'var' statement per scope.
){if(groupWidth>tabMinWidth){ ---> var  <--- numOfTabs=ZaAppTabGroup._TABS.size();

[WARNING] Try to use a single 'var' statement per scope.
();this._numberOfVisibleTabs=numOfTabs; ---> var  <--- avgTabWidth=Math.floor(groupWidth/(numOfTabs

[WARNING] Try to use a single 'var' statement per scope.
else{if(avgTabWidth<tabMinWidth){ ---> var  <--- numTabsVisible=this._numberOfVisibleTabs=Math.floor(

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- cTab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- cTab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- tab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppTabGroup._TABS.get(i); ---> var  <--- v=tab.getAppView();if(

[WARNING] Try to use a single 'var' statement per scope.
{var dirtyTabTitles=[];for( ---> var  <--- i=0;i<ZaAppTabGroup._TABS.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- tab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppTabGroup._TABS.get(i); ---> var  <--- v=tab.getAppView();if(

[WARNING] Try to use a single 'var' statement per scope.
.width||parent.getTabWidth(); ---> var  <--- h=params.height||parent.getTabHeight(

[WARNING] Try to use a single 'var' statement per scope.
){this.addCloseCell();} ---> var  <--- selListener=new AjxListener(this,ZaAppTab.prototype

[WARNING] Try to use a single 'var' statement per scope.
.addSelectionListener(params.onOpen);} ---> var  <--- mouseoutListener=new AjxListener(this,ZaAppTab.prototype

[WARNING] Try to use a single 'var' statement per scope.
){var tabGroup=this.parent; ---> var  <--- tabs=tabGroup.getTabs();var n

[WARNING] Try to use a single 'var' statement per scope.
var tabs=tabGroup.getTabs(); ---> var  <--- n=tabs.size();if(

[WARNING] Try to use a single 'var' statement per scope.
._closable){tabW-=20;} ---> var  <--- maxNumberOfLetters=Math.floor((tabW-30

[WARNING] Try to use a single 'var' statement per scope.
var tabViewId=this.getTabId(); ---> var  <--- cc=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
else{if(ZaAppTabGroup.getDirtyTabTitles){ ---> var  <--- tabGroup=this.parent;}var tabs=

[WARNING] Try to use a single 'var' statement per scope.
{var tabGroup=this.parent;} ---> var  <--- tabs=tabGroup.getTabs();var closingTabs

[WARNING] Try to use a single 'var' statement per scope.
var tabs=tabGroup.getTabs(); ---> var  <--- closingTabs=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var closingTabs=[];for( ---> var  <--- i=0;i<tabs.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- cTab=tabs.get(i);if

[WARNING] Try to use a single 'var' statement per scope.
push(cTab);}}for( ---> var  <--- j=0;j<closingTabs.length;

[WARNING] Try to use a single 'var' statement per scope.
]));return;}else{ ---> var  <--- tabGroup=this.parent;var tabs=tabGroup

[WARNING] Try to use a single 'var' statement per scope.
else{var tabGroup=this.parent; ---> var  <--- tabs=tabGroup.getTabs();var closingTabs

[WARNING] Try to use a single 'var' statement per scope.
var tabs=tabGroup.getTabs(); ---> var  <--- closingTabs=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var closingTabs=[];for( ---> var  <--- i=0;i<tabs.size(

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- cTab=tabs.get(i);if

[WARNING] Try to use a single 'var' statement per scope.
push(cTab);}}for( ---> var  <--- j=0;j<closingTabs.length;

[WARNING] Try to use a single 'var' statement per scope.
{var command=new ZmCsfeCommand(); ---> var  <--- controller=(params!=null?params.controller

[WARNING] Try to use a single 'var' statement per scope.
null?params.controller:null); ---> var  <--- delay=!(params.delay===null||

[WARNING] Try to use a single 'var' statement per scope.
undefined)?params.delay:500; ---> var  <--- id=params.busyId?params.busyId:

[WARNING] Try to use a single 'var' statement per scope.
splashScreenLoading);controller._currentRequest=command; ---> var  <--- cancelCallback=new AjxCallback(controller,controller.cancelBusyOverlay

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.noAuthToken=true; ---> var  <--- response=command.invoke(csfeParams);if

[WARNING] Try to use a single 'var' statement per scope.
if(params.force){for( ---> var  <--- i=0;i<this._statusQueue.

[WARNING] Try to use a single 'var' statement per scope.
this.nextStatus();}else{ ---> var  <--- level=ZaActionStatusView.getClass(work);var 

[WARNING] Try to use a single 'var' statement per scope.
level=ZaActionStatusView.getClass(work); ---> var  <--- icon=ZaActionStatusView.getImageHtml(work);this

[WARNING] Try to use a single 'var' statement per scope.
._iconEl,icon,false);} ---> var  <--- location=loc||"C";var transitions=customTransitions

[WARNING] Try to use a single 'var' statement per scope.
;}var location=loc||"C"; ---> var  <--- transitions=customTransitions||ZaToast.DEFAULT_TRANSITIONS;transitions=

[WARNING] Try to use a single 'var' statement per scope.
.popdown();}return;} ---> var  <--- state=this._state=this._createState(

[WARNING] Try to use a single 'var' statement per scope.
_state=this._createState(transition); ---> var  <--- el=this.getHtmlElement();Dwt.

[WARNING] Try to use a single 'var' statement per scope.
state=AjxUtil.createProxy(transition); ---> var  <--- defaults=ZaToast.DEFAULT_STATE[state.type]

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_STATE[state.type];for( ---> var  <--- name in defaults){if(!state[

[WARNING] Try to use a single 'var' statement per scope.
]=defaults[name];}} ---> var  <--- el=this.getHtmlElement();switch(

[WARNING] Try to use a single 'var' statement per scope.
=this._state.location||"C"; ---> var  <--- containerId;containerId="skin_container_toaster";var el=this

[WARNING] Try to use a single 'var' statement per scope.
"C";var containerId;containerId="skin_container_toaster"; ---> var  <--- el=this.getHtmlElement();var container

[WARNING] Try to use a single 'var' statement per scope.
var el=this.getHtmlElement(); ---> var  <--- container=Dwt.byId(containerId)||this

[WARNING] Try to use a single 'var' statement per scope.
||this.shell.getHtmlElement(); ---> var  <--- bsize=Dwt.getSize(container);var 

[WARNING] Try to use a single 'var' statement per scope.
bsize=Dwt.getSize(container); ---> var  <--- tsize=Dwt.getSize(el);var 

[WARNING] Try to use a single 'var' statement per scope.
tsize=Dwt.getSize(el); ---> var  <--- x=(bsize.x-tsize.x

[WARNING] Try to use a single 'var' statement per scope.
x-tsize.x)/2; ---> var  <--- y=(bsize.y-tsize.y

[WARNING] Try to use a single 'var' statement per scope.
;case"C":default:break;} ---> var  <--- offset=Dwt.toWindow(container);x

[WARNING] Try to use a single 'var' statement per scope.
var opacity=this._state.value; ---> var  <--- step=this._state.step;if(

[WARNING] Try to use a single 'var' statement per scope.
if(AjxEnv.isIE5_5up){try{ ---> var  <--- el=this.getHtmlElement();el.

[WARNING] Try to use a single 'var' statement per scope.
=step>0?"hidden":"visible"; ---> var  <--- duration=this._state.duration/1000;

[WARNING] Try to use a single 'var' statement per scope.
.next,0);return;} ---> var  <--- isOver=step>0?opacity>=this.

[WARNING] Try to use a single 'var' statement per scope.
opacity=this._state.end;} ---> var  <--- el=this.getHtmlElement();Dwt.

[WARNING] The variable el has already been declared in the same scope...
=this._state.end;}var  ---> el <--- =this.getHtmlElement();Dwt.setOpacity

[WARNING] Try to use a single 'var' statement per scope.
(this._actionId==-1){ ---> var  <--- duration=this._state.duration;var delta

[WARNING] The variable duration has already been declared in the same scope...
this._actionId==-1){var  ---> duration <--- =this._state.duration;var delta=

[WARNING] Try to use a single 'var' statement per scope.
var duration=this._state.duration; ---> var  <--- delta=duration/Math.abs(step)

[WARNING] Try to use a single 'var' statement per scope.
var top=this._state.value; ---> var  <--- step=this._state.step;var isOver

[WARNING] Try to use a single 'var' statement per scope.
var step=this._state.step; ---> var  <--- isOver=step>0?top>=this.

[WARNING] Try to use a single 'var' statement per scope.
top=this._state.end;} ---> var  <--- el=this.getHtmlElement();Dwt.

[WARNING] Try to use a single 'var' statement per scope.
(this._actionId==-1){ ---> var  <--- duration=this._state.duration;var delta

[WARNING] Try to use a single 'var' statement per scope.
var duration=this._state.duration; ---> var  <--- delta=duration/Math.abs(step)

[WARNING] Try to use a single 'var' statement per scope.
}}if(this._arrowDisabled){ ---> var  <--- tableNode=document.getElementById(this._htmlElId+

[WARNING] Try to use a single 'var' statement per scope.
){var x=ev.docX; ---> var  <--- y=ev.docY;var selfBound=Dwt

[WARNING] Try to use a single 'var' statement per scope.
docX;var y=ev.docY; ---> var  <--- selfBound=Dwt.getBounds(this._itemDiv)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getBounds(this._itemDiv); ---> var  <--- ret=(selfBound.x<=ev.docX

[WARNING] Try to use a single 'var' statement per scope.
.childrenData.size()==0; ---> var  <--- isFakeLeaf=!this.canShowOnRoot;return(isRealLeaf

[WARNING] Try to use a single 'var' statement per scope.
this.getPathItems(treeItemData.parent); ---> var  <--- result;var parentItem=this.getTreeItemData(this

[WARNING] Try to use a single 'var' statement per scope.
(treeItemData.parent);var result; ---> var  <--- parentItem=this.getTreeItemData(this._rootData,

[WARNING] Try to use a single 'var' statement per scope.
text!=currentPathItem){return"";} ---> var  <--- nextStartIndex=startIndex+1;if(pathItems.

[WARNING] Try to use a single 'var' statement per scope.
)==0){return"";} ---> var  <--- ret="";var i;for(i

[WARNING] Try to use a single 'var' statement per scope.
return"";}var ret=""; ---> var  <--- i;for(i=0;i<

[WARNING] Try to use a single 'var' statement per scope.
pathItems=this.getPathItems(path); ---> var  <--- ret=this.getTreeItemData(this._rootData,

[WARNING] Try to use a single 'var' statement per scope.
path.split(ZaTree.SEPERATOR); ---> var  <--- ret=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var ret=[];for( ---> var  <--- i=0;i<temp.length;

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- sz=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.size(); ---> var  <--- da;var j=0;var alreadySelected=

[WARNING] Try to use a single 'var' statement per scope.
_selectedItems.size();var da; ---> var  <--- j=0;var alreadySelected=false;for

[WARNING] Try to use a single 'var' statement per scope.
;var da;var j=0; ---> var  <--- alreadySelected=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
0;var alreadySelected=false;for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
getRealPath();isAddHistory=false;} ---> var  <--- result=this._getBuildNode(dataItem);if

[WARNING] Try to use a single 'var' statement per scope.
(this.currentRoot&&!skipDestroyNotify){ ---> var  <--- treeEvent=new ZaTreeEvent(result.oldPath,result

[WARNING] Try to use a single 'var' statement per scope.
result.oldPath,result.newPath); ---> var  <--- notifyRet=this.currentRoot.getData("dataItem")

[WARNING] Try to use a single 'var' statement per scope.
(result.resultItem);}else{ ---> var  <--- a=this._selectedItems.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- numSelectedItems=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
if(numSelectedItems>0){for( ---> var  <--- i=0;i<numSelectedItems;i++

[WARNING] Try to use a single 'var' statement per scope.
}this._selectedItems.removeAll(); ---> var  <--- treeItem=this.getTreeItemByPath(path);var 

[WARNING] Try to use a single 'var' statement per scope.
treeItem=this.getTreeItemByPath(path); ---> var  <--- selectedItem=this._getSelectedItem(treeItem);this

[WARNING] Try to use a single 'var' statement per scope.
this._updateHistory(treeItem,isAddHistory); ---> var  <--- buildDataItem=result.isNeed?result.resultItem:

[WARNING] Try to use a single 'var' statement per scope.
this.currentRoot){returnresult;} ---> var  <--- lastDataItem=this.currentRoot.getData("dataItem")

[WARNING] Try to use a single 'var' statement per scope.
this.currentRoot.getData("dataItem"); ---> var  <--- lastPath=this.getABPath(lastDataItem);if

[WARNING] Try to use a single 'var' statement per scope.
{result.resultItem=currentDataItem;}} ---> var  <--- currentPath=this.getABPath(result.resultItem)

[WARNING] Try to use a single 'var' statement per scope.
(!defaultSelectedItem){returncurrentRootNode;} ---> var  <--- childRen=currentRootNode.getItems();if(

[WARNING] Try to use a single 'var' statement per scope.
=this.getChildren();for( ---> var  <--- j=0;j<firstLevelChildren.length;

[WARNING] Try to use a single 'var' statement per scope.
<firstLevelChildren.length;j++){ ---> var  <--- currentTreeItem=firstLevelChildren[j];var rootDataPath=

[WARNING] Try to use a single 'var' statement per scope.
{var currentTreeItem=firstLevelChildren[j]; ---> var  <--- rootDataPath=currentTreeItem.getData("dataItem");var 

[WARNING] Try to use a single 'var' statement per scope.
rootDataPath=currentTreeItem.getData("dataItem"); ---> var  <--- rootPath=this.getABPath(rootDataPath);if

[WARNING] Try to use a single 'var' statement per scope.
rootPath==path){returncurrentTreeItem;} ---> var  <--- children=currentTreeItem.getChildren();for(

[WARNING] Try to use a single 'var' statement per scope.
=currentTreeItem.getChildren();for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
<children.length;i++){ ---> var  <--- childTreeItem=children[i];var text=

[WARNING] Try to use a single 'var' statement per scope.
{var childTreeItem=children[i]; ---> var  <--- text=childTreeItem.getText();var childPath

[WARNING] Try to use a single 'var' statement per scope.
var text=childTreeItem.getText(); ---> var  <--- childPath=rootPath+ZaTree.SEPERATOR+text;

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- currentAddNode=showRootNode.siblings.get(i)

[WARNING] Try to use a single 'var' statement per scope.
showRootNode.siblings.get(i); ---> var  <--- currentShowNode=this._buildNodeItem(currentAddNode);currentShowNode

[WARNING] Try to use a single 'var' statement per scope.
if(!dataTreeItem){return;} ---> var  <--- treeItem=this.getTreeItemByPath(path);if

[WARNING] Try to use a single 'var' statement per scope.
);}dataTreeItem.text=newName; ---> var  <--- parentPath=this.getPathItems(dataTreeItem.parent)

[WARNING] Try to use a single 'var' statement per scope.
);parentPath.push(newName); ---> var  <--- newPath=this.getPathByArray(parentPath);for

[WARNING] Try to use a single 'var' statement per scope.
this.getPathByArray(parentPath);for( ---> var  <--- i=0;i<dataTreeItem.childrenData.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- currentNode=dataTreeItem.childrenData.get(i)

[WARNING] Try to use a single 'var' statement per scope.
if(!treeItemData){return;} ---> var  <--- treeItem=this.getTreeItemByPath(path);if

[WARNING] Try to use a single 'var' statement per scope.
if(!treeItemData){return;} ---> var  <--- treeItem=this.getTreeItemByPath(path);if

[WARNING] Try to use a single 'var' statement per scope.
(path);if(treeItem){ ---> var  <--- removeTi=[];removeTi=treeItem.getChildren

[WARNING] Try to use a single 'var' statement per scope.
=treeItem.getChildren();for( ---> var  <--- i=0;i<removeTi.length;

[WARNING] Try to use a single 'var' statement per scope.
treeDataItem.addChild(related);for( ---> var  <--- i=0;i<treeDataItem.relatedObject.

[WARNING] Try to use a single 'var' statement per scope.
.relatedObject.length;i++){ ---> var  <--- currentObject=treeDataItem.relatedObject[i];currentObject

[WARNING] Try to use a single 'var' statement per scope.
treeDataItem.addChild(recent);for( ---> var  <--- i=0;i<treeDataItem.recentObject.

[WARNING] Try to use a single 'var' statement per scope.
.recentObject.length;i++){ ---> var  <--- currentObject=treeDataItem.recentObject[i];currentObject

[WARNING] Try to use a single 'var' statement per scope.
var ti,nextTi,key,currentRoot; ---> var  <--- clsName;if(showRootNode.text==ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
showRootNode._data[key]);} ---> var  <--- i,j,forceNode;for(i=

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- currentAddNode=showRootNode.childrenData.get(i)

[WARNING] Try to use a single 'var' statement per scope.
,currentAddNode);if(isHightlightedWhenMouseUp){ ---> var  <--- mouseOutEv=(AjxEnv.isIE)?DwtEvent.

[WARNING] Try to use a single 'var' statement per scope.
(item,ev){var i; ---> var  <--- a=this._selectedItems.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- numSelectedItems=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.size(); ---> var  <--- currentDataItem=item.getData("dataItem");var 

[WARNING] Try to use a single 'var' statement per scope.
currentDataItem=item.getData("dataItem"); ---> var  <--- isShowInHistory=currentDataItem.isShowHistory;var isAlias=currentDataItem

[WARNING] Try to use a single 'var' statement per scope.
);var isShowInHistory=currentDataItem.isShowHistory; ---> var  <--- isAlias=currentDataItem.isAlias();if(

[WARNING] Try to use a single 'var' statement per scope.
isAlias();if(isAlias){ ---> var  <--- aliasImage=currentDataItem.image;currentDataItem=this.

[WARNING] Try to use a single 'var' statement per scope.
this._selEv);}}else{ ---> var  <--- buildDataItem;if(!currentDataItem.isLeaf()

[WARNING] Try to use a single 'var' statement per scope.
;this._selectedItems.removeAll(); ---> var  <--- selectedItem;if(currentDataItem.isLeaf())

[WARNING] Try to use a single 'var' statement per scope.
var text=treeItem.getText(); ---> var  <--- dataItem=treeItem.getData("dataItem");var 

[WARNING] Try to use a single 'var' statement per scope.
dataItem=treeItem.getData("dataItem"); ---> var  <--- path=this.getABPath(dataItem);var 

[WARNING] Try to use a single 'var' statement per scope.
path=this.getABPath(dataItem); ---> var  <--- historyObject=new ZaHistory(path,text,undefined

[WARNING] Try to use a single 'var' statement per scope.
){var text=dataItem.text; ---> var  <--- type=ZaItem.ACCOUNT;var path=this

[WARNING] Try to use a single 'var' statement per scope.
text;var type=ZaItem.ACCOUNT; ---> var  <--- path=this.getABPath(dataItem);switch

[WARNING] Try to use a single 'var' statement per scope.
break;default:type=null;} ---> var  <--- historyObject=new ZaHistory(path,text,type

[WARNING] Try to use a single 'var' statement per scope.
ZaHistory(path,text,type); ---> var  <--- historyMgr=ZaZimbraAdmin.getInstance().getHisotryMgr(

[WARNING] Try to use a single 'var' statement per scope.
);historyMgr.addHistoryObj(historyObject); ---> var  <--- objList=historyMgr.getAllHistoryObj().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getAllHistoryObj().getArray(); ---> var  <--- ti=null;var image=null;var 

[WARNING] Try to use a single 'var' statement per scope.
getArray();var ti=null; ---> var  <--- image=null;var Tis=[];

[WARNING] Try to use a single 'var' statement per scope.
ti=null;var image=null; ---> var  <--- Tis=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var Tis=[];for( ---> var  <--- i=objList.length-1;i>

[WARNING] Try to use a single 'var' statement per scope.
dataItem){var abPath=[]; ---> var  <--- currentObject=dataItem;while(currentObject){abPath

[WARNING] Try to use a single 'var' statement per scope.
);currentObject=currentObject.parentObject;} ---> var  <--- ret=this.getPathByArray(abPath);return

[WARNING] Try to use a single 'var' statement per scope.
var items=this.getItems(); ---> var  <--- len=items.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=items.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
(path){var text=""; ---> var  <--- temp=path.split(ZaTree.SEPERATOR)

[WARNING] Try to use a single 'var' statement per scope.
;this._currentPathItems=temp;for( ---> var  <--- i=0;i<temp.length;

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(appBarOrder)){for( ---> var  <--- ix in opList){b=this._createActionButton

[WARNING] Try to use a single 'var' statement per scope.
].listener);}}else{ ---> var  <--- ix;for(var i in appBarOrder){

[WARNING] The variable ix has already been declared in the same scope...
.listener);}}else{var  ---> ix <--- ;for(var i in appBarOrder){ix

[WARNING] Try to use a single 'var' statement per scope.
}}else{var ix;for( ---> var  <--- i in appBarOrder){ix=appBarOrder[i

[WARNING] Try to use a single 'var' statement per scope.
ix].listener);}}} ---> var  <--- width=Dwt.getBounds(this._actionItemsEl)

[WARNING] Try to use a single 'var' statement per scope.
b.setData("_buttonId",buttonId); ---> var  <--- elContainer=this._createActionItemContainer();elContainer.

[WARNING] Try to use a single 'var' statement per scope.
=this.itemElArray.length+1; ---> var  <--- itemId=[this._htmlElId,"item",itemCount

[WARNING] Try to use a single 'var' statement per scope.
,itemCount].join("_"); ---> var  <--- data={id:this._htmlElId,itemId

[WARNING] Try to use a single 'var' statement per scope.
this._htmlElId,itemId:itemId}; ---> var  <--- html=AjxTemplate.expand(this.ACTION_ITEM_TEMPLATE,

[WARNING] Try to use a single 'var' statement per scope.
expand(this.ACTION_ITEM_TEMPLATE,data); ---> var  <--- cont=AjxStringUtil.calcDIV();cont.

[WARNING] Try to use a single 'var' statement per scope.
while(this._actionItemsEl.firstChild){ ---> var  <--- tempNode=this._actionItemsEl.removeChild(this.

[WARNING] Try to use a single 'var' statement per scope.
);tempNode=null;}for( ---> var  <--- actionIx in this.actionButtons){this.actionButtons

[WARNING] Try to use a single 'var' statement per scope.
var text=new Array(10); ---> var  <--- i=0;text[i++]=

[WARNING] Try to use a single 'var' statement per scope.
;}var parent=menu.parent; ---> var  <--- parentBounds=parent.getBounds();var windowSize

[WARNING] Try to use a single 'var' statement per scope.
var parentBounds=parent.getBounds(); ---> var  <--- windowSize=menu.shell.getSize();

[WARNING] Try to use a single 'var' statement per scope.
=menu.shell.getSize(); ---> var  <--- menuSize=menu.getSize();var parentElement

[WARNING] Try to use a single 'var' statement per scope.
var menuSize=menu.getSize(); ---> var  <--- parentElement=parent.getHtmlElement();var parentLocation

[WARNING] Try to use a single 'var' statement per scope.
var parentElement=parent.getHtmlElement(); ---> var  <--- parentLocation=Dwt.toWindow(parentElement,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(parentElement,0,0); ---> var  <--- leftBorder=(parentElement.style.borderLeftWidth==""

[WARNING] Try to use a single 'var' statement per scope.
parseInt(parentElement.style.borderLeftWidth); ---> var  <--- x;var dropDownEl=parent._dropDownEl;if

[WARNING] Try to use a single 'var' statement per scope.
.style.borderLeftWidth);var x; ---> var  <--- dropDownEl=parent._dropDownEl;if(!dropDownEl

[WARNING] Try to use a single 'var' statement per scope.
parentLocation.x+leftBorder;}else{ ---> var  <--- dropDownLocation=Dwt.toWindow(dropDownEl,0,

[WARNING] Try to use a single 'var' statement per scope.
){x=x-13;} ---> var  <--- y;var horizontalBorder=(parentElement.style.

[WARNING] Try to use a single 'var' statement per scope.
=x-13;}var y; ---> var  <--- horizontalBorder=(parentElement.style.borderTopWidth==""

[WARNING] Try to use a single 'var' statement per scope.
docX;if(this._settingImgEl){ ---> var  <--- imgX=Dwt.toWindow(this._settingImgEl,

[WARNING] Try to use a single 'var' statement per scope.
,DwtEvent.ONMOUSEOUT]);for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
var oldMenu=this.getMenu(); ---> var  <--- isPopup=false;if(oldMenu){isPopup

[WARNING] Try to use a single 'var' statement per scope.
{var obj=new AjxVector(); ---> var  <--- num=0;for(var i=this

[WARNING] Try to use a single 'var' statement per scope.
);var num=0;for( ---> var  <--- i=this._history.size()-

[WARNING] Try to use a single 'var' statement per scope.
==historyObject.path){return;} ---> var  <--- loc=this.findHistoryObj(historyObject);if

[WARNING] Try to use a single 'var' statement per scope.
(srcPath){var ret=false; ---> var  <--- srcPathArr=ZaTree.getPathItems(srcPath);var 

[WARNING] Try to use a single 'var' statement per scope.
srcPathArr=ZaTree.getPathItems(srcPath); ---> var  <--- destPathArr;var allowedObject=ZaHistoryMgr.getAllowedRecenctObject()

[WARNING] Try to use a single 'var' statement per scope.
.getPathItems(srcPath);var destPathArr; ---> var  <--- allowedObject=ZaHistoryMgr.getAllowedRecenctObject();for(

[WARNING] Try to use a single 'var' statement per scope.
=ZaHistoryMgr.getAllowedRecenctObject();for( ---> var  <--- i=0;i<allowedObject.length;

[WARNING] Try to use a single 'var' statement per scope.
(allowedObject[i]);for( ---> var  <--- j=0;j<destPathArr.length;

[WARNING] Try to use a single 'var' statement per scope.
1){returnfalse;}for( ---> var  <--- i=1;i<currentSize;i++

[WARNING] Try to use a single 'var' statement per scope.
var cnt=fileElementIds.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- element=document.getElementById(fileElementIds[i]

[WARNING] Try to use a single 'var' statement per scope.
element.files.length>0){ ---> var  <--- file=element.files[0];if

[WARNING] Try to use a single 'var' statement per scope.
[0];if(file){ ---> var  <--- fileName=file.name||file.fileName;

[WARNING] Try to use a single 'var' statement per scope.
=file.name||file.fileName; ---> var  <--- req=new XMLHttpRequest();req.open

[WARNING] Try to use a single 'var' statement per scope.
("X-Zimbra-Csrf-Token",window.csrfToken);} ---> var  <--- uploadResults=[];req.onreadystatechange=function

[WARNING] Try to use a single 'var' statement per scope.
===4){var response=null; ---> var  <--- aid=null;var status=req.status

[WARNING] Try to use a single 'var' statement per scope.
response=null;var aid=null; ---> var  <--- status=req.status;if(status===

[WARNING] Try to use a single 'var' statement per scope.
status;if(status===200){ ---> var  <--- resp=eval("["+req.responseText+

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(status===200){var resp= ---> eval <--- ("["+req.responseText+"]");

[WARNING] Try to use a single 'var' statement per scope.
(this.getUploadFrameId())); ---> var  <--- um=this.getUploadManager();window.

[WARNING] Try to use a single 'var' statement per scope.
){uploadResults=uploadResult;}else{ ---> var  <--- fileName="";if(fileElementIds[0]

[WARNING] Try to use a single 'var' statement per scope.
;if(fileElementIds[0]){ ---> var  <--- element=document.getElementById(fileElementIds[0]

[WARNING] Try to use a single 'var' statement per scope.
.getElementById(fileElementIds[0]); ---> var  <--- file=element.files[0];if

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- domainListController=ZaApp.getInstance().getDomainListController(

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.hasGlobalDomainListAccess()){ ---> var  <--- domainNameList=ZaApp.getInstance()._domainNameList;

[WARNING] Try to use a single 'var' statement per scope.
domainNameList&&domainNameList instanceof Array){for( ---> var  <--- i=0;i<domainNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
domainListController._currentQuery+")";}}} ---> var  <--- searchParams={query:domainListController._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraId,ZaDomain.A_domainType]}; ---> var  <--- resp=ZaSearch.searchDirectory(searchParams);this

[WARNING] Try to use a single 'var' statement per scope.
var response=resp.Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(ZaDomain);list.

[WARNING] Try to use a single 'var' statement per scope.
=this._overviewPanel.getFolderTree(); ---> var  <--- savedSearchPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
tree.removeAllChild(savedSearchPath);try{ ---> var  <--- savedSearchList=ZaApp.getInstance().getSavedSearchList(

[WARNING] Try to use a single 'var' statement per scope.
if(savedSearchList&&savedSearchList.length){ ---> var  <--- cnt=savedSearchList.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var cnt=savedSearchList.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- ti1=new ZaTreeItemData({parent:savedSearchPath,

[WARNING] Try to use a single 'var' statement per scope.
;tree.addTreeItemData(ti1);} ---> var  <--- searchRootNode=tree.getTreeItemByPath(savedSearchPath);if

[WARNING] Try to use a single 'var' statement per scope.
(savedSearchPath);if(searchRootNode){ ---> var  <--- showRootNode=tree.getTreeItemDataByPath(savedSearchPath);var 

[WARNING] Try to use a single 'var' statement per scope.
showRootNode=tree.getTreeItemDataByPath(savedSearchPath); ---> var  <--- ti,currentAddNode,forceNode,key;for(

[WARNING] Try to use a single 'var' statement per scope.
,currentAddNode,forceNode,key;for( ---> var  <--- i=0;i<showRootNode.childrenData.

[WARNING] Try to use a single 'var' statement per scope.
=this._overviewPanel.getFolderTree(); ---> var  <--- parentPath;var l=new AjxListener(this,

[WARNING] Try to use a single 'var' statement per scope.
_overviewPanel.getFolderTree();var parentPath; ---> var  <--- l=new AjxListener(this,this._overviewTreeListener

[WARNING] Try to use a single 'var' statement per scope.
);tree.addSelectionListener(l); ---> var  <--- mtaList=ZaApp.getInstance().getPostQList(

[WARNING] Try to use a single 'var' statement per scope.
.getPostQList().getArray(); ---> var  <--- showMonitor=ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]

[WARNING] Try to use a single 'var' statement per scope.
ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]; ---> var  <--- showManageAccount=ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]

[WARNING] Try to use a single 'var' statement per scope.
ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]; ---> var  <--- showAdministration=ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]

[WARNING] Try to use a single 'var' statement per scope.
ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]; ---> var  <--- showTool=ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]

[WARNING] Try to use a single 'var' statement per scope.
;if(!showMonitor){for( ---> var  <--- i=0;i<ZaSettings.OVERVIEW_MONITORING_ITEMS.

[WARNING] Try to use a single 'var' statement per scope.
}if(!showManageAccount){for( ---> var  <--- i=0;i<ZaSettings.OVERVIEW_MANAGER_ACCOUNT_ITEMS.

[WARNING] The variable i has already been declared in the same scope...
if(!showManageAccount){for(var  ---> i <--- =0;i<ZaSettings.OVERVIEW_MANAGER_ACCOUNT_ITEMS.length

[WARNING] Try to use a single 'var' statement per scope.
}if(!showAdministration){for( ---> var  <--- i=0;i<ZaSettings.OVERVIEW_ADMIN_ITEMS.

[WARNING] The variable i has already been declared in the same scope...
if(!showAdministration){for(var  ---> i <--- =0;i<ZaSettings.OVERVIEW_ADMIN_ITEMS.length

[WARNING] Try to use a single 'var' statement per scope.
}if(!showTool){for( ---> var  <--- i=0;i<ZaSettings.OVERVIEW_TOOLS_ITEMS.

[WARNING] The variable i has already been declared in the same scope...
if(!showTool){for(var  ---> i <--- =0;i<ZaSettings.OVERVIEW_TOOLS_ITEMS.length

[WARNING] Try to use a single 'var' statement per scope.
showTool=true;break;}}} ---> var  <--- home=new ZaTreeItemData({parent:"",

[WARNING] Try to use a single 'var' statement per scope.
(home);if(showMonitor){ ---> var  <--- mi=new ZaTreeItemData({parent:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- ti=new ZaTreeItemData({parent:ZaTree.

[WARNING] Try to use a single 'var' statement per scope.
if(mtaList&&mtaList.length){ ---> var  <--- cnt=mtaList.length;var postTi;if

[WARNING] Try to use a single 'var' statement per scope.
){var cnt=mtaList.length; ---> var  <--- postTi;if(cnt>1){postTi

[WARNING] Try to use a single 'var' statement per scope.
tree.addTreeItemData(postTi);for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- ti1=new ZaTreeItemData({parent:ZaTree.

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(showManageAccount){ ---> var  <--- accountMrgCallback=new AjxCallback(this,ZaOverviewPanelController.manageAccountTreeListener

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,ZaOverviewPanelController.manageAccountTreeListener); ---> var  <--- accountMgr=new ZaTreeItemData({parent:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
(accountMgr);if(accountMgr){ ---> var  <--- refpath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- acctitem=new ZaTreeItemData({parent:refpath,

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- aliaitem=new ZaTreeItemData({parent:refpath,

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- dlitem=new ZaTreeItemData({parent:refpath,

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- resourceitem=new ZaTreeItemData({parent:refpath,

[WARNING] Try to use a single 'var' statement per scope.
[ZaSettings.CARTE_BLANCHE_UI]){try{ ---> var  <--- serverList=ZaApp.getInstance().getServerList(

[WARNING] Try to use a single 'var' statement per scope.
if(serverList&&serverList.length){ ---> var  <--- cnt=serverList.length;var serverTi;if

[WARNING] The variable cnt has already been declared in the same scope...
(serverList&&serverList.length){var  ---> cnt <--- =serverList.length;var serverTi;if(

[WARNING] Try to use a single 'var' statement per scope.
){var cnt=serverList.length; ---> var  <--- serverTi;if(cnt>0){serverTi

[WARNING] Try to use a single 'var' statement per scope.
.OVP_home,ZaMsg.OVP_search]); ---> var  <--- currentSearchTi=new ZaTreeItemData({parent:parentPath,

[WARNING] Try to use a single 'var' statement per scope.
);tree.addTreeItemData(ti); ---> var  <--- searchOptionTi=new ZaTreeItemData({parent:parentPath,

[WARNING] Try to use a single 'var' statement per scope.
);currentSearchTi.addSilbings(searchOptionTi); ---> var  <--- optionBasePath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.OVP_search,ZaMsg.OVP_searchOption]); ---> var  <--- searchOptionTreeItem=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
().getFilterTreeItems();for( ---> var  <--- i=0;i<searchOptionTreeItem.length;

[WARNING] The variable i has already been declared in the same scope...
).getFilterTreeItems();for(var  ---> i <--- =0;i<searchOptionTreeItem.length;i

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- savedSearchTi=new ZaTreeItemData({parent:parentPath,

[WARNING] Try to use a single 'var' statement per scope.
currentSearchTi.addSilbings(savedSearchTi);try{ ---> var  <--- savedSearchList=ZaApp.getInstance().getSavedSearchList(

[WARNING] Try to use a single 'var' statement per scope.
if(savedSearchList&&savedSearchList.length){ ---> var  <--- savedSearchPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
]);this._savedSearchPath=savedSearchPath; ---> var  <--- cnt=savedSearchList.length;for(var ix

[WARNING] The variable cnt has already been declared in the same scope...
);this._savedSearchPath=savedSearchPath;var  ---> cnt <--- =savedSearchList.length;for(var ix=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=savedSearchList.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
cnt=savedSearchList.length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- ti1=new ZaTreeItemData({parent:savedSearchPath,

[WARNING] The variable ti1 has already been declared in the same scope...
ix<cnt;ix++){var  ---> ti1 <--- =new ZaTreeItemData({parent:savedSearchPath,id

[WARNING] Try to use a single 'var' statement per scope.
);if(ZaOverviewPanelController.treeModifiers){ ---> var  <--- methods=ZaOverviewPanelController.treeModifiers;var cnt=methods

[WARNING] Try to use a single 'var' statement per scope.
){var methods=ZaOverviewPanelController.treeModifiers; ---> var  <--- cnt=methods.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
{var methods=ZaOverviewPanelController.treeModifiers;var  ---> cnt <--- =methods.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=methods.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
){try{var eventHandler=null; ---> var  <--- treeItemType=ev.item.getData(ZaOverviewPanelController.

[WARNING] Try to use a single 'var' statement per scope.
().show(cos);} ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.OVP_configure,ZaMsg.OVP_cos]); ---> var  <--- skipHistory=ev.item.getData("skipHistory")

[WARNING] Try to use a single 'var' statement per scope.
load("id",domain.id); ---> var  <--- isLocal=(domain.attrs[ZaDomain.A_domainType

[WARNING] Try to use a single 'var' statement per scope.
]==ZaDomain.domainTypes.local); ---> var  <--- isAlias=(domain.attrs[ZaDomain.A_domainType

[WARNING] Try to use a single 'var' statement per scope.
(domain,false);}}} ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.OVP_configure,ZaMsg.OVP_domains]); ---> var  <--- skipHistory=ev.item.getData("skipHistory")

[WARNING] Try to use a single 'var' statement per scope.
item.parent.getData("viewId"); ---> var  <--- curController=ZaApp.getInstance().getServerStatsController(

[WARNING] Try to use a single 'var' statement per scope.
{var currentServer=new ZaServer(); ---> var  <--- viewId=ev.item.getData("viewId")

[WARNING] Try to use a single 'var' statement per scope.
getAppViewMgr().pushView(viewId); ---> var  <--- currentView=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
getAppViewMgr().getViewContentById(viewId); ---> var  <--- currentController=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getControllerById(viewId); ---> var  <--- currentObject=currentView._containedObject;var serverId=currentObject

[WARNING] Try to use a single 'var' statement per scope.
);var currentObject=currentView._containedObject; ---> var  <--- serverId=currentObject.id;currentServer.id=

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getCurrentController(); ---> var  <--- statsController=ZaApp.getInstance().getGlobalStatsController(

[WARNING] Try to use a single 'var' statement per scope.
stepValue=treeItem.getData("tabValue"); ---> var  <--- view=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getCurrentController(); ---> var  <--- serverStatsListController=ZaApp.getInstance().getServerStatsListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getServerStatsListController(); ---> var  <--- allServersList=ZaServer.getAll([ZaServer.A_description

[WARNING] Try to use a single 'var' statement per scope.
.OVP_home,ZaMsg.OVP_configure]); ---> var  <--- name=ev.item.getText();

[WARNING] Try to use a single 'var' statement per scope.
();domainListController._currentQuery=""; ---> var  <--- extquery=null;var actionType=ev.item

[WARNING] Try to use a single 'var' statement per scope.
_currentQuery="";var extquery=null; ---> var  <--- actionType=ev.item.getData(ZaOverviewPanelController.

[WARNING] Try to use a single 'var' statement per scope.
if(actionType==ZaZimbraAdmin._COS_DOMAIN_LIST_VIEW){ ---> var  <--- cos=ev.item.getData("cosItem")

[WARNING] Try to use a single 'var' statement per scope.
if(actionType==ZaZimbraAdmin._DOMAIN_ALIAS_LIST_VIEW){ ---> var  <--- domain=ev.item.getData("domainItem")

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.isGlobalAdmin()){ ---> var  <--- domainNameList=ZaApp.getInstance()._domainNameList;

[WARNING] Try to use a single 'var' statement per scope.
domainNameList.length>0){for( ---> var  <--- i=0;i<domainNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("aliasTargetId"); ---> var  <--- extquery="("+ZaAlias.A_AliasTargetId+"="+

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf);if(dls){ ---> var  <--- direct_dls=dls[ZaAccount.A2_directMemberList];var 

[WARNING] Try to use a single 'var' statement per scope.
direct_dls=dls[ZaAccount.A2_directMemberList]; ---> var  <--- indirect_dls=dls[ZaAccount.A2_indirectMemberList];var 

[WARNING] Try to use a single 'var' statement per scope.
indirect_dls=dls[ZaAccount.A2_indirectMemberList]; ---> var  <--- extquery="";var id="";for

[WARNING] Try to use a single 'var' statement per scope.
.A2_indirectMemberList];var extquery=""; ---> var  <--- id="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
"";var id="";for( ---> var  <--- i=0;i<(direct_dls.length

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("cosItem"); ---> var  <--- extquery="("+ZaAccount.A_COSId+"="+

[WARNING] Try to use a single 'var' statement per scope.
().getSearchListController()._searchField; ---> var  <--- name=ev.item.getData("name")

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("name"); ---> var  <--- query=ev.item.getData("query")

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- currentPath=tree.getABPath(ev.item.

[WARNING] Try to use a single 'var' statement per scope.
OVP_home,ZaMsg.OVP_search])){ ---> var  <--- searchPath=this.getSearchItemPath();tree.

[WARNING] Try to use a single 'var' statement per scope.
(searchPath,true,true);} ---> var  <--- slController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchListController(); ---> var  <--- searchField=slController._searchField;var name=ev

[WARNING] Try to use a single 'var' statement per scope.
);var searchField=slController._searchField; ---> var  <--- name=ev.item.getData("name")

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("name"); ---> var  <--- query=ev.item.getData("query")

[WARNING] Try to use a single 'var' statement per scope.
{searchField.setCurrentSavedSearch({}); ---> var  <--- searchParams=searchField.getCurrentSearchQuery();var displayName

[WARNING] Try to use a single 'var' statement per scope.
var searchParams=searchField.getCurrentSearchQuery(); ---> var  <--- displayName=searchField.getSearchFieldElement().value;

[WARNING] Try to use a single 'var' statement per scope.
displayName+=" In "+searchField.searchSelectedType;} ---> var  <--- params={type:1,unique:true

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("TreeItemType"); ---> var  <--- slController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
();slController.reset(); ---> var  <--- searchField=slController._searchField;var contentView=slController

[WARNING] Try to use a single 'var' statement per scope.
);var searchField=slController._searchField; ---> var  <--- contentView=slController._contentView;var skipNotify=false

[WARNING] Try to use a single 'var' statement per scope.
_searchField;var contentView=slController._contentView; ---> var  <--- skipNotify=false;if(itemType==ZaItem.

[WARNING] Try to use a single 'var' statement per scope.
}searchField.setCurrentSavedSearch({}); ---> var  <--- searchParams=searchField.getCurrentSearchQuery();var displayName

[WARNING] Try to use a single 'var' statement per scope.
var searchParams=searchField.getCurrentSearchQuery(); ---> var  <--- displayName=searchField.getSearchFieldElement().value;

[WARNING] Try to use a single 'var' statement per scope.
{displayName+=" In "+itemType;}} ---> var  <--- params={type:1,unique:true

[WARNING] Try to use a single 'var' statement per scope.
().getItems();for( ---> var  <--- i=0;i<childitems.length;

[WARNING] Try to use a single 'var' statement per scope.
<childitems.length;i++){ ---> var  <--- child=childitems[i];var attr=

[WARNING] Try to use a single 'var' statement per scope.
{var child=childitems[i]; ---> var  <--- attr=child.getData("TreeItemType");child

[WARNING] Try to use a single 'var' statement per scope.
ev){var types=[]; ---> var  <--- childitems=this._overviewPanel.getFolderTree().

[WARNING] Try to use a single 'var' statement per scope.
().getItems();for( ---> var  <--- i=0;i<childitems.length;

[WARNING] Try to use a single 'var' statement per scope.
<childitems.length;i++){ ---> var  <--- child=childitems[i];if(child

[WARNING] Try to use a single 'var' statement per scope.
[i];if(child){ ---> var  <--- type=child.getData("TreeItemType");if

[WARNING] Try to use a single 'var' statement per scope.
.push(type);}}} ---> var  <--- callback=new AjxCallback(this,ZaOverviewPanelController.accountStatCallback

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("dlItem"); ---> var  <--- members=dl[ZaDistributionList.A2_memberList];var 

[WARNING] Try to use a single 'var' statement per scope.
members=dl[ZaDistributionList.A2_memberList]; ---> var  <--- query="";if(members.length>

[WARNING] Try to use a single 'var' statement per scope.
members.length>0){for( ---> var  <--- i=0;i<members.length;

[WARNING] Try to use a single 'var' statement per scope.
query="(|"+query+")";} ---> var  <--- types=[ZaSearch.ACCOUNTS,ZaSearch.DLS

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.DLS,ZaSearch.ALIASES]; ---> var  <--- controller=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchListController(); ---> var  <--- busyId=Dwt.getNextId();var callback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(controller,controller.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
;controller.fetchAttrs=ZaSearch.standardAttributes; ---> var  <--- searchParams={query:query,types:types

[WARNING] Try to use a single 'var' statement per scope.
+ZaTree.SEPERATOR+ZaMsg.OVP_manageAccounts; ---> var  <--- tree=this.getOverviewPanel().getFolderTree(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- rootItem=tree.getCurrentRootItem();var rootPath

[WARNING] Try to use a single 'var' statement per scope.
var rootItem=tree.getCurrentRootItem(); ---> var  <--- rootPath=tree.getABPath(rootItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
if(!details){return;} ---> var  <--- targetPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.OVP_search,ZaMsg.OVP_search]); ---> var  <--- tree=this.getOverviewPanel().getFolderTree(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- rootItem=tree.getCurrentRootItem();var rootPath

[WARNING] Try to use a single 'var' statement per scope.
var rootItem=tree.getCurrentRootItem(); ---> var  <--- rootPath=tree.getABPath(rootItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
(targetPath!=rootPath){return;} ---> var  <--- childItems=rootItem.getItems();var currentSelected

[WARNING] Try to use a single 'var' statement per scope.
var childItems=rootItem.getItems(); ---> var  <--- currentSelected=tree.getCurrentSelectedItems().get(

[WARNING] Try to use a single 'var' statement per scope.
getCurrentSelectedItems().get(0); ---> var  <--- count;var attr;if(currentSelected){

[WARNING] Try to use a single 'var' statement per scope.
.get(0);var count; ---> var  <--- attr;if(currentSelected){attr=currentSelected

[WARNING] Try to use a single 'var' statement per scope.
(count);return;}for( ---> var  <--- i=0;i<childItems.length;

[WARNING] Try to use a single 'var' statement per scope.
<childItems.length;i++){ ---> var  <--- child=childItems[i];attr=child

[WARNING] Try to use a single 'var' statement per scope.
length==0){return"";} ---> var  <--- targetParentPath=patharr.join(ZaTree.SEPERATOR)

[WARNING] Try to use a single 'var' statement per scope.
patharr.join(ZaTree.SEPERATOR); ---> var  <--- rootItem=tree.getCurrentRootItem();var rootPath

[WARNING] Try to use a single 'var' statement per scope.
var rootItem=tree.getCurrentRootItem(); ---> var  <--- rootPath=tree.getABPath(rootItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
);if(rootPath==targetParentPath){ ---> var  <--- parentItemData=tree.getTreeItemDataByPath(targetParentPath);if

[WARNING] Try to use a single 'var' statement per scope.
length==0){return"";} ---> var  <--- targetParentPath=patharr.join(ZaTree.SEPERATOR)

[WARNING] Try to use a single 'var' statement per scope.
patharr.join(ZaTree.SEPERATOR); ---> var  <--- relatePath=ZaTree.SEPERATOR+ZaMsg.OVP_related;

[WARNING] Try to use a single 'var' statement per scope.
=ZaTree.SEPERATOR+ZaMsg.OVP_related; ---> var  <--- showRootNode=tree.getTreeItemDataByPath(targetParentPath);tree

[WARNING] Try to use a single 'var' statement per scope.
);tree.buildTree(showRootNode); ---> var  <--- selectedItems=tree.getCurrentSelectedItems().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getCurrentSelectedItems().getArray(); ---> var  <--- oldselectedItem=selectedItems?selectedItems[0]:null

[WARNING] Try to use a single 'var' statement per scope.
selectedItems?selectedItems[0]:null; ---> var  <--- selectedItemPath=oldselectedItem?tree.getABPath(oldselectedItem.

[WARNING] Try to use a single 'var' statement per scope.
.getData("dataItem")):null; ---> var  <--- newselectedItem=tree.getTreeItemByPath(selectedItemPath)||tree

[WARNING] Try to use a single 'var' statement per scope.
)||tree.getSelectedItem(showRootNode); ---> var  <--- skipNotify=false;if(selectedItemPath.indexOf(

[WARNING] Try to use a single 'var' statement per scope.
itemArray=AjxUtil.toArray(items); ---> var  <--- tempHashDomain={};var tempHashCos={}

[WARNING] Try to use a single 'var' statement per scope.
items);var tempHashDomain={}; ---> var  <--- tempHashCos={};var tempHashDL={}

[WARNING] Try to use a single 'var' statement per scope.
{};var tempHashCos={}; ---> var  <--- tempHashDL={};var tempHashAccount={}

[WARNING] Try to use a single 'var' statement per scope.
{};var tempHashDL={}; ---> var  <--- tempHashAccount={};var cosId,cosName,

[WARNING] Try to use a single 'var' statement per scope.
{};var tempHashAccount={}; ---> var  <--- cosId,cosName,cos,domainName,domain,

[WARNING] Try to use a single 'var' statement per scope.
,dl,dlName,dlId;for( ---> var  <--- i=0;i<itemArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<itemArray.length;i++){ ---> var  <--- item=itemArray[i];if(AjxUtil

[WARNING] Try to use a single 'var' statement per scope.
ALIAS){if(!skipDL){ ---> var  <--- targetObj=item.targetObj;var targetName=targetObj

[WARNING] Try to use a single 'var' statement per scope.
){var targetObj=item.targetObj; ---> var  <--- targetName=targetObj[ZaAccount.A_name];if

[WARNING] Try to use a single 'var' statement per scope.
][ZaAccount.A2_directMemberList])){ ---> var  <--- member=item[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
][ZaAccount.A2_directMemberList];for( ---> var  <--- i=0;i<member.length;

[WARNING] The variable i has already been declared in the same scope...
[ZaAccount.A2_directMemberList];for(var  ---> i <--- =0;i<member.length;i

[WARNING] Try to use a single 'var' statement per scope.
){var type=item.type; ---> var  <--- relativePath=ZaMsg.OVP_accounts;if(type==

[WARNING] Try to use a single 'var' statement per scope.
OVP_resources;}}}}}}} ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.OVP_manageAccounts,relativePath]); ---> var  <--- name=item.name;this.addObjectItem(

[WARNING] Try to use a single 'var' statement per scope.
=parentPath+ZaTree.SEPERATOR+name; ---> var  <--- tree=this.getOverviewPanel().getFolderTree(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- mappingId,handler,map;var needToAddNameNode=false

[WARNING] Try to use a single 'var' statement per scope.
);var mappingId,handler,map; ---> var  <--- needToAddNameNode=false;var needToAddTabNodes=false;var 

[WARNING] Try to use a single 'var' statement per scope.
handler,map;var needToAddNameNode=false; ---> var  <--- needToAddTabNodes=false;var nameDataItem=tree.getTreeItemDataByPath

[WARNING] Try to use a single 'var' statement per scope.
needToAddNameNode=false;var needToAddTabNodes=false; ---> var  <--- nameDataItem=tree.getTreeItemDataByPath(namePath);if

[WARNING] Try to use a single 'var' statement per scope.
0){needToAddTabNodes=true;}} ---> var  <--- historyObject=new ZaHistory(namePath,name,relatedZaItem

[WARNING] Try to use a single 'var' statement per scope.
(historyObject);if(needToAddNameNode){ ---> var  <--- parentDataItem=tree.getTreeItemDataByPath(parentPath);var 

[WARNING] Try to use a single 'var' statement per scope.
parentDataItem=tree.getTreeItemDataByPath(parentPath); ---> var  <--- index=parentDataItem.getChildrenNum();var parentId

[WARNING] Try to use a single 'var' statement per scope.
var index=parentDataItem.getChildrenNum(); ---> var  <--- parentId=parentDataItem.id;if(!mappingId2handlerMap

[WARNING] Try to use a single 'var' statement per scope.
(this.getRecentList());} ---> var  <--- currentViewId=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
){var subTabItem,subTabInfo,subTabItemId; ---> var  <--- tree=this.getOverviewPanel().getFolderTree(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- parentPath=tree.getABPath(parentItem);var 

[WARNING] Try to use a single 'var' statement per scope.
parentPath=tree.getABPath(parentItem); ---> var  <--- isShow=isShowHistory?true:false;if(

[WARNING] Try to use a single 'var' statement per scope.
[0].value);for( ---> var  <--- i=0;i<subTabs.length;

[WARNING] Try to use a single 'var' statement per scope.
item.parent.getData("viewId"); ---> var  <--- stepValue=ev.item.getData("tabValue")

[WARNING] Try to use a single 'var' statement per scope.
getAppViewMgr().pushView(viewId); ---> var  <--- currentView=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
;}if(ev.refresh){ ---> var  <--- currentController=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(currentController)){ ---> var  <--- currentObject=currentController._currentObject;if(currentObject&&

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("viewId"); ---> var  <--- stepValue=ev.item.getData("firstTab")

[WARNING] Try to use a single 'var' statement per scope.
getAppViewMgr().pushView(viewId); ---> var  <--- currentView=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
;}if(ev.refresh){ ---> var  <--- currentController=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(currentController)){ ---> var  <--- currentObject=currentController._currentObject;if(currentObject&&

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getHisotryMgr(); ---> var  <--- objList=historyMgr.getAllHistoryObj().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getAllHistoryObj().getArray(); ---> var  <--- Tis=[];var ti=null;

[WARNING] Try to use a single 'var' statement per scope.
();var Tis=[]; ---> var  <--- ti=null;var image=null;for

[WARNING] Try to use a single 'var' statement per scope.
=[];var ti=null; ---> var  <--- image=null;for(var i=objList

[WARNING] Try to use a single 'var' statement per scope.
null;var image=null;for( ---> var  <--- i=objList.length-1;i>

[WARNING] Try to use a single 'var' statement per scope.
){var id=oldInstance.id; ---> var  <--- caption=oldInstance.caption;var tooltip=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
id;var caption=oldInstance.caption; ---> var  <--- tooltip=oldInstance.tt;var lsnr=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
caption;var tooltip=oldInstance.tt; ---> var  <--- lsnr=oldInstance.listener;var imgId=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
tt;var lsnr=oldInstance.listener; ---> var  <--- imgId=oldInstance.imageId;var disImgId=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
listener;var imgId=oldInstance.imageId; ---> var  <--- disImgId=oldInstance.disImageId;var type=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
imageId;var disImgId=oldInstance.disImageId; ---> var  <--- type=oldInstance.type;var menuOpList=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
disImageId;var type=oldInstance.type; ---> var  <--- menuOpList=oldInstance.menuOpList;var className=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
type;var menuOpList=oldInstance.menuOpList; ---> var  <--- className=oldInstance.className;var labelId=oldInstance

[WARNING] Try to use a single 'var' statement per scope.
menuOpList;var className=oldInstance.className; ---> var  <--- labelId=oldInstance.labelId;var newOp=new 

[WARNING] Try to use a single 'var' statement per scope.
className;var labelId=oldInstance.labelId; ---> var  <--- newOp=new ZaOperation(id,caption,tooltip

[WARNING] Try to use a single 'var' statement per scope.
ZA_OP_INDEX;ZaOperation.RIGHT_BRACKET=++ZA_OP_INDEX; ---> var  <--- ZaOpList=["UNKNOWN","NONE","SEP","NEW"

[WARNING] Try to use a single 'var' statement per scope.
this._contentView.scrollHasMore);}} ---> var  <--- busyId=Dwt.getNextId();var callback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
+"(!("+ZaAccount.A_zimbraIsSystemAccount+"=TRUE)))"; ---> var  <--- searchParams={query:this._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAlias.A_AliasTargetId];} ---> var  <--- type=item.type;var viewContstructor=ZaAccountXFormView

[WARNING] Try to use a single 'var' statement per scope.
;}var type=item.type; ---> var  <--- viewContstructor=ZaAccountXFormView;if(type==ZaItem.

[WARNING] Try to use a single 'var' statement per scope.
if(type==ZaItem.ALIAS){ ---> var  <--- targetObj=item.getAliasTargetObj();if(

[WARNING] Try to use a single 'var' statement per scope.
setTitle(ZaMsg.CHNP_Title);}} ---> var  <--- obj=new Object();obj[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
==ZmCsfeException.AUTH_TOKEN_CHANGED)){try{ ---> var  <--- bReloginMode=false;if(ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
)){ZmCsfeCommand.noAuth=true; ---> var  <--- dlgs=ZaApp.getInstance().dialogs;

[WARNING] Try to use a single 'var' statement per scope.
if(dlgs!=undefined){for( ---> var  <--- dlg in dlgs){dlgs[dlg].

[WARNING] Try to use a single 'var' statement per scope.
(account){try{var obj; ---> var  <--- accId;if(account.type==ZaItem.

[WARNING] Try to use a single 'var' statement per scope.
":7070"].join("");} ---> var  <--- publicMailURL=account[ZaAccount.A2_publicMailURL];if

[WARNING] Try to use a single 'var' statement per scope.
.hostname)&&publicMailURL){try{ ---> var  <--- startIndex=publicMailURL.indexOf("//");if

[WARNING] Try to use a single 'var' statement per scope.
;}else{startIndex=0;} ---> var  <--- endIndex=publicMailURL.indexOf(":",startIndex)

[WARNING] Try to use a single 'var' statement per scope.
.indexOf("/",startIndex);} ---> var  <--- mailFQDN;if(endIndex!=-1){

[WARNING] Try to use a single 'var' statement per scope.
=publicMailURL.substring(startIndex);} ---> var  <--- servers=ZaServer.getAll().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getAll().getArray(); ---> var  <--- mailBoxIP="";if(servers.length>

[WARNING] Try to use a single 'var' statement per scope.
if(servers.length>1){ ---> var  <--- found=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
){var found=false;for( ---> var  <--- i=0;i<servers.length;

[WARNING] Try to use a single 'var' statement per scope.
[ZaServer.A_Pop3BindAddress]){for( ---> var  <--- j=0;j<servers[i]

[WARNING] Try to use a single 'var' statement per scope.
[i].nifs){for( ---> var  <--- j=0;j<servers[i]

[WARNING] The variable j has already been declared in the same scope...
i].nifs){for(var  ---> j <--- =0;j<servers[i].

[WARNING] Try to use a single 'var' statement per scope.
,AjxException.UNKNOWN,"ZaAccountListController.prototype._viewMailListener");} ---> var  <--- mServer=[publicMailURL,"/service/preauth?authtoken=",obj.authToken

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.trim(mServer,true); ---> var  <--- win=window.open(mServer,"_blank")

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var key

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- key=0;key<cnt;key++

[WARNING] Try to use a single 'var' statement per scope.
;key<cnt;key++){ ---> var  <--- item=arrItems[key];if(item

[WARNING] Try to use a single 'var' statement per scope.
._haveDls||this._haveCoses)){ ---> var  <--- domainListController=ZaApp.getInstance().getDomainListController(

[WARNING] Try to use a single 'var' statement per scope.
+ZaId.VIEW_ACCTLIST+"_ConfirmDeleteItemsInTab");} ---> var  <--- msg=ZaMsg.dl_warning_delete_accounts_in_tab;msg+=ZaAccountListController.

[WARNING] Try to use a single 'var' statement per scope.
ZaAccountListController.getDlMsgFromList(this._removeList); ---> var  <--- cnt=this._removeList.length;var sysResources

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._removeList.length; ---> var  <--- sysResources=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var sysResources=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(listArr){var dlgMsg="<br><ul>"; ---> var  <--- i=0;for(var key in listArr

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in listArr){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
"<li>...</li>";break;}dlgMsg+="<li>"; ---> var  <--- szAccName=listArr[key].attrs[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
if(szAccName.length>50){ ---> var  <--- beginIx=0;var endIx=50;do

[WARNING] Try to use a single 'var' statement per scope.
>50){var beginIx=0; ---> var  <--- endIx=50;do{if(endIx>=

[WARNING] Try to use a single 'var' statement per scope.
;}else{var myCos=null; ---> var  <--- maxPwdLen=null;var minPwdLen=null;item

[WARNING] Try to use a single 'var' statement per scope.
myCos=null;var maxPwdLen=null; ---> var  <--- minPwdLen=null;item.refresh(true,

[WARNING] Try to use a single 'var' statement per scope.
==null){minPwdLen=1;} ---> var  <--- szPwd=this._chngPwdDlg.getPassword();

[WARNING] Try to use a single 'var' statement per scope.
(szPwd).length<minPwdLen){ ---> var  <--- minpassMsg;if(minPwdLen>1){minpassMsg

[WARNING] Try to use a single 'var' statement per scope.
CTR_PREFIX+ZaId.VIEW_ACCTLIST+"_errorMsg"); ---> var  <--- maxpassMsg;if(maxPwdLen>1){maxpassMsg

[WARNING] Try to use a single 'var' statement per scope.
this._chngPwdDlg.getMustChangePassword()){ ---> var  <--- mods=new Object();mods[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
ex.code==ZmCsfeException.ACCT_INVALID_PASSWORD){ ---> var  <--- szMsg=ZaMsg.ERROR_PASSWORD_INVALID;if(ex.

[WARNING] Try to use a single 'var' statement per scope.
);if(cnt==1){ ---> var  <--- item=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
item.type==ZaItem.ACCOUNT){ ---> var  <--- enable=false;var domainName=ZaAccount.getDomain

[WARNING] Try to use a single 'var' statement per scope.
.ACCOUNT){var enable=false; ---> var  <--- domainName=ZaAccount.getDomain(item.toString(

[WARNING] Try to use a single 'var' statement per scope.
getDomain(item.toString()); ---> var  <--- isAuthInternal=ZaAccountXFormView.isAuthfromInternal(domainName);if

[WARNING] Try to use a single 'var' statement per scope.
targetObj=item.getAliasTargetObj();} ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
=item.getAliasTargetObj();}var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
targetObj=item.getAliasTargetObj();} ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
=item.getAliasTargetObj();}var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
item.type==ZaItem.RESOURCE){ ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
.type==ZaItem.RESOURCE){var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
enabled=false;}}}for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- itemObj=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
(ev){try{var alias; ---> var  <--- alias=this._contentView.getSelection()[

[WARNING] The variable alias has already been declared in the same scope...
ev){try{var alias;var  ---> alias <--- =this._contentView.getSelection()[0

[WARNING] Try to use a single 'var' statement per scope.
tabConstructor(this._container,entry); ---> var  <--- elements=new Object();elements[ZaAppViewMgr

[WARNING] Try to use a single 'var' statement per scope.
_currentObject)){isDeleteEnabled=false;} ---> var  <--- tmpObj=this._view.getObject();

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_mail]!=null){ ---> var  <--- myitem=tmpObj.attrs[ZaAccount.A_mail]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaAccount.A_mail]; ---> var  <--- myaccount=tmpObj.name;var mydomain=ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
];var myaccount=tmpObj.name; ---> var  <--- mydomain=ZaAccount.getDomain(myaccount);var 

[WARNING] Try to use a single 'var' statement per scope.
mydomain=ZaAccount.getDomain(myaccount); ---> var  <--- domainObj=ZaDomain.getDomainByName(mydomain);if

[WARNING] Try to use a single 'var' statement per scope.
EXPIRE_SESSION].enabled=false;}} ---> var  <--- isToEnable=(this._view&&this._view

[WARNING] Try to use a single 'var' statement per scope.
.getMyForm().getItemsInErrorState(); ---> var  <--- dlgMsg=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>";

[WARNING] Try to use a single 'var' statement per scope.
=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>"; ---> var  <--- i=0;for(var key in errItems

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in errItems){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
(key=="size"){continue;} ---> var  <--- label=errItems[key].getInheritedProperty("msgName"

[WARNING] Try to use a single 'var' statement per scope.
dlgMsg,true);returnfalse;} ---> var  <--- tmpObj=this._view.getObject();

[WARNING] Try to use a single 'var' statement per scope.
.popup();returnfalse;} ---> var  <--- mods=new Object();if(!

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_COSId])){ ---> var  <--- cos=ZaCos.getCosByName(tmpObj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
.A_COSId]="";}for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraAvailableSkin]];}else{ ---> var  <--- cnt=tmpObj.attrs[ZaAccount.A_zimbraAvailableSkin]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAvailableSkin]=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
A_zimbraAvailableSkin]=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraZimletAvailableZimlets]];}else{ ---> var  <--- cnt=tmpObj.attrs[ZaAccount.A_zimbraZimletAvailableZimlets]

[WARNING] The variable cnt has already been declared in the same scope...
.A_zimbraZimletAvailableZimlets]];}else{var  ---> cnt <--- =tmpObj.attrs[ZaAccount.A_zimbraZimletAvailableZimlets].

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraZimletAvailableZimlets]=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
A_zimbraZimletAvailableZimlets]=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailTransport]){ ---> var  <--- v=tmpObj.attrs[ZaAccount.A_zimbraMailTransport]

[WARNING] Try to use a single 'var' statement per scope.
v)){returnfalse;}} ---> var  <--- tmpObjCnt=-1;var currentObjCnt=-1

[WARNING] Try to use a single 'var' statement per scope.
;}}var tmpObjCnt=-1; ---> var  <--- currentObjCnt=-1;if(ZaTabView.isTAB_ENABLED

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias]=="string"){ ---> var  <--- tmpStr=tmpObj.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias]=="string"){ ---> var  <--- tmpStr=this._currentObject.attrs[ZaAccount.

[WARNING] The variable tmpStr has already been declared in the same scope...
ZaAccount.A_zimbraMailAlias]=="string"){var  ---> tmpStr <--- =this._currentObject.attrs[ZaAccount.A_zimbraMailAlias

[WARNING] Try to use a single 'var' statement per scope.
].length-1;}for( ---> var  <--- tmpIx=tmpObjCnt;tmpIx>=0;tmpIx--

[WARNING] Try to use a single 'var' statement per scope.
>=0;tmpIx--){for( ---> var  <--- currIx=currentObjCnt;currIx>=0;currIx--

[WARNING] Try to use a single 'var' statement per scope.
].length;}try{for( ---> var  <--- ix=0;ix<currentObjCnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias].length;} ---> var  <--- failedAliases="";var failedAliasesCnt=0;try

[WARNING] Try to use a single 'var' statement per scope.
.length;}var failedAliases=""; ---> var  <--- failedAliasesCnt=0;try{for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var failedAliasesCnt=0;try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
failedAliasesCnt=0;try{for(var  ---> ix <--- =0;ix<tmpObjCnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
ex.code==ZmCsfeException.ACCT_EXISTS){ ---> var  <--- account=this._findAlias(tmpObj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
,ex);returnfalse;}} ---> var  <--- newName=null;if(this._currentObject&&

[WARNING] Try to use a single 'var' statement per scope.
var regex=new RegExp("(lmtp|smtp|LMTP|SMTP)\\:[\\w\\.\\-]+\\:[0-9]+$"); ---> var  <--- match=regex.exec(elementValue);if

[WARNING] Try to use a single 'var' statement per scope.
_list);}return;}for( ---> var  <--- i=0;i<cosNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
+this._currentQuery+")";}} ---> var  <--- busyId=Dwt.getNextId();openInNewTab=

[WARNING] Try to use a single 'var' statement per scope.
;openInNewTab=openInNewTab?openInNewTab:false; ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
:doPush,busyId:busyId}); ---> var  <--- searchParams={query:this._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
{var newCos=new ZaCos(); ---> var  <--- item=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
if(item.attrs){for( ---> var  <--- aname in item.attrs){if((

[WARNING] Try to use a single 'var' statement per scope.
{var newCos=new ZaCos(); ---> var  <--- defCos=ZaCos.getCosByName("default");newCos

[WARNING] Try to use a single 'var' statement per scope.
ZaCos.CREATE_COS_RIGHT]=true;for( ---> var  <--- aname in defCos.attrs){if((

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var key

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- key=0;key<cnt;key++

[WARNING] Try to use a single 'var' statement per scope.
;key<cnt;key++){ ---> var  <--- item=arrItems[key];if(item

[WARNING] Try to use a single 'var' statement per scope.
+ZaId.VIEW_COSLIST+"_ConfirmDeleteItemsInTab");} ---> var  <--- msg=ZaMsg.dl_warning_delete_accounts_in_tab;msg+=ZaCosListController.

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in listArr){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
].name.length>50){ ---> var  <--- endIx=49;var beginIx=0;while

[WARNING] Try to use a single 'var' statement per scope.
>50){var endIx=49; ---> var  <--- beginIx=0;while(endIx<listArr[

[WARNING] Try to use a single 'var' statement per scope.
successRemList=new Array();for( ---> var  <--- key in this._removeList){if(this

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelectionCount(); ---> var  <--- hasDefault=false;if(cnt>=1)

[WARNING] Try to use a single 'var' statement per scope.
false;if(cnt>=1){ ---> var  <--- arrDivs=this._contentView.getSelectedItems().

[WARNING] Try to use a single 'var' statement per scope.
().getArray();for( ---> var  <--- key in arrDivs){var item=this.

[WARNING] Try to use a single 'var' statement per scope.
;for(var key in arrDivs){ ---> var  <--- item=this._contentView.getItemFromElement(arrDivs[

[WARNING] Try to use a single 'var' statement per scope.
}}if(cnt==1){ ---> var  <--- item=this._contentView.getSelection()[

[WARNING] The variable item has already been declared in the same scope...
}if(cnt==1){var  ---> item <--- =this._contentView.getSelection()[0

[WARNING] Try to use a single 'var' statement per scope.
.getMyForm().getItemsInErrorState(); ---> var  <--- dlgMsg=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>";

[WARNING] Try to use a single 'var' statement per scope.
=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>"; ---> var  <--- i=0;for(var key in errItems

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in errItems){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
(key=="size"){continue;} ---> var  <--- label=errItems[key].getInheritedProperty("msgName"

[WARNING] Try to use a single 'var' statement per scope.
dlgMsg,true);returnfalse;} ---> var  <--- tmpObj=this._view.getObject();

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- isNew=false;if(!ZaCos.checkValues

[WARNING] Try to use a single 'var' statement per scope.
(tmpObj)){returnfalse;} ---> var  <--- mods=new Object();if(!

[WARNING] Try to use a single 'var' statement per scope.
){isNew=true;}for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
[ZaCos.A_zimbraMailHostPool]!=null){ ---> var  <--- tmpMods=[];if(!(tmpObj

[WARNING] Try to use a single 'var' statement per scope.
ZaCos.A_zimbraMailHostPool]];}else{ ---> var  <--- cnt=tmpObj.attrs[ZaCos.A_zimbraMailHostPool]

[WARNING] Try to use a single 'var' statement per scope.
length;tmpMods=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
;tmpMods=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaCos.A_zimbraAvailableSkin]!=null){ ---> var  <--- tmpMods=[];if(!(tmpObj

[WARNING] The variable tmpMods has already been declared in the same scope...
ZaCos.A_zimbraAvailableSkin]!=null){var  ---> tmpMods <--- =[];if(!(tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
ZaCos.A_zimbraAvailableSkin]];}else{ ---> var  <--- cnt=tmpObj.attrs[ZaCos.A_zimbraAvailableSkin]

[WARNING] The variable cnt has already been declared in the same scope...
.A_zimbraAvailableSkin]];}else{var  ---> cnt <--- =tmpObj.attrs[ZaCos.A_zimbraAvailableSkin].

[WARNING] Try to use a single 'var' statement per scope.
length;tmpMods=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
;tmpMods=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaCos.A_zimbraZimletAvailableZimlets]!=null){ ---> var  <--- tmpMods=[];if(!(tmpObj

[WARNING] The variable tmpMods has already been declared in the same scope...
ZaCos.A_zimbraZimletAvailableZimlets]!=null){var  ---> tmpMods <--- =[];if(!(tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
ZaCos.A_zimbraZimletAvailableZimlets]];}else{ ---> var  <--- cnt=tmpObj.attrs[ZaCos.A_zimbraZimletAvailableZimlets]

[WARNING] The variable cnt has already been declared in the same scope...
.A_zimbraZimletAvailableZimlets]];}else{var  ---> cnt <--- =tmpObj.attrs[ZaCos.A_zimbraZimletAvailableZimlets].

[WARNING] Try to use a single 'var' statement per scope.
length;tmpMods=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
;tmpMods=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
newName);}catch(ex){ ---> var  <--- detailStr="";for(var prop in ex

[WARNING] Try to use a single 'var' statement per scope.
){var detailStr="";for( ---> var  <--- prop in ex){detailStr=detailStr+prop

[WARNING] Try to use a single 'var' statement per scope.
);}}catch(ex){ ---> var  <--- detailStr="";for(var prop in ex

[WARNING] The variable detailStr has already been declared in the same scope...
;}}catch(ex){var  ---> detailStr <--- ="";for(var prop in ex)

[WARNING] Try to use a single 'var' statement per scope.
){var detailStr="";for( ---> var  <--- prop in ex){if(ex[prop

[WARNING] The variable prop has already been declared in the same scope...
{var detailStr="";for(var  ---> prop <---  in ex){if(ex[prop]

[WARNING] Try to use a single 'var' statement per scope.
{var newCos=new ZaCos(); ---> var  <--- defCos=ZaCos.getCosByName("default");for

[WARNING] Try to use a single 'var' statement per scope.
ZaCos.getCosByName("default");for( ---> var  <--- aname in defCos.attrs){if((

[WARNING] Try to use a single 'var' statement per scope.
domainNameList.length>0){for( ---> var  <--- i=0;i<domainNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
._list);}return;}} ---> var  <--- busyId=Dwt.getNextId();var callback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
:doPush,busyId:busyId}); ---> var  <--- searchParams={query:this._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
editDomainAlias(item,true);}} ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
_contentView.getSelectionCount()==1){ ---> var  <--- item=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraDomainAliasTarget]=item;} ---> var  <--- domainAliasWizard=ZaApp.getInstance().getDomainAliasWizard(

[WARNING] Try to use a single 'var' statement per scope.
contentView.getSelectionCount()>0){ ---> var  <--- arrItems=contentView.getSelection();var cnt

[WARNING] Try to use a single 'var' statement per scope.
var arrItems=contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var key

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- key=0;key<cnt;key++

[WARNING] Try to use a single 'var' statement per scope.
;key<cnt;key++){ ---> var  <--- item=arrItems[key];if(item

[WARNING] Try to use a single 'var' statement per scope.
+ZaId.VIEW_DMLIST+"_ConfirmDeleteItemsInTab");} ---> var  <--- msg=ZaMsg.dl_warning_delete_accounts_in_tab;msg+=ZaDomainListController.

[WARNING] Try to use a single 'var' statement per scope.
_contentView.getSelection()[0]; ---> var  <--- domainName=item.name;ZaDomain.searchAccountsInDomain(

[WARNING] Try to use a single 'var' statement per scope.
(listArr){var i=0; ---> var  <--- dlgMsg="<br><ul>";for(var key in listArr

[WARNING] Try to use a single 'var' statement per scope.
0;var dlgMsg="<br><ul>";for( ---> var  <--- key in listArr){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
].name.length>50){ ---> var  <--- endIx=49;var beginIx=0;while

[WARNING] Try to use a single 'var' statement per scope.
>50){var endIx=49; ---> var  <--- beginIx=0;while(endIx<listArr[

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- searchTypes=[ZaSearch.ACCOUNTS,ZaSearch.DLS

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.ALIASES,ZaSearch.RESOURCES]; ---> var  <--- searchParams={query:"",domain:domainName

[WARNING] Try to use a single 'var' statement per scope.
busyId,busyMsg:ZaMsg.BUSY_SEARCHING}; ---> var  <--- resp=ZaSearch.searchDirectory(searchParams);if

[WARNING] Try to use a single 'var' statement per scope.
resp&&resp.Body.SearchDirectoryResponse){ ---> var  <--- response=resp.Body.SearchDirectoryResponse;var acctlist

[WARNING] Try to use a single 'var' statement per scope.
var response=resp.Body.SearchDirectoryResponse; ---> var  <--- acctlist=new ZaItemList(ZaAccount);acctlist.

[WARNING] Try to use a single 'var' statement per scope.
else{returnnull;}}else{ ---> var  <--- currentController=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
acctlist&&acctlist.length>0){ ---> var  <--- sysacctNum=0;var regularacctNum=0;for

[WARNING] Try to use a single 'var' statement per scope.
>0){var sysacctNum=0; ---> var  <--- regularacctNum=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
0;var regularacctNum=0;for( ---> var  <--- i=0;i<acctlist.length;

[WARNING] Try to use a single 'var' statement per scope.
=acctlist;this._forceRemoveDomain=domain; ---> var  <--- dlgMsg=AjxMessageFormat.format(ZaMsg.Q_FORCE_DELETE_DOMAIN,

[WARNING] Try to use a single 'var' statement per scope.
);var acctList=this._forceRemoveAccountList; ---> var  <--- dom=this._forceRemoveDomain;if(!acctList

[WARNING] Try to use a single 'var' statement per scope.
){return;}try{for( ---> var  <--- i=0;i<acctList.length;

[WARNING] Try to use a single 'var' statement per scope.
);if(cnt==1){ ---> var  <--- item=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
=this._newDomainWizard.getObject(); ---> var  <--- domain=ZaItem.create(obj,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
);this._fireDomainCreationEvent(domain); ---> var  <--- evt=new ZaEvent(ZaEvent.S_DOMAIN);

[WARNING] Try to use a single 'var' statement per scope.
function(){var warningMsg="<br><ul>"; ---> var  <--- hasItem=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var hasItem=false;for( ---> var  <--- i=0;i<ZaAppTabGroup._TABS.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- tab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppTabGroup._TABS.get(i); ---> var  <--- v=tab.getAppView();if(

[WARNING] Try to use a single 'var' statement per scope.
_containedObject&&v._containedObject.name){ ---> var  <--- acctName=v._containedObject.name;var l

[WARNING] Try to use a single 'var' statement per scope.
var acctName=v._containedObject.name; ---> var  <--- l=acctName.indexOf("@");var 

[WARNING] Try to use a single 'var' statement per scope.
l=acctName.indexOf("@"); ---> var  <--- domain=null;if(l>0)

[WARNING] Try to use a single 'var' statement per scope.
[];srvList._version=1; ---> var  <--- uuid=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var uuid=[];for( ---> var  <--- i=0;i<arrItems.length;

[WARNING] Try to use a single 'var' statement per scope.
<arrItems.length;i++){ ---> var  <--- srv=arrItems[i];srv.status

[WARNING] Try to use a single 'var' statement per scope.
getServerController().show(item); ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelectionCount(); ---> var  <--- enableFlush=true;var servers=this._contentView

[WARNING] Try to use a single 'var' statement per scope.
getSelectionCount();var enableFlush=true; ---> var  <--- servers=this._contentView.getSelection();

[WARNING] Try to use a single 'var' statement per scope.
getSelection();if(servers){ ---> var  <--- cnt=servers.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
();if(servers){var  ---> cnt <--- =servers.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=servers.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.runValidationStack(params);return;} ---> var  <--- locals=[];var locals2=[]

[WARNING] Try to use a single 'var' statement per scope.
return;}var locals=[]; ---> var  <--- locals2=[];var numIFs=0;

[WARNING] Try to use a single 'var' statement per scope.
[];var locals2=[]; ---> var  <--- numIFs=0;if(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
._currentObject.nifs.length;for( ---> var  <--- i=0;i<numIFs;i++

[WARNING] Try to use a single 'var' statement per scope.
].attrs.mask){try{ ---> var  <--- localIpData=ZaIPUtil.isValidIP(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
[i].attrs.addr); ---> var  <--- localiNetBit=ZaIPUtil.getNetBit(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
[i].attrs.mask); ---> var  <--- localCIDR=ZaIPUtil.getNetworkAddr(localIpData,localiNetBit)

[WARNING] Try to use a single 'var' statement per scope.
ZaIPUtil.getNetworkAddr(localIpData,localiNetBit); ---> var  <--- localIpData2=ZaIPUtil.isValidIP(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
[i].attrs.addr); ---> var  <--- localiNetBit2=ZaIPUtil.getNetBit(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
[i].attrs.mask); ---> var  <--- localCIDR2=ZaIPUtil.getNetworkAddr(localIpData2,localiNetBit2)

[WARNING] Try to use a single 'var' statement per scope.
catch(ex){}}}} ---> var  <--- IFCounter=numIFs;if(obj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
[ZaServer.A_zimbraMtaMyNetworks],true); ---> var  <--- chunks=obj.attrs[ZaServer.A_zimbraMtaMyNetworks]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraMtaMyNetworks].split(/[\s,]+/); ---> var  <--- cnt=chunks.length;var masks=[

[WARNING] Try to use a single 'var' statement per scope.
);var cnt=chunks.length; ---> var  <--- masks=[];var excludeMasks=[]

[WARNING] Try to use a single 'var' statement per scope.
.length;var masks=[]; ---> var  <--- excludeMasks=[];var cidrData;var validStr

[WARNING] Try to use a single 'var' statement per scope.
[];var excludeMasks=[]; ---> var  <--- cidrData;var validStr;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var excludeMasks=[];var cidrData; ---> var  <--- validStr;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
;var cidrData;var validStr;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
var cidrData;var validStr;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
excludeMasks.push(cidrData);for( ---> var  <--- j=(numIFs-1);j>=

[WARNING] Try to use a single 'var' statement per scope.
);}}}else{try{ ---> var  <--- exIPData=ZaIPUtil.isValidIP(validStr);}

[WARNING] Try to use a single 'var' statement per scope.
.INVALID_PARAM,"ZaServerController.prototype.validateMyNetworks");}for( ---> var  <--- j=(numIFs-1);j>=

[WARNING] The variable j has already been declared in the same scope...
INVALID_PARAM,"ZaServerController.prototype.validateMyNetworks");}for(var  ---> j <--- =(numIFs-1);j>=0

[WARNING] Try to use a single 'var' statement per scope.
;j>=0;j--){ ---> var  <--- cmpResult=1;try{cmpResult=ZaIPUtil.

[WARNING] Try to use a single 'var' statement per scope.
masks.push(cidrData);for( ---> var  <--- j=(IFCounter-1);j>=

[WARNING] The variable j has already been declared in the same scope...
.push(cidrData);for(var  ---> j <--- =(IFCounter-1);j>=0

[WARNING] Try to use a single 'var' statement per scope.
;}if(IFCounter>0){ ---> var  <--- missingIfs=[];for(var ix=

[WARNING] Try to use a single 'var' statement per scope.
{var missingIfs=[];for( ---> var  <--- ix=0;ix<IFCounter;ix++

[WARNING] Try to use a single 'var' statement per scope.
)]),DwtMessageDialog.WARNING_STYLE); ---> var  <--- args;var callBack=ZaServerController.prototype.runValidationStack

[WARNING] Try to use a single 'var' statement per scope.
,DwtMessageDialog.WARNING_STYLE);var args; ---> var  <--- callBack=ZaServerController.prototype.runValidationStack;if(

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.Q_DELETE_VOLUMES,DwtMessageDialog.WARNING_STYLE); ---> var  <--- args;var callBack=ZaServerController.prototype.runValidationStack

[WARNING] Try to use a single 'var' statement per scope.
,DwtMessageDialog.WARNING_STYLE);var args; ---> var  <--- callBack=ZaServerController.prototype.runValidationStack;if(

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
getInstance().dialogs.confirmSaveDialog){ ---> var  <--- confirmDialog=new ZaMsgDialog(ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- tmpObj={selectedChoice:0,choice1Label:""

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var key

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- key=0;key<cnt;key++

[WARNING] Try to use a single 'var' statement per scope.
if(this._removeList.length){ ---> var  <--- dlgMsg;dlgMsg=ZaMsg.Q_UNDEPLOY_ADMIN_EXTENSIONS;dlgMsg+=

[WARNING] Try to use a single 'var' statement per scope.
.Q_UNDEPLOY_ADMIN_EXTENSIONS;dlgMsg+="<br>";for( ---> var  <--- key in this._removeList){if(i

[WARNING] The variable key has already been declared in the same scope...
Q_UNDEPLOY_ADMIN_EXTENSIONS;dlgMsg+="<br>";for(var  ---> key <---  in this._removeList){if(i>

[WARNING] Try to use a single 'var' statement per scope.
].name.length>50){ ---> var  <--- endIx=49;var beginIx=0;while

[WARNING] Try to use a single 'var' statement per scope.
>50){var endIx=49; ---> var  <--- beginIx=0;while(endIx<this.

[WARNING] Try to use a single 'var' statement per scope.
successRemList=new Array();for( ---> var  <--- key in this._removeList){if(this

[WARNING] Try to use a single 'var' statement per scope.
);if(cnt==1){ ---> var  <--- arrItems=this._contentView.getSelection();

[WARNING] Try to use a single 'var' statement per scope.
else{if(cnt>1){ ---> var  <--- arrItems=this._contentView.getSelection();

[WARNING] The variable arrItems has already been declared in the same scope...
{if(cnt>1){var  ---> arrItems <--- =this._contentView.getSelection();var 

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;var gotInternal=false

[WARNING] The variable cnt has already been declared in the same scope...
this._contentView.getSelection();var  ---> cnt <--- =arrItems.length;var gotInternal=false;

[WARNING] Try to use a single 'var' statement per scope.
);var cnt=arrItems.length; ---> var  <--- gotInternal=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var gotInternal=false;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelection(); ---> var  <--- cnt=arrItems.length;for(var key

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arrItems.length;for( ---> var  <--- key=0;key<cnt;key++

[WARNING] Try to use a single 'var' statement per scope.
if(this._removeList.length){ ---> var  <--- dlgMsg;dlgMsg=ZaMsg.Q_UNDEPLOY_ZIMLETS;dlgMsg+=

[WARNING] Try to use a single 'var' statement per scope.
.Q_UNDEPLOY_ZIMLETS;dlgMsg+="<br>";for( ---> var  <--- key in this._removeList){if(i

[WARNING] The variable key has already been declared in the same scope...
Q_UNDEPLOY_ZIMLETS;dlgMsg+="<br>";for(var  ---> key <---  in this._removeList){if(i>

[WARNING] Try to use a single 'var' statement per scope.
].name.length>50){ ---> var  <--- endIx=49;var beginIx=0;while

[WARNING] Try to use a single 'var' statement per scope.
>50){var endIx=49; ---> var  <--- beginIx=0;while(endIx<this.

[WARNING] Try to use a single 'var' statement per scope.
successRemList=new Array();for( ---> var  <--- key in this._removeList){if(this

[WARNING] Try to use a single 'var' statement per scope.
=this._contentView.getSelectionCount(); ---> var  <--- offArray=[];var onArray=[]

[WARNING] Try to use a single 'var' statement per scope.
();var offArray=[]; ---> var  <--- onArray=[];if(cnt<1

[WARNING] Try to use a single 'var' statement per scope.
.popup();returnfalse;} ---> var  <--- mods=new Object();var haveSmth=

[WARNING] Try to use a single 'var' statement per scope.
}var mods=new Object(); ---> var  <--- haveSmth=false;var renameNotebookAccount=false;var 

[WARNING] Try to use a single 'var' statement per scope.
Object();var haveSmth=false; ---> var  <--- renameNotebookAccount=false;var catchAllChanged=false;var 

[WARNING] Try to use a single 'var' statement per scope.
haveSmth=false;var renameNotebookAccount=false; ---> var  <--- catchAllChanged=false;var skinChanged=false;this

[WARNING] Try to use a single 'var' statement per scope.
renameNotebookAccount=false;var catchAllChanged=false; ---> var  <--- skinChanged=false;this._currentObject.mods=

[WARNING] Try to use a single 'var' statement per scope.
if(ZaController.saveChangeCheckMethods.ZaDomainController){ ---> var  <--- methods=ZaController.saveChangeCheckMethods.ZaDomainController;var cnt

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaController.saveChangeCheckMethods.ZaDomainController; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt&&!haveSmth

[WARNING] Try to use a single 'var' statement per scope.
._currentObject);}}}for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_zimbraMailAddressValidationRegex]){ ---> var  <--- regList=AjxStringUtil.htmlEncode(tmpObj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_zimbraMailAddressValidationRegex]); ---> var  <--- islegal=true;var regval=null;if

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraMailAddressValidationRegex]);var islegal=true; ---> var  <--- regval=null;if(regList&&regList instanceof 

[WARNING] Try to use a single 'var' statement per scope.
regList&&regList instanceof Array){for( ---> var  <--- i=0;i<regList.length&&

[WARNING] The variable i has already been declared in the same scope...
&&regList instanceof Array){for(var  ---> i <--- =0;i<regList.length&&islegal

[WARNING] Try to use a single 'var' statement per scope.
){try{if(renameNotebookAccount){ ---> var  <--- account=new ZaAccount();account.load

[WARNING] Try to use a single 'var' statement per scope.
tmpObj[ZaAccount.A_zimbraMailCatchAllAddress])){ ---> var  <--- acc=new ZaAccount(ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
}}if(skinChanged){try{ ---> var  <--- mbxSrvrs=ZaApp.getInstance().getMailServers(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getMailServers(); ---> var  <--- serverList=[];var cnt=mbxSrvrs.

[WARNING] Try to use a single 'var' statement per scope.
();var serverList=[]; ---> var  <--- cnt=mbxSrvrs.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
);var serverList=[];var  ---> cnt <--- =mbxSrvrs.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=mbxSrvrs.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=mbxSrvrs.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;var uuid=[];for( ---> var  <--- i=0;i<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
function(){var warningMsg="<br><ul>"; ---> var  <--- hasItem=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var hasItem=false;for( ---> var  <--- i=0;i<ZaAppTabGroup._TABS.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- tab=ZaAppTabGroup._TABS.get(i)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppTabGroup._TABS.get(i); ---> var  <--- v=tab.getAppView();if(

[WARNING] Try to use a single 'var' statement per scope.
_containedObject&&v._containedObject.name){ ---> var  <--- acctName=v._containedObject.name;var l

[WARNING] Try to use a single 'var' statement per scope.
var acctName=v._containedObject.name; ---> var  <--- l=acctName.indexOf("@");var 

[WARNING] Try to use a single 'var' statement per scope.
l=acctName.indexOf("@"); ---> var  <--- domain=null;if(l>0)

[WARNING] Try to use a single 'var' statement per scope.
=this._newDomainWizard.getObject(); ---> var  <--- domain=ZaItem.create(obj,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
(ZaMsg.MX_RecordCheckSuccess);}else{ ---> var  <--- msgArray=[];msgArray.push(ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
response.entry.length>0){ ---> var  <--- cnt=response.entry.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=response.entry.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.popup();returnfalse;} ---> var  <--- verifyResult=resp.verifyResult;if(verifyResult==

[WARNING] Try to use a single 'var' statement per scope.
=ZaController.postChangeMethods.ZaDomainController;for( ---> var  <--- i in methods){var method=methods[

[WARNING] Try to use a single 'var' statement per scope.
;for(var i in methods){ ---> var  <--- method=methods[i];if(typeof

[WARNING] Try to use a single 'var' statement per scope.
();statusObj.load(); ---> var  <--- statusVector=statusObj.getStatusVector();this.

[WARNING] Try to use a single 'var' statement per scope.
pushView(this.getContentViewId()); ---> var  <--- now=new Date();}catch(

[WARNING] Try to use a single 'var' statement per scope.
var currentView=this.getCurrentStatsView(); ---> var  <--- mbxPage=this._contentView._mbxPage;var sessPage

[WARNING] Try to use a single 'var' statement per scope.
var mbxPage=this._contentView._mbxPage; ---> var  <--- sessPage=this._contentView._sessionPage;if(

[WARNING] Try to use a single 'var' statement per scope.
_sessionPage;if(currentView==mbxPage){ ---> var  <--- xform=mbxPage._view;var curInst=xform

[WARNING] Try to use a single 'var' statement per scope.
){var xform=mbxPage._view; ---> var  <--- curInst=xform.getInstance();mbxPage.

[WARNING] Try to use a single 'var' statement per scope.
var currentView=this.getCurrentStatsView(); ---> var  <--- mbxPage=this._contentView._mbxPage;var sessPage

[WARNING] Try to use a single 'var' statement per scope.
var mbxPage=this._contentView._mbxPage; ---> var  <--- sessPage=this._contentView._sessionPage;if(

[WARNING] Try to use a single 'var' statement per scope.
_sessionPage;if(currentView==mbxPage){ ---> var  <--- xform=mbxPage._view;var curInst=xform

[WARNING] Try to use a single 'var' statement per scope.
){var xform=mbxPage._view; ---> var  <--- curInst=xform.getInstance();mbxPage.

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getOverviewPanelController(); ---> var  <--- parentPath=ZaServerStatsListController._getparentPathInTree();var map

[WARNING] Try to use a single 'var' statement per scope.
var parentPath=ZaServerStatsListController._getparentPathInTree(); ---> var  <--- map=ZaServerStatsListController._getMapForMappingId2handler();overviewPanelController.

[WARNING] Try to use a single 'var' statement per scope.
if(!view){return;} ---> var  <--- canEnableButton=(view.getSelectionCount()==1

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- isNew=false;if(tmpObj.attrs==

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaGlobalConfig.A_zimbraDefaultDomainName]){ ---> var  <--- testD=new ZaDomain();try{testD

[WARNING] Try to use a single 'var' statement per scope.
(ZaGlobalConfig.A_zimbraMtaRestriction,tmpObj)){ ---> var  <--- restrictions=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
{var restrictions=[];for( ---> var  <--- i=0;i<ZaGlobalConfig.MTA_RESTRICTIONS.

[WARNING] Try to use a single 'var' statement per scope.
.MTA_RESTRICTIONS.length;i++){ ---> var  <--- restriction=ZaGlobalConfig.MTA_RESTRICTIONS[i];if

[WARNING] Try to use a single 'var' statement per scope.
restrictions.push(restriction);}} ---> var  <--- dirty=restrictions.length>0;if(

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaGlobalConfig.A_zimbraMtaRestriction]){ ---> var  <--- prevRestrictions=AjxUtil.isString(tmpObj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
;if(!dirty){for( ---> var  <--- i=0;i<prevRestrictions.length;

[WARNING] The variable i has already been declared in the same scope...
if(!dirty){for(var  ---> i <--- =0;i<prevRestrictions.length;i

[WARNING] Try to use a single 'var' statement per scope.
<prevRestrictions.length;i++){ ---> var  <--- restriction=prevRestrictions[i];if(!

[WARNING] The variable restriction has already been declared in the same scope...
prevRestrictions.length;i++){var  ---> restriction <--- =prevRestrictions[i];if(!tmpObj

[WARNING] Try to use a single 'var' statement per scope.
=true;break;}}}} ---> var  <--- policyService=tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaPolicyService]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaPolicyService]; ---> var  <--- currentPolicyService=this._currentObject.attrs[ZaGlobalConfig.

[WARNING] Try to use a single 'var' statement per scope.
_currentObject.attrs[ZaGlobalConfig.A_zimbraMtaPolicyService]; ---> var  <--- policyServiceLength=policyService.length;if((policyServiceLength

[WARNING] Try to use a single 'var' statement per scope.
){dirty=true;}for( ---> var  <--- ix=0;ix<policyServiceLength;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<policyServiceLength;ix++){ ---> var  <--- policyServiceValue=policyService[ix];if(policyServiceValue

[WARNING] Try to use a single 'var' statement per scope.
push("check_policy_service "+policyServiceValue);}} ---> var  <--- rblClient=tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRblClient]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRblClient]; ---> var  <--- currentRblClient=this._currentObject.attrs[ZaGlobalConfig.

[WARNING] Try to use a single 'var' statement per scope.
_currentObject.attrs[ZaGlobalConfig.A_zimbraMtaRejectRblClient]; ---> var  <--- rblClientLength=rblClient.length;if((rblClientLength

[WARNING] Try to use a single 'var' statement per scope.
){dirty=true;}for( ---> var  <--- ix=0;ix<rblClientLength;ix++

[WARNING] The variable ix has already been declared in the same scope...
{dirty=true;}for(var  ---> ix <--- =0;ix<rblClientLength;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<rblClientLength;ix++){ ---> var  <--- rblClientValue=rblClient[ix];if(rblClientValue

[WARNING] Try to use a single 'var' statement per scope.
push("reject_rbl_client "+rblClientValue);}} ---> var  <--- RHSblClient=tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblClient]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblClient]; ---> var  <--- currentRHSblClient=this._currentObject.attrs[ZaGlobalConfig.

[WARNING] Try to use a single 'var' statement per scope.
_currentObject.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblClient]; ---> var  <--- RHSblClientLength=RHSblClient.length;if((RHSblClientLength

[WARNING] Try to use a single 'var' statement per scope.
){dirty=true;}for( ---> var  <--- ix=0;ix<RHSblClientLength;ix++

[WARNING] The variable ix has already been declared in the same scope...
{dirty=true;}for(var  ---> ix <--- =0;ix<RHSblClientLength;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<RHSblClientLength;ix++){ ---> var  <--- RHSblClientValue=RHSblClient[ix];if(RHSblClientValue

[WARNING] Try to use a single 'var' statement per scope.
push("reject_rhsbl_client "+RHSblClientValue);}} ---> var  <--- RHSblReverseClient=tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblReverseClient]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblReverseClient]; ---> var  <--- currentRHSblReverseClient=this._currentObject.attrs[ZaGlobalConfig.

[WARNING] Try to use a single 'var' statement per scope.
_currentObject.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblReverseClient]; ---> var  <--- RHSblReverseClientLength=RHSblReverseClient.length;if((RHSblReverseClientLength

[WARNING] Try to use a single 'var' statement per scope.
){dirty=true;}for( ---> var  <--- ix=0;ix<RHSblReverseClientLength;ix++

[WARNING] The variable ix has already been declared in the same scope...
{dirty=true;}for(var  ---> ix <--- =0;ix<RHSblReverseClientLength;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<RHSblReverseClientLength;ix++){ ---> var  <--- RHSblReverseClientValue=RHSblReverseClient[ix];if(RHSblReverseClientValue

[WARNING] Try to use a single 'var' statement per scope.
push("reject_rhsbl_reverse_client "+RHSblReverseClientValue);}} ---> var  <--- RHSblSender=tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblSender]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblSender]; ---> var  <--- currentRHSblSender=this._currentObject.attrs[ZaGlobalConfig.

[WARNING] Try to use a single 'var' statement per scope.
_currentObject.attrs[ZaGlobalConfig.A_zimbraMtaRejectRHSblSender]; ---> var  <--- RHSblSenderLength=RHSblSender.length;if((RHSblSenderLength

[WARNING] Try to use a single 'var' statement per scope.
){dirty=true;}for( ---> var  <--- ix=0;ix<RHSblSenderLength;ix++

[WARNING] The variable ix has already been declared in the same scope...
{dirty=true;}for(var  ---> ix <--- =0;ix<RHSblSenderLength;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<RHSblSenderLength;ix++){ ---> var  <--- RHSblSenderValue=RHSblSender[ix];if(RHSblSenderValue

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaGlobalConfig.A_zimbraMailAddressValidationRegex]){ ---> var  <--- regList=tmpObj.attrs[ZaGlobalConfig.A_zimbraMailAddressValidationRegex]

[WARNING] Try to use a single 'var' statement per scope.
tmpObj.attrs[ZaGlobalConfig.A_zimbraMailAddressValidationRegex]; ---> var  <--- islegal=true;var regval=null;if

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraMailAddressValidationRegex];var islegal=true; ---> var  <--- regval=null;if(regList&&regList instanceof 

[WARNING] Try to use a single 'var' statement per scope.
regList&&regList instanceof Array){for( ---> var  <--- i=0;i<regList.length&&

[WARNING] The variable i has already been declared in the same scope...
&&regList instanceof Array){for(var  ---> i <--- =0;i<regList.length&&islegal

[WARNING] Try to use a single 'var' statement per scope.
popup();returnislegal;}} ---> var  <--- mods=new Object();if(ZaController

[WARNING] Try to use a single 'var' statement per scope.
if(ZaController.saveChangeCheckMethods.ZaGlobalConfigViewController){ ---> var  <--- methods=ZaController.saveChangeCheckMethods.ZaGlobalConfigViewController;var cnt

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaController.saveChangeCheckMethods.ZaGlobalConfigViewController; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=methods.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
._currentObject);}}}for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
if(a===ZaGlobalConfig.A_zimbraMtaRestriction){ ---> var  <--- mtaRestCustomAttrArr=ZaGlobalConfigViewController.getMTARestCustomAttributes(this._currentObject.

[WARNING] Try to use a single 'var' statement per scope.
(ZaGlobalConfig.A_zimbraSkinLogoAppBanner)){try{ ---> var  <--- mbxSrvrs=ZaApp.getInstance().getMailServers(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getMailServers(); ---> var  <--- serverList=[];var cnt=mbxSrvrs.

[WARNING] Try to use a single 'var' statement per scope.
();var serverList=[]; ---> var  <--- cnt=mbxSrvrs.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
);var serverList=[];var  ---> cnt <--- =mbxSrvrs.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=mbxSrvrs.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=mbxSrvrs.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;var uuid=[];for( ---> var  <--- i=0;i<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
){var zimbraMtaRestAttr=ZaGlobalConfig.MTA_RESTRICTIONS; ---> var  <--- zimbraMtaRestExtraAttr=["policy_service","reject_rbl_client","reject_rhsbl_client","reject_rhsbl_reverse_client"

[WARNING] Try to use a single 'var' statement per scope.
AjxUtil.mergeArrays(zimbraMtaRestAttr,zimbraMtaRestExtraAttr); ---> var  <--- _len=savedMtaRestAttrArr.length;var zimbraMtaRestAttrStr=AjxStringUtil

[WARNING] Try to use a single 'var' statement per scope.
);var _len=savedMtaRestAttrArr.length; ---> var  <--- zimbraMtaRestAttrStr=AjxStringUtil.getAsString(zimbraMtaRestAttr);var 

[WARNING] Try to use a single 'var' statement per scope.
zimbraMtaRestAttrStr=AjxStringUtil.getAsString(zimbraMtaRestAttr); ---> var  <--- mtaRestCustomAttrArr=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var mtaRestCustomAttrArr=[];for( ---> var  <--- i=0;i<_len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<_len;i++){ ---> var  <--- savedMtaRestAttr=savedMtaRestAttrArr[i];var savedMtaRestAttrName=

[WARNING] Try to use a single 'var' statement per scope.
{var savedMtaRestAttr=savedMtaRestAttrArr[i]; ---> var  <--- savedMtaRestAttrName=savedMtaRestAttr.substring(0,savedMtaRestAttr.

[WARNING] Try to use a single 'var' statement per scope.
function(){var retval=false; ---> var  <--- newName=null;var obj;try{if

[WARNING] Try to use a single 'var' statement per scope.
retval=false;var newName=null; ---> var  <--- obj;try{if(this._view.

[WARNING] Try to use a single 'var' statement per scope.
getMyForm().hasErrors()){ ---> var  <--- errItems=this._view.getMyForm().

[WARNING] Try to use a single 'var' statement per scope.
.getMyForm().getItemsInErrorState(); ---> var  <--- dlgMsg=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>";

[WARNING] Try to use a single 'var' statement per scope.
=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>"; ---> var  <--- i=0;for(var key in errItems

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in errItems){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
(key=="size"){continue;} ---> var  <--- label=errItems[key].getInheritedProperty("msgName"

[WARNING] Try to use a single 'var' statement per scope.
.getMyForm().getItemsInErrorState(); ---> var  <--- dlgMsg=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>";

[WARNING] Try to use a single 'var' statement per scope.
=ZaMsg.CORRECT_ERRORS;dlgMsg+="<br><ul>"; ---> var  <--- i=0;for(var key in errItems

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in errItems){if(i>19

[WARNING] Try to use a single 'var' statement per scope.
(key=="size"){continue;} ---> var  <--- label=errItems[key].getInheritedProperty("msgName"

[WARNING] Try to use a single 'var' statement per scope.
dlgMsg,true);returnfalse;} ---> var  <--- tmpObj=this._view.getObject();

[WARNING] Try to use a single 'var' statement per scope.
=this._view.getObject(); ---> var  <--- newName=null;if(tmpObj.attrs==

[WARNING] Try to use a single 'var' statement per scope.
;}newName=tmpObj.name;} ---> var  <--- mods=new Object();if(!

[WARNING] Try to use a single 'var' statement per scope.
ex);returnfalse;}}} ---> var  <--- changeDetails=new Object();if(tmpObj

[WARNING] Try to use a single 'var' statement per scope.
;}returnfalse;}}for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
var tmpList=list.getArray(); ---> var  <--- numMTAs=tmpList.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var numMTAs=tmpList.length;for( ---> var  <--- ix=0;ix<numMTAs;ix++

[WARNING] Try to use a single 'var' statement per scope.
push(tmpList[ix]);} ---> var  <--- i=0;var tmp=[];

[WARNING] Try to use a single 'var' statement per scope.
]);}var i=0; ---> var  <--- tmp=[];var cnt=numMTAs>

[WARNING] Try to use a single 'var' statement per scope.
=0;var tmp=[]; ---> var  <--- cnt=numMTAs>5?5:numMTAs;

[WARNING] Try to use a single 'var' statement per scope.
=this._list.getArray(); ---> var  <--- numMTAs=tmpList.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var numMTAs=tmpList.length;for( ---> var  <--- ix=0;ix<numMTAs;ix++

[WARNING] Try to use a single 'var' statement per scope.
push(tmpList[ix]);} ---> var  <--- cnt=numMTAs>5?5:numMTAs;

[WARNING] Try to use a single 'var' statement per scope.
=numMTAs>5?5:numMTAs; ---> var  <--- i=0;var tmp=[];

[WARNING] Try to use a single 'var' statement per scope.
5:numMTAs;var i=0; ---> var  <--- tmp=[];for(i=0

[WARNING] Try to use a single 'var' statement per scope.
&&ev.getDetail("poll")){ ---> var  <--- pageNum=0;if(ev.getDetail(

[WARNING] Try to use a single 'var' statement per scope.
.A_Status]==ZaMTA.STATUS_SCANNING){ ---> var  <--- ta=new AjxTimedAction(this._currentObject,ZaMTA

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
,resultFilter:this._filterObj}); ---> var  <--- searchParams={query:this._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.BUSY_SEARCHING,skipCallbackIfCancelled:false}; ---> var  <--- searchQueryList=new Array();var isAliasSpec=

[WARNING] Try to use a single 'var' statement per scope.
;var searchQueryList=new Array(); ---> var  <--- isAliasSpec=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var isAliasSpec=false;for( ---> var  <--- i=0;this.searchTypes&&i<

[WARNING] Try to use a single 'var' statement per scope.
){searchQueryList.push(searchParams); ---> var  <--- keyword=ZaSearchListController._getSearchKeyWord(this._currentQuery)

[WARNING] Try to use a single 'var' statement per scope.
,childQueries,isShowBubble){var paramsArr; ---> var  <--- searchTypes=ZaSearch.ALIASES;var searchQuery="(uid=*"

[WARNING] Try to use a single 'var' statement per scope.
paramsArr;var searchTypes=ZaSearch.ALIASES; ---> var  <--- searchQuery="(uid=*";if(!childQueries){

[WARNING] Try to use a single 'var' statement per scope.
1]+")";}}}} ---> var  <--- controller=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
{paramsArr=new Array();} ---> var  <--- busyId=Dwt.getNextId();var inParams

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- inParams={limit:controller.RESULTSPERPAGE,show

[WARNING] Try to use a single 'var' statement per scope.
busyId:busyId,isShowBubble:isShowBubble}; ---> var  <--- callback=new AjxCallback(controller,controller.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
controller.searchCallback,inParams);for( ---> var  <--- i=0;i<domainArr.length;

[WARNING] Try to use a single 'var' statement per scope.
<domainArr.length;i++){ ---> var  <--- searchParams={query:searchQuery,types:searchTypes

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- domainArr=new Array();if(response

[WARNING] Try to use a single 'var' statement per scope.
domain.length>0){for( ---> var  <--- i=0;i<response.domain.

[WARNING] Try to use a single 'var' statement per scope.
.domain.length;i++){ ---> var  <--- domain=response.domain[i].name

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- controller=searchCtl?searchCtl:this;var query

[WARNING] Try to use a single 'var' statement per scope.
var controller=searchCtl?searchCtl:this; ---> var  <--- query="("+ZaDomain.A_domainName;if(

[WARNING] Try to use a single 'var' statement per scope.
;}else{query="";} ---> var  <--- callback=new AjxCallback(controller,ZaSearchListController.searchAliasDomainCallback

[WARNING] Try to use a single 'var' statement per scope.
:value,isShowBubble:isShowBubble}); ---> var  <--- searchParams={query:query,types:[

[WARNING] Try to use a single 'var' statement per scope.
(query){var keyword=""; ---> var  <--- sw="zimbraDomainName=*";var domflag="@";var 

[WARNING] Try to use a single 'var' statement per scope.
keyword="";var sw="zimbraDomainName=*"; ---> var  <--- domflag="@";var ew="*";if

[WARNING] Try to use a single 'var' statement per scope.
sw="zimbraDomainName=*";var domflag="@"; ---> var  <--- ew="*";if(!query){

[WARNING] Try to use a single 'var' statement per scope.
(!query){returnkeyword;} ---> var  <--- start=query.indexOf(sw);if

[WARNING] Try to use a single 'var' statement per scope.
-1){return[];} ---> var  <--- end=query.indexOf(ew,start+

[WARNING] Try to use a single 'var' statement per scope.
;this._currentSortField=params.sortBy; ---> var  <--- busyId=Dwt.getNextId();var callback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,this.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
,isShowBubble:params.isShowBubble}); ---> var  <--- postCallback=new AjxCallback(this,this.updateSearchTree

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this.updateSearchTree); ---> var  <--- searchParams={query:this._currentQuery,types

[WARNING] Try to use a single 'var' statement per scope.
callback:callback,controller:this}; ---> var  <--- isAliasSpec=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
};var isAliasSpec=false;for( ---> var  <--- i=0;params.types&&i<

[WARNING] Try to use a single 'var' statement per scope.
};searchQueryList.push(searchParams); ---> var  <--- keyword=ZaSearchListController._getSearchKeyWord(params.query)

[WARNING] Try to use a single 'var' statement per scope.
var searchFieldXForm=this._searchField._localXForm; ---> var  <--- searchFieldItem=searchFieldXForm.getItemsById(ZaSearch.A_query)

[WARNING] Try to use a single 'var' statement per scope.
if(type==ZaItem.ALIAS){ ---> var  <--- targetObj=item.getAliasTargetObj();if(

[WARNING] Try to use a single 'var' statement per scope.
);if(cnt==1){ ---> var  <--- item=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
item.type==ZaItem.ACCOUNT){ ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] Try to use a single 'var' statement per scope.
targetObj=item.getAliasTargetObj();} ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
=item.getAliasTargetObj();}var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
targetObj=item.getAliasTargetObj();} ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
=item.getAliasTargetObj();}var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
item.type==ZaItem.RESOURCE){ ---> var  <--- enable=false;if(ZaZimbraAdmin.currentAdminAccount.

[WARNING] The variable enable has already been declared in the same scope...
.type==ZaItem.RESOURCE){var  ---> enable <--- =false;if(ZaZimbraAdmin.currentAdminAccount.attrs

[WARNING] Try to use a single 'var' statement per scope.
enabled=false;}}}for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- itemObj=this._contentView.getSelection()[

[WARNING] Try to use a single 'var' statement per scope.
var array=vectArray.getArray(); ---> var  <--- result={};result.searchTotal=searchTotal

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.DL]=0;for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
.push(ix);}for( ---> var  <--- ix in this._popupOperationsOnAppBar){this._popupOrder

[WARNING] The variable ix has already been declared in the same scope...
push(ix);}for(var  ---> ix <---  in this._popupOperationsOnAppBar){this._popupOrder.

[WARNING] Try to use a single 'var' statement per scope.
push(ix);}}for( ---> var  <--- ix in this._popupOperations){this._popupOperationsOnAppBar

[WARNING] The variable ix has already been declared in the same scope...
(ix);}}for(var  ---> ix <---  in this._popupOperations){this._popupOperationsOnAppBar[

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- searchField=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
().getSearchListController()._searchField; ---> var  <--- charCode=event.charCode;if(charCode==

[WARNING] Try to use a single 'var' statement per scope.
else{this.setInstanceValue(value); ---> var  <--- invertValue;if(value=="TRUE"){invertValue

[WARNING] Try to use a single 'var' statement per scope.
=="TRUE"){invertValue="FALSE";} ---> var  <--- ref=this.getRef();if(

[WARNING] Try to use a single 'var' statement per scope.
)&&(value=="TRUE")){ ---> var  <--- loginTimeRef;if(ref==ZaSearchOption.A_enableAccountLastLoginTime_From)

[WARNING] Try to use a single 'var' statement per scope.
){loginTimeRef=ZaSearchOption.A_accountLastLoginTime_To;} ---> var  <--- loginTime=this.getInstanceValue(loginTimeRef);if

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,ZaSearchBuilderController.optionFilterCallback

[WARNING] Try to use a single 'var' statement per scope.
optionFilterCallback,{busyId:busyId}); ---> var  <--- searchParams={query:"("+ZaDomain.A_domainName

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(this,ZaSearchBuilderController.optionCosFilterCallback

[WARNING] Try to use a single 'var' statement per scope.
optionCosFilterCallback,{busyId:busyId}); ---> var  <--- searchParams={query:"("+ZaCos.A_name

[WARNING] Try to use a single 'var' statement per scope.
this._option_views.length-1]; ---> var  <--- form=serverView._localXForm;var instance=form

[WARNING] Try to use a single 'var' statement per scope.
];var form=serverView._localXForm; ---> var  <--- instance=form.getInstance();var list

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- list=ZaServer.getAll().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getAll().getArray(); ---> var  <--- servers=new Array(list.length);

[WARNING] Try to use a single 'var' statement per scope.
Array(list.length);for( ---> var  <--- i=0;i<servers.length;

[WARNING] Try to use a single 'var' statement per scope.
(dialog){var serverView=dialog; ---> var  <--- form=serverView._localXForm;var instance=form

[WARNING] Try to use a single 'var' statement per scope.
dialog;var form=serverView._localXForm; ---> var  <--- instance=form.getInstance();var list

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- list=ZaServer.getAll().getArray(

[WARNING] Try to use a single 'var' statement per scope.
.getAll().getArray(); ---> var  <--- servers=new Array(list.length);

[WARNING] Try to use a single 'var' statement per scope.
Array(list.length);for( ---> var  <--- i=0;i<servers.length;

[WARNING] Try to use a single 'var' statement per scope.
type&&targetEl.type=="checkbox"){ ---> var  <--- ref=this.getRef();var item

[WARNING] Try to use a single 'var' statement per scope.
var ref=this.getRef(); ---> var  <--- item=targetEl.value;var form=this

[WARNING] Try to use a single 'var' statement per scope.
);var item=targetEl.value; ---> var  <--- form=this.getForm();var instance

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var checkedFiltersVector

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- checkedFiltersVector=null;if(ref==ZaSearchOption.

[WARNING] Try to use a single 'var' statement per scope.
[ZaSearchOption.A_cosListChecked];}}} ---> var  <--- controller=form.parent._controller;if(

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
response.domain.length>0){ ---> var  <--- domains=new Array(response.domain.length

[WARNING] Try to use a single 'var' statement per scope.
response.domain.length);for( ---> var  <--- i=0;i<domains.length;

[WARNING] Try to use a single 'var' statement per scope.
domain[i].name;}} ---> var  <--- searchTotal=response.searchTotal;this.setInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- controller=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
response.cos.length>0){ ---> var  <--- coses=new Array(response.cos.length

[WARNING] Try to use a single 'var' statement per scope.
response.cos.length);for( ---> var  <--- i=0;i<coses.length;

[WARNING] Try to use a single 'var' statement per scope.
;this._includeObjectWithoutCosId=false;for( ---> var  <--- i=0;i<optionViews.length;

[WARNING] Try to use a single 'var' statement per scope.
<optionViews.length;i++){ ---> var  <--- optionId=optionViews[i]._optionId;var 

[WARNING] Try to use a single 'var' statement per scope.
optionId=optionViews[i]._optionId; ---> var  <--- instance=optionViews[i]._localXForm.getInstance

[WARNING] Try to use a single 'var' statement per scope.
.COS_ID]=[];for( ---> var  <--- i=0;i<optionViews.length;

[WARNING] Try to use a single 'var' statement per scope.
<optionViews.length;i++){ ---> var  <--- optionId=optionViews[i]._optionId;var 

[WARNING] Try to use a single 'var' statement per scope.
optionId=optionViews[i]._optionId; ---> var  <--- instance=optionViews[i]._localXForm.getInstance

[WARNING] Try to use a single 'var' statement per scope.
i]._localXForm.getInstance(); ---> var  <--- options=instance.options;var filter=[

[WARNING] Try to use a single 'var' statement per scope.
);var options=instance.options; ---> var  <--- filter=[];if(optionId==ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
.A_COSId+"=*))");}for( ---> var  <--- key in options){var value=options[

[WARNING] Try to use a single 'var' statement per scope.
}for(var key in options){ ---> var  <--- value=options[key];if(value

[WARNING] Try to use a single 'var' statement per scope.
];if(value!=null){ ---> var  <--- op=null;if(value instanceof Date)

[WARNING] Try to use a single 'var' statement per scope.
DBG1,"Current Query String = "+this._query); ---> var  <--- searchFieldXform=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
.getSearchListController()._searchField._localXForm; ---> var  <--- searchFieldInstance=searchFieldXform.getInstance();var searchFieldItem

[WARNING] Try to use a single 'var' statement per scope.
var searchFieldInstance=searchFieldXform.getInstance(); ---> var  <--- searchFieldItem=searchFieldXform.getItemsById(ZaSearch.A_query)

[WARNING] Try to use a single 'var' statement per scope.
"\\$1");}var entry=null; ---> var  <--- searchListController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
function(){var query=""; ---> var  <--- i=0;for(var key in this

[WARNING] Try to use a single 'var' statement per scope.
"";var i=0;for( ---> var  <--- key in this._filterObj){if(key

[WARNING] Try to use a single 'var' statement per scope.
if(key!=ZaSearchOption.OBJECT_TYPE_ID){ ---> var  <--- filter=this.getOrFilter4SameOptionType(this._filterObj[

[WARNING] Try to use a single 'var' statement per scope.
,key){var query=""; ---> var  <--- numberOfFilters=0;if(key==ZaSearchOption.

[WARNING] Try to use a single 'var' statement per scope.
"=*))";numberOfFilters++;}}for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
){var query="";for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
(arr){var query=""; ---> var  <--- controller=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- cosids=controller._cosids;if(controller.

[WARNING] Try to use a single 'var' statement per scope.
cosids.length>0){for( ---> var  <--- i=0;i<arr.length&&

[WARNING] Try to use a single 'var' statement per scope.
var position=this._option_views.length; ---> var  <--- searchPanel=this._searchBuildPanel||this.getSearchBuilderPanel(

[WARNING] Try to use a single 'var' statement per scope.
._searchBuildPanel||this.getSearchBuilderPanel(); ---> var  <--- width=ZaSearchOptionView.WIDTH;if(optionId==

[WARNING] Try to use a single 'var' statement per scope.
option=this._option_views[position]; ---> var  <--- y=option.getY();option.

[WARNING] Try to use a single 'var' statement per scope.
);}}if(reposition){ ---> var  <--- len=this._option_views.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._option_views.length;for( ---> var  <--- i=position;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- x=this._searchBuildPanel.getNextOptionX(i)

[WARNING] Try to use a single 'var' statement per scope.
else{this.setInstanceValue(value); ---> var  <--- invertValue;if(value=="TRUE"){invertValue

[WARNING] Try to use a single 'var' statement per scope.
=="TRUE"){invertValue="FALSE";} ---> var  <--- ref=this.getRef();if(

[WARNING] Try to use a single 'var' statement per scope.
)&&(value=="TRUE")){ ---> var  <--- loginTimeRef;if(ref==ZaSearchOption.A_enableAccountLastLoginTime_From)

[WARNING] Try to use a single 'var' statement per scope.
){loginTimeRef=ZaSearchOption.A_accountLastLoginTime_To;} ---> var  <--- loginTime=this.getInstanceValue(loginTimeRef);if

[WARNING] Try to use a single 'var' statement per scope.
A2_status_pending||ref==ZaSearchOption.A2_status_maintenance){ ---> var  <--- statusArr=[];if(this.getInstanceValue

[WARNING] Try to use a single 'var' statement per scope.
;this._includeObjectWithoutCosId=false;for( ---> var  <--- i=0;i<optionViews.length;

[WARNING] Try to use a single 'var' statement per scope.
<optionViews.length;i++){ ---> var  <--- optionId=optionViews[i]._optionId;var 

[WARNING] Try to use a single 'var' statement per scope.
optionId=optionViews[i]._optionId; ---> var  <--- instance=optionViews[i]._localXForm.getInstance

[WARNING] Try to use a single 'var' statement per scope.
=null;this._filterObj=null; ---> var  <--- optionId=dialog._optionId;var instance=dialog

[WARNING] Try to use a single 'var' statement per scope.
null;var optionId=dialog._optionId; ---> var  <--- instance=dialog._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
=dialog._localXForm.getInstance(); ---> var  <--- options=instance.options;var filter=[

[WARNING] Try to use a single 'var' statement per scope.
);var options=instance.options; ---> var  <--- filter=[];if(optionId==ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
.A_COSId+"=*))");}for( ---> var  <--- key in options){var value=options[

[WARNING] Try to use a single 'var' statement per scope.
}for(var key in options){ ---> var  <--- value=options[key];if(value

[WARNING] Try to use a single 'var' statement per scope.
];if(value!=null){ ---> var  <--- op=null;if(value instanceof Date)

[WARNING] Try to use a single 'var' statement per scope.
,value,op);}}} ---> var  <--- slController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
);if(slController._uiContainer){ ---> var  <--- query=this.newGetOrFilter4SameOptionType([filter],

[WARNING] Try to use a single 'var' statement per scope.
newGetOrFilter4SameOptionType([filter],optionId); ---> var  <--- unique=false;if(optionId==ZaSearchOption.

[WARNING] Try to use a single 'var' statement per scope.
.SERVER_FILTER_ID){unique=true;} ---> var  <--- params={type:2,unique:unique

[WARNING] Try to use a single 'var' statement per scope.
"\\$1");}var entry=null; ---> var  <--- searchListController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
function(){var query=""; ---> var  <--- i=0;for(var key in this

[WARNING] Try to use a single 'var' statement per scope.
"";var i=0;for( ---> var  <--- key in this._filterObj){var filter=

[WARNING] Try to use a single 'var' statement per scope.
(var key in this._filterObj){ ---> var  <--- filter=this.newGetOrFilter4SameOptionType(this._filterObj[

[WARNING] Try to use a single 'var' statement per scope.
,key){var query=""; ---> var  <--- numberOfFilters=0;if(key==ZaSearchOption.

[WARNING] Try to use a single 'var' statement per scope.
"=*))";numberOfFilters++;}}for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
){var query="";for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
(arr){var query=""; ---> var  <--- controller=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- cosids=controller._cosids;if(controller.

[WARNING] Try to use a single 'var' statement per scope.
cosids.length>0){for( ---> var  <--- i=0;i<arr.length&&

[WARNING] Try to use a single 'var' statement per scope.
ev.item.getData("filterType"); ---> var  <--- loc={};var treeItemBound=ev.

[WARNING] Try to use a single 'var' statement per scope.
"filterType");var loc={}; ---> var  <--- treeItemBound=ev.item.getBounds();

[WARNING] Try to use a single 'var' statement per scope.
;loc.y=treeItemBound.y; ---> var  <--- dialog;var sbController=ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
y=treeItemBound.y;var dialog; ---> var  <--- sbController=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- skipDefaultValue=false;switch(filterType){case

[WARNING] Try to use a single 'var' statement per scope.
;}dialog.popup(loc); ---> var  <--- omem=DwtOutsideMouseEventMgr.INSTANCE;var omemParams={

[WARNING] Try to use a single 'var' statement per scope.
);var omem=DwtOutsideMouseEventMgr.INSTANCE; ---> var  <--- omemParams={id:"ZaOptionView",obj:dialog

[WARNING] Try to use a single 'var' statement per scope.
{var result=[];for( ---> var  <--- filterType in ZaSearchBuilderController.filterDialogSet){if(ZaSearchBuilderController

[WARNING] Try to use a single 'var' statement per scope.
dialog._controller.setNewQuery(dialog); ---> var  <--- omem=DwtOutsideMouseEventMgr.INSTANCE;omem.stopListening(

[WARNING] Try to use a single 'var' statement per scope.
=function(task){var taskArray; ---> var  <--- modelItem;if(task.type==1)

[WARNING] Try to use a single 'var' statement per scope.
_runningTask;modelItem=ZaTask.A_runningTask;} ---> var  <--- index=taskArray.indexOfLike(task,task.

[WARNING] Try to use a single 'var' statement per scope.
(),modelItem);}else{ ---> var  <--- currentTask=taskArray.get(index);task

[WARNING] Try to use a single 'var' statement per scope.
=function(task){var taskArray; ---> var  <--- modelItem;if(task.type==1)

[WARNING] Try to use a single 'var' statement per scope.
_runningTask;modelItem=ZaTask.A_runningTask;} ---> var  <--- index=taskArray.indexOfLike(task,task.

[WARNING] Try to use a single 'var' statement per scope.
{var now=new Date(); ---> var  <--- formatter=AjxDateFormat.getDateInstance(AjxDateFormat.LONG)

[WARNING] Try to use a single 'var' statement per scope.
AjxDateFormat.getDateInstance(AjxDateFormat.LONG); ---> var  <--- currentTime=formatter.format(now);this

[WARNING] Try to use a single 'var' statement per scope.
){var num=1;try{ ---> var  <--- homeCtl=ZaApp.getInstance().getHomeViewController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getHomeViewController(); ---> var  <--- maintainenceGroup=homeCtl._view._localXForm.getItemsById(

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("applyConfig","false"); ---> var  <--- updateServerNum=new AjxCallback(this,this.updateServerNum

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this.updateServerNum); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;params.callback=updateServerNum; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ALL_SERVER}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
){var num=1;try{ ---> var  <--- resp=resp.getResponse().Body.

[WARNING] The variable resp has already been declared in the same scope...
{var num=1;try{var  ---> resp <--- =resp.getResponse().Body.GetAllServersResponse

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.GetAllServersResponse; ---> var  <--- list=new ZaItemList(ZaServer);list.

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraLogHostname];if(logHost){ ---> var  <--- soapDoc=AjxSoapDoc.create("GetServiceStatusRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetServiceStatusRequest",ZaZimbraAdmin.URN,null); ---> var  <--- updateServiceStatus=new AjxCallback(this,this.updateServiceStatus

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this.updateServiceStatus); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;status.initFromJS(resp);} ---> var  <--- serviceStatus;var serviceStatusMessage=ZaMsg.LBL_HOmeStatusUnknown;var 

[WARNING] Try to use a single 'var' statement per scope.
initFromJS(resp);}var serviceStatus; ---> var  <--- serviceStatusMessage=ZaMsg.LBL_HOmeStatusUnknown;var serviceDetailedMessage=ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
serviceStatus;var serviceStatusMessage=ZaMsg.LBL_HOmeStatusUnknown; ---> var  <--- serviceDetailedMessage=ZaMsg.LBL_HomeDetailedServiceUnknown;try{var statusVector

[WARNING] Try to use a single 'var' statement per scope.
var serviceDetailedMessage=ZaMsg.LBL_HomeDetailedServiceUnknown;try{ ---> var  <--- statusVector=status.getStatusVector();var serverStatus

[WARNING] Try to use a single 'var' statement per scope.
var statusVector=status.getStatusVector(); ---> var  <--- serverStatus;if(statusVector.size()>

[WARNING] Try to use a single 'var' statement per scope.
;serviceStatusMessage=ZaMsg.LBL_HomeStatusRunning;for( ---> var  <--- i=0;i<statusVector.size(

[WARNING] Try to use a single 'var' statement per scope.
}}}catch(ex){} ---> var  <--- viewController=ZaApp.getInstance().getHomeViewController(

[WARNING] Try to use a single 'var' statement per scope.
getResponse().Body.GetAllServersResponse); ---> var  <--- serverArray=list.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=list.getArray();for( ---> var  <--- i=0;i<serverArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<serverArray.length;i++){ ---> var  <--- server=serverArray[i];var callback=

[WARNING] Try to use a single 'var' statement per scope.
{var server=serverArray[i]; ---> var  <--- callback=new AjxCallback(this,ZaHome.loadActiveSession

[WARNING] Try to use a single 'var' statement per scope.
"soap","admin","imap"];for( ---> var  <--- j=0;j<sessionType.length;

[WARNING] Try to use a single 'var' statement per scope.
(ZaServer.RIGHT_GET_SESSIONS,server)){ ---> var  <--- sessionCallback=new AjxCallback(this,ZaHome.loadOneSessionNumer

[WARNING] Try to use a single 'var' statement per scope.
this,ZaHome.loadOneSessionNumer);try{ ---> var  <--- soapDoc=AjxSoapDoc.create("GetSessionsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetSessionsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- params={};params.type=sessionType

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("sortBy",params.sortBy); ---> var  <--- getSessCmd=new ZmCsfeCommand();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;params.callback=sessionCallback; ---> var  <--- resp=getSessCmd.invoke(params);}

[WARNING] Try to use a single 'var' statement per scope.
getPostQList();if(postQList){ ---> var  <--- serverArray=postQList.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=postQList.getArray();for( ---> var  <--- i=0;i<serverArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<serverArray.length;i++){ ---> var  <--- server=serverArray[i];var callback=

[WARNING] Try to use a single 'var' statement per scope.
{var server=serverArray[i]; ---> var  <--- callback=ZaHome.loadQueueLength.bind(this,

[WARNING] Try to use a single 'var' statement per scope.
server)){var isEx=false; ---> var  <--- queueLengthCallback=new AjxCallback(this,ZaHome.loadOneQueueNumber

[WARNING] Try to use a single 'var' statement per scope.
this,ZaHome.loadOneQueueNumber);try{ ---> var  <--- soapDoc=AjxSoapDoc.create("GetMailQueueInfoRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetMailQueueInfoRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("server","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",server.name); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
.GetMailQueueInfoResponse.server[0]){ ---> var  <--- queue=body.GetMailQueueInfoResponse.server[0]

[WARNING] Try to use a single 'var' statement per scope.
server[0].queue;for( ---> var  <--- j in queue){if(queue[j

[WARNING] Try to use a single 'var' statement per scope.
;}var maxPwdLen=Number.POSITIVE_INFINITY; ---> var  <--- minPwdLen=0;var maxPwdAge=Number.POSITIVE_INFINITY

[WARNING] Try to use a single 'var' statement per scope.
Number.POSITIVE_INFINITY;var minPwdLen=0; ---> var  <--- maxPwdAge=Number.POSITIVE_INFINITY;var minPwdAge=0

[WARNING] Try to use a single 'var' statement per scope.
0;var maxPwdAge=Number.POSITIVE_INFINITY; ---> var  <--- minPwdAge=0;if(ZaItem.hasWritePermission(

[WARNING] Try to use a single 'var' statement per scope.
A_password]).length<minPwdLen){ ---> var  <--- minpassMsg;if(minPwdLen>1){minpassMsg

[WARNING] Try to use a single 'var' statement per scope.
A_password]).length>maxPwdLen){ ---> var  <--- maxpassMsg;if(maxPwdLen>1){maxpassMsg

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourceMinPollingInterval,tmpObj)){ ---> var  <--- min_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourceMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourcePop3PollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourcePop3PollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourceImapPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourceImapPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaAccount.A_zimbraDataSourceImapPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaAccount.A_zimbraDataSourceImapPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourceCalendarPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourceCalendarPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaAccount.A_zimbraDataSourceCalendarPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaAccount.A_zimbraDataSourceCalendarPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourceRssPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourceRssPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaAccount.A_zimbraDataSourceRssPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaAccount.A_zimbraDataSourceRssPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraDataSourceCaldavPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaAccount.A_zimbraDataSourceCaldavPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaAccount.A_zimbraDataSourceCaldavPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaAccount.A_zimbraDataSourceCaldavPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraPrefAutoSaveDraftInterval,tmpObj)){ ---> var  <--- p_autoSaveInterval=tmpObj.attrs[ZaAccount.A_zimbraPrefAutoSaveDraftInterval]

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraPrefMailPollingInterval,tmpObj)){ ---> var  <--- p_mailPollingInterval=tmpObj.attrs[ZaAccount.A_zimbraPrefMailPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraMailMinPollingInterval,tmpObj)){ ---> var  <--- min_mailPollingInterval=tmpObj.attrs[ZaAccount.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraMailMessageLifetime]));returnfalse;} ---> var  <--- itestVal=parseInt(tmpObj.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraMaxMailItemsPerPage,tmpObj)){ ---> var  <--- maxItemsPerPage;if(tmpObj.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A_zimbraPrefMailItemsPerPage,tmpObj)){ ---> var  <--- prefItemsPerPage;if(tmpObj.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraMailQuota]!=null)){ ---> var  <--- cosMaxAccountQuota=tmpObj._defaultValues.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
_defaultValues.attrs[ZaAccount.A_zimbraDomainAdminMaxMailQuota]; ---> var  <--- prefAccountQuota=tmpObj.attrs[ZaAccount.A_zimbraMailQuota]

[WARNING] Try to use a single 'var' statement per scope.
.ERROR_MAX_ACCOUNT_QUOTA);returnfalse;}} ---> var  <--- forwardFields=[ZaAccount.A_zimbraMailForwardingAddress,ZaAccount.A_zimbraPrefMailForwardingAddress

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraPrefMailForwardingAddress,ZaAccount.A_zimbraPrefCalendarForwardInvitesTo]; ---> var  <--- canFixForwardingErrors=AjxUtil.reduce(forwardFields.concat(

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraPrefMailLocalDeliveryDisabled]=="TRUE"){ ---> var  <--- hasForwardingEmail=AjxUtil.reduce(forwardFields,function(

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- currentTheme=tmpObj.attrs[ZaAccount.A_zimbraPrefSkin]

[WARNING] Try to use a single 'var' statement per scope.
_defaultValues.attrs[ZaCos.A_zimbraPrefSkin]; ---> var  <--- availableThemes=tmpObj.attrs[ZaAccount.A_zimbraAvailableSkin]

[WARNING] Try to use a single 'var' statement per scope.
];if(currentTheme&&availableThemes){ ---> var  <--- arr=availableThemes instanceof Array?availableThemes:[availableThemes

[WARNING] Try to use a single 'var' statement per scope.
 instanceof Array?availableThemes:[availableThemes]; ---> var  <--- cnt=arr.length;var found=false

[WARNING] Try to use a single 'var' statement per scope.
];var cnt=arr.length; ---> var  <--- found=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var found=false;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(/[\s]+/g,"");var resp; ---> var  <--- soapDoc=AjxSoapDoc.create("CreateAccountRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.A_COSId]=null;}for( ---> var  <--- aname in tmpObj.attrs){if(aname

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[aname].length

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
][ix])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname] instanceof AjxVector){ ---> var  <--- tmpArray=tmpObj.attrs[aname].getArray

[WARNING] Try to use a single 'var' statement per scope.
attrs[aname].getArray(); ---> var  <--- cnt=tmpArray.length;if(cnt)

[WARNING] The variable cnt has already been declared in the same scope...
[aname].getArray();var  ---> cnt <--- =tmpArray.length;if(cnt){

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
;if(cnt){for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
tmpArray[ix])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpArray[

[WARNING] The variable attr has already been declared in the same scope...
[ix])=="object"){var  ---> attr <--- =soapDoc.set("a",tmpArray[ix

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpArray[

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpArray[ix

[WARNING] Try to use a single 'var' statement per scope.
attrs[aname])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
[aname])=="object"){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
);}}}}}try{ ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=ZaApp

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias].length){ ---> var  <--- tmpObjCnt=tmpObj.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMailAlias].length; ---> var  <--- failedAliases="";var failedAliasesCnt=0;try

[WARNING] Try to use a single 'var' statement per scope.
].length;var failedAliases=""; ---> var  <--- failedAliasesCnt=0;try{for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var failedAliasesCnt=0;try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
failedAliasesCnt=0;try{for(var  ---> ix <--- =0;ix<tmpObjCnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
(mods){var gotSomething=false; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyAccountRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id);for( ---> var  <--- aname in mods){gotSomething=true;if

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] Try to use a single 'var' statement per scope.
].length;if(cnt){ ---> var  <--- nonemptyElements=false;for(var ix=0

[WARNING] Try to use a single 'var' statement per scope.
){var nonemptyElements=false;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=null;if(mods[aname]

[WARNING] Try to use a single 'var' statement per scope.
;}else{nonemptyElements=true;} ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
}else{nonemptyElements=true;}var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
);nonemptyElements=true;}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
;nonemptyElements=true;}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!nonemptyElements){ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
}}if(!nonemptyElements){var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
if(!gotSomething){return;} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
authToken:"",lifetime:0}; ---> var  <--- soapDoc=AjxSoapDoc.create("DelegateAuthRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"DelegateAuthRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("account",accId)

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("by","id"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
"DeleteGalSyncAccountRequest",ZaZimbraAdmin.URN,null); ---> var  <--- accEl=soapDoc.set("account",this.

[WARNING] Try to use a single 'var' statement per scope.
this.deleteCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("action","status"); ---> var  <--- attr=soapDoc.set("mbox",null)

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("id",mbxId); ---> var  <--- resp=null;try{var command=new 

[WARNING] Try to use a single 'var' statement per scope.
);var resp=null;try{ ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
{var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("action","start"); ---> var  <--- attr=soapDoc.set("mbox",null)

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("id",mbxId); ---> var  <--- resp;try{var command=new ZmCsfeCommand(

[WARNING] Try to use a single 'var' statement per scope.
,mbxId);var resp;try{ ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
{var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("action","cancel"); ---> var  <--- attr=soapDoc.set("mbox",null)

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("id",mbxId); ---> var  <--- resp;try{var command=new ZmCsfeCommand(

[WARNING] Try to use a single 'var' statement per scope.
,mbxId);var resp;try{ ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
{var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
,ZaReindexMailbox.A_status);}else{ ---> var  <--- detail=respObj.getException().detail;

[WARNING] Try to use a single 'var' statement per scope.
=respObj.getException().detail; ---> var  <--- msg=respObj.getException().msg;

[WARNING] Try to use a single 'var' statement per scope.
=respObj.getException().msg; ---> var  <--- strBuf=[];if(detail){

[WARNING] Try to use a single 'var' statement per scope.
.A_status);}}}else{ ---> var  <--- resp;if(respObj.getResponse){resp

[WARNING] Try to use a single 'var' statement per scope.
.ReIndexResponse.progress[0]){ ---> var  <--- progress=resp.Body.ReIndexResponse.progress[

[WARNING] Try to use a single 'var' statement per scope.
var children=node.childNodes;for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
.nodeName!="a"){continue;} ---> var  <--- name=child.getAttribute("n");if

[WARNING] Try to use a single 'var' statement per scope.
if(child.firstChild!=null){ ---> var  <--- value=child.firstChild.nodeValue;if(

[WARNING] Try to use a single 'var' statement per scope.
if(name in this.attrs){ ---> var  <--- vc=this.attrs[name];if

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraForeignPrincipal]=[];for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaItem.A_zimbraId]=val; ---> var  <--- getAccDoc=soapDoc.set("GetAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- elBy=soapDoc.set("account",val,

[WARNING] Try to use a single 'var' statement per scope.
("by",by);}else{ ---> var  <--- getAccDoc=AjxSoapDoc.create("GetAccountRequest",ZaZimbraAdmin.

[WARNING] The variable getAccDoc has already been declared in the same scope...
"by",by);}else{var  ---> getAccDoc <--- =AjxSoapDoc.create("GetAccountRequest",ZaZimbraAdmin.URN

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- elBy=getAccDoc.set("account",val)

[WARNING] The variable elBy has already been declared in the same scope...
.join(","));}var  ---> elBy <--- =getAccDoc.set("account",val);

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by",by); ---> var  <--- params=new Object();params.soapDoc

[WARNING] The variable params has already been declared in the same scope...
.setAttribute("by",by);var  ---> params <--- =new Object();params.soapDoc=

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=getAccDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraIsExternalVirtualAccount]!="TRUE"){ ---> var  <--- getMailboxReq=soapDoc.set("GetMailboxRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- mbox=soapDoc.set("mbox","",

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.GET_ACCOUNT_MEMBERSHIP_RIGHT,this)){ ---> var  <--- getAccMembershipDoc=AjxSoapDoc.create("GetAccountMembershipRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
create("GetAccountMembershipRequest",ZaZimbraAdmin.URN); ---> var  <--- account=getAccMembershipDoc.set("account",this.

[WARNING] Try to use a single 'var' statement per scope.
account.setAttribute("by","id"); ---> var  <--- params={soapDoc:getAccMembershipDoc,asyncMode:true

[WARNING] The variable params has already been declared in the same scope...
.setAttribute("by","id");var  ---> params <--- ={soapDoc:getAccMembershipDoc,asyncMode:true,

[WARNING] Try to use a single 'var' statement per scope.
._handleAccountMembershipResponse.bind(this)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] The variable reqMgrParams has already been declared in the same scope...
_handleAccountMembershipResponse.bind(this)};var  ---> reqMgrParams <--- ={controller:ZaApp.getInstance().

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.GET_ACCOUNT_INFO_RIGHT,this)){ ---> var  <--- getAccInfoReq=soapDoc.set("GetAccountInfoRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- account=soapDoc.set("account",this.

[WARNING] The variable account has already been declared in the same scope...
,null,ZaZimbraAdmin.URN);var  ---> account <--- =soapDoc.set("account",this.attrs

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.VIEW_MAIL_RIGHT,this)){ ---> var  <--- getDSReq=soapDoc.set("GetDataSourcesRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- elId=soapDoc.set("id",this.

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.A_zimbraId],getDSReq);} ---> var  <--- hasError=false;var lastException;if(by

[WARNING] Try to use a single 'var' statement per scope.
getDSReq);}var hasError=false; ---> var  <--- lastException;if(by=="id"||ZaItem.

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] The variable reqMgrParams has already been declared in the same scope...
);params.soapDoc=soapDoc;var  ---> reqMgrParams <--- ={controller:ZaApp.getInstance().

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
;lastException=ex;}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;if(

[WARNING] Try to use a single 'var' statement per scope.
(batchResp.GetDataSourcesResponse[0]); ---> var  <--- dss=this[ZaAccount.A2_datasources].getArray

[WARNING] Try to use a single 'var' statement per scope.
dss&&dss.length){for( ---> var  <--- i=0;i<dss.length;

[WARNING] Try to use a single 'var' statement per scope.
if(hasError){throwlastException;} ---> var  <--- autoDispName;if(this.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraPrefMailPollingInterval]){ ---> var  <--- poIntervalInS=ZaUtil.getLifeTimeInSeconds(this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraPrefMailPollingInterval]){ ---> var  <--- dePoIntervalInS=ZaUtil.getLifeTimeInSeconds(this._defaultValues.

[WARNING] Try to use a single 'var' statement per scope.
){var methods=ZaAccount.renameMethods; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("newName",newName); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("newPassword",newPassword); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
){var methods=ZaAccount.changePasswordMethods; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
index=value.indexOf("@"); ---> var  <--- name=value.substring(0,index)

[WARNING] Try to use a single 'var' statement per scope.
value.substring(0,index); ---> var  <--- namePart=name.replace(/(\s*$)/g,"")

[WARNING] Try to use a single 'var' statement per scope.
namePart=AjxStringUtil.trim(namePart); ---> var  <--- domainPart=value.substring(index+1)

[WARNING] Try to use a single 'var' statement per scope.
{if(value){var i; ---> var  <--- startIndex=0;var endIndex=0;var 

[WARNING] Try to use a single 'var' statement per scope.
{var i;var startIndex=0; ---> var  <--- endIndex=0;var currentEmailAddress;var ret;

[WARNING] Try to use a single 'var' statement per scope.
startIndex=0;var endIndex=0; ---> var  <--- currentEmailAddress;var ret;var isThrown=false;

[WARNING] Try to use a single 'var' statement per scope.
;var endIndex=0;var currentEmailAddress; ---> var  <--- ret;var isThrown=false;value=value

[WARNING] Try to use a single 'var' statement per scope.
=0;var currentEmailAddress;var ret; ---> var  <--- isThrown=false;value=value.replace(

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(value)){ ---> var  <--- cos=ZaCos.getCosByName(value);if

[WARNING] Try to use a single 'var' statement per scope.
.ERROR_NO_SUCH_COS,[value])); ---> var  <--- event=new DwtXFormsEvent(form,this,value

[WARNING] The variable event has already been declared in the same scope...
ERROR_NO_SUCH_COS,[value]));var  ---> event <--- =new DwtXFormsEvent(form,this,value)

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- oldDomainName=ZaAccount.getDomain(instance[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
);this.setInstanceValue(value); ---> var  <--- p=form.parent;var newDomainName=ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
);var p=form.parent; ---> var  <--- newDomainName=ZaAccount.getDomain(value);if

[WARNING] Try to use a single 'var' statement per scope.
if(!newDomainName){return;} ---> var  <--- domainObj;try{domainObj=ZaDomain.getDomainByName(

[WARNING] Try to use a single 'var' statement per scope.
]||instance.getAttrs.all){ ---> var  <--- skins=ZaApp.getInstance().getInstalledSkins(

[WARNING] Try to use a single 'var' statement per scope.
{skins=[skins];}} ---> var  <--- skinsChoices=ZaApp.getInstance().getSkinChoices(

[WARNING] Try to use a single 'var' statement per scope.
]||instance.getAttrs.all){ ---> var  <--- allZimlets=ZaZimlet.getAll("extension");if

[WARNING] Try to use a single 'var' statement per scope.
.dirtyChoices();}}else{ ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] Try to use a single 'var' statement per scope.
else{var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
if(domainObj&&domainObj.attrs){ ---> var  <--- cosMaxAccounts=domainObj.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]

[WARNING] Try to use a single 'var' statement per scope.
if(domainObj&&domainObj.attrs){ ---> var  <--- maxDomainAccounts=domainObj.attrs[ZaDomain.A_domainMaxAccounts]

[WARNING] Try to use a single 'var' statement per scope.
domainObj.attrs[ZaDomain.A_domainMaxAccounts]; ---> var  <--- cosMaxAccounts=domainObj.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]

[WARNING] The variable cosMaxAccounts has already been declared in the same scope...
.attrs[ZaDomain.A_domainMaxAccounts];var  ---> cosMaxAccounts <--- =domainObj.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts];

[WARNING] Try to use a single 'var' statement per scope.
if(maxDomainAccounts&&maxDomainAccounts>0){ ---> var  <--- usedAccounts=domainObj.getUsedDomainAccounts(newDomainName);if

[WARNING] Try to use a single 'var' statement per scope.
),ZaAccount.A2_accountTypes,null); ---> var  <--- msg;if(usedAccounts-maxDomainAccounts>1)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaAccount.A_displayname); ---> var  <--- newDisplayname="";var firstOne=firstName,secondOne

[WARNING] Try to use a single 'var' statement per scope.
.A_displayname);var newDisplayname=""; ---> var  <--- firstOne=firstName,secondOne=lastName;if(

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAccount.A_COSId]; ---> var  <--- currentCos;currentCos=ZaCos.getCosById(this.

[WARNING] Try to use a single 'var' statement per scope.
function(){var warning=""; ---> var  <--- tz=this.attrs[ZaAccount.A_zimbraPrefTimeZoneId]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefTimeZoneId];if(tz){ ---> var  <--- n_tz=ZaModel.setUnrecoganizedChoiceValue(tz,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
.name+'"']);}} ---> var  <--- mdc=this.attrs[ZaAccount.A_zimbraPrefMailDefaultCharset]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefMailDefaultCharset];if(mdc){ ---> var  <--- n_mdc=ZaModel.setUnrecoganizedChoiceValue(mdc,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
.name+'"']);}} ---> var  <--- lv=this.attrs[ZaCos.A_zimbraPrefLocale]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefLocale];if(lv){ ---> var  <--- n_lv=ZaModel.setUnrecoganizedChoiceValue(lv,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- gc=ZaApp.getInstance().getGlobalConfig(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getGlobalConfig(); ---> var  <--- sc=ZaApp.getInstance().getServerByName(

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_mailHost]); ---> var  <--- s_mailpurge=sc.attrs[ZaServer.A_zimbraMailPurgeSleepInterval]

[WARNING] Try to use a single 'var' statement per scope.
sc.attrs[ZaServer.A_zimbraMailPurgeSleepInterval]; ---> var  <--- g_mailpurge=gc.attrs[ZaGlobalConfig.A_zimbraMailPurgeSleepInterval]

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var acctTypes

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- acctTypes=instance[ZaAccount.A2_accountTypes];var 

[WARNING] Try to use a single 'var' statement per scope.
acctTypes=instance[ZaAccount.A2_accountTypes]; ---> var  <--- isShow=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
];var isShow=false;for( ---> var  <--- i=0;i<acctTypes.length&&

[WARNING] Try to use a single 'var' statement per scope.
length&&!isShow;i++){ ---> var  <--- domainName=ZaAccount.getDomain(instance.name)

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.getDomain(instance.name); ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName,form.

[WARNING] Try to use a single 'var' statement per scope.
domainName,form.parent._app); ---> var  <--- cos=ZaCos.getCosById(acctTypes[i]

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var acctTypes

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- acctTypes=instance[ZaAccount.A2_accountTypes];var 

[WARNING] Try to use a single 'var' statement per scope.
acctTypes=instance[ZaAccount.A2_accountTypes]; ---> var  <--- out=[];if(acctTypes&&acctTypes

[WARNING] Try to use a single 'var' statement per scope.
acctTypes&&acctTypes.length>0){ ---> var  <--- currentType=instance[ZaAccount.A2_currentAccountType];var 

[WARNING] Try to use a single 'var' statement per scope.
currentType=instance[ZaAccount.A2_currentAccountType]; ---> var  <--- defaultType=ZaCos.getDefaultCos4Account(instance[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
){currentType=defaultType.id;} ---> var  <--- domainName=ZaAccount.getDomain(instance.name)

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.getDomain(instance.name); ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName,form.

[WARNING] Try to use a single 'var' statement per scope.
domainName,form.parent._app); ---> var  <--- isFullUsed=true;out.push("<table with=100%>")

[WARNING] Try to use a single 'var' statement per scope.
);out.push("<tbody>"); ---> var  <--- radioGroupName="account_type_radio_group_"+Dwt.getNextId();

[WARNING] Try to use a single 'var' statement per scope.
;domainObj.updateUsedAccounts();for( ---> var  <--- i=0;i<acctTypes.length;

[WARNING] Try to use a single 'var' statement per scope.
<acctTypes.length;i++){ ---> var  <--- cos=ZaCos.getCosById(acctTypes[i]

[WARNING] Try to use a single 'var' statement per scope.
],ZaApp.getInstance()); ---> var  <--- isCheck=false;if(cos==null)

[WARNING] Try to use a single 'var' statement per scope.
i]]));return;} ---> var  <--- accountTypeDisplayValue=cos.attrs[ZaCos.A_description]

[WARNING] Try to use a single 'var' statement per scope.
;}out.push("<td>"); ---> var  <--- usedAccounts=domainObj.getUsedAccounts(cos.name)

[WARNING] Try to use a single 'var' statement per scope.
domainObj.getUsedAccounts(cos.name); ---> var  <--- availableAccounts=domainObj.getAvailableAccounts(cos.name)

[WARNING] Try to use a single 'var' statement per scope.
domainObj.getAvailableAccounts(cos.name); ---> var  <--- isNewAccount=false;if(form&&form.

[WARNING] The variable isNewAccount has already been declared in the same scope...
.getAvailableAccounts(cos.name);var  ---> isNewAccount <--- =false;if(form&&form.parent

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var newCos

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- newCos=ZaCos.getCosById(newType);if

[WARNING] Try to use a single 'var' statement per scope.
]||tmpObj[ZaAccount.A2_currentAccountType]; ---> var  <--- defaultType=ZaCos.getDefaultCos4Account(tmpObj[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
id){returntrue;}for( ---> var  <--- i=0;i<tmpObj.accountTypes.

[WARNING] Try to use a single 'var' statement per scope.
].join(""))}; ---> var  <--- resp=ZaSearch.searchDirectory(searchParams).Body

[WARNING] Try to use a single 'var' statement per scope.
searchDirectory(searchParams).Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(ZaAccount);list.

[WARNING] Try to use a single 'var' statement per scope.
);list.loadFromJS(resp); ---> var  <--- arr=list.getArray();if(

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("id",accountId); ---> var  <--- catchAllDomain="";if(domainName==null||

[WARNING] Try to use a single 'var' statement per scope.
else{catchAllDomain=domainName;}}} ---> var  <--- el=soapDoc.set("a",catchAllDomain)

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",ZaAccount.A_zimbraMailCatchAllAddress); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAccount.A_zimbraMailAlias]; ---> var  <--- cos=ZaCos.getCosById(this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraIsExternalVirtualAccount]=="TRUE"); ---> var  <--- domainName=ZaAccount.getDomain(this[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
(this[ZaAccount.A_name]); ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName);var 

[WARNING] Try to use a single 'var' statement per scope.
domainObj=ZaDomain.getDomainByName(domainName); ---> var  <--- Tis=[];if(alias.length

[WARNING] Try to use a single 'var' statement per scope.
if(alias.length>0){ ---> var  <--- aliasTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
;Tis.push(aliasTi);} ---> var  <--- dls=this[ZaAccount.A2_memberOf];if

[WARNING] Try to use a single 'var' statement per scope.
];if(dls!=null){ ---> var  <--- direct_dls=dls[ZaAccount.A2_directMemberList];var 

[WARNING] Try to use a single 'var' statement per scope.
direct_dls=dls[ZaAccount.A2_directMemberList]; ---> var  <--- indirect_dls=dls[ZaAccount.A2_indirectMemberList];if

[WARNING] Try to use a single 'var' statement per scope.
+indirect_dls.length)>0){ ---> var  <--- dlsTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
Tis.push(dlsTi);}} ---> var  <--- cosTi=new ZaTreeItemData({text:cos.

[WARNING] Try to use a single 'var' statement per scope.
cosTreeListener;Tis.push(cosTi); ---> var  <--- domainTi=new ZaTreeItemData({text:domainName,

[WARNING] Try to use a single 'var' statement per scope.
if(!response){return;} ---> var  <--- accountMembershipResponse=response.GetAccountMembershipResponse;if(!accountMembershipResponse

[WARNING] Try to use a single 'var' statement per scope.
ZaAccountMemberOfListView.SEARCH_LIMIT)?1:0; ---> var  <--- controller=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
._currentObject!==this){return;} ---> var  <--- view=controller._view;if(view)

[WARNING] Try to use a single 'var' statement per scope.
controller._view;if(view){ ---> var  <--- form=view.getMyForm();if(

[WARNING] Try to use a single 'var' statement per scope.
this.deleteCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("newName",newName); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_RENAME_DL}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
]=tmpObj.name;var resp; ---> var  <--- soapDoc=AjxSoapDoc.create("CreateDistributionListRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.A_COSId]=null;}for( ---> var  <--- aname in tmpObj.attrs){if(aname

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[aname].length

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
][ix])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname] instanceof AjxVector){ ---> var  <--- tmpArray=tmpObj.attrs[aname].getArray

[WARNING] Try to use a single 'var' statement per scope.
attrs[aname].getArray(); ---> var  <--- cnt=tmpArray.length;if(cnt)

[WARNING] The variable cnt has already been declared in the same scope...
[aname].getArray();var  ---> cnt <--- =tmpArray.length;if(cnt){

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
;if(cnt){for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
tmpArray[ix])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpArray[

[WARNING] The variable attr has already been declared in the same scope...
[ix])=="object"){var  ---> attr <--- =soapDoc.set("a",tmpArray[ix

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpArray[

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpArray[ix

[WARNING] Try to use a single 'var' statement per scope.
attrs[aname])=="object"){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
[aname])=="object"){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
"n",aname);}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
);}}}}}try{ ---> var  <--- csfeParams=new Object();csfeParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();csfeParams.soapDoc=soapDoc; ---> var  <--- reqMgrParams={};reqMgrParams.controller=ZaApp

[WARNING] Try to use a single 'var' statement per scope.
,obj){var gotSomething=false; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyDistributionListRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id);for( ---> var  <--- a in obj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
(",").valueOf()){ ---> var  <--- cnt=obj.attrs[a].length

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=null;if(obj.attrs[

[WARNING] Try to use a single 'var' statement per scope.
a][ix] instanceof String){ ---> var  <--- attr=soapDoc.set("a",obj.

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof String){var  ---> attr <--- =soapDoc.set("a",obj.attrs

[WARNING] Try to use a single 'var' statement per scope.
a][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",obj.

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",obj.attrs

[WARNING] Try to use a single 'var' statement per scope.
attrs[a][ix]){ ---> var  <--- attr=soapDoc.set("a",obj.

[WARNING] The variable attr has already been declared in the same scope...
[a][ix]){var  ---> attr <--- =soapDoc.set("a",obj.attrs

[WARNING] Try to use a single 'var' statement per scope.
,a);}}}else{ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
a);}}}else{var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
,a);}}}else{ ---> var  <--- attr=soapDoc.set("a",obj.

[WARNING] The variable attr has already been declared in the same scope...
a);}}}else{var  ---> attr <--- =soapDoc.set("a",obj.attrs

[WARNING] Try to use a single 'var' statement per scope.
if(!gotSomething){return;} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
obj){var tmpObjCnt=-1; ---> var  <--- currentObjCnt=-1;if(ZaItem.hasRight

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias]=="string"){ ---> var  <--- tmpStr=obj.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias]=="string"){ ---> var  <--- tmpStr=this.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] The variable tmpStr has already been declared in the same scope...
ZaAccount.A_zimbraMailAlias]=="string"){var  ---> tmpStr <--- =this.attrs[ZaAccount.A_zimbraMailAlias];

[WARNING] Try to use a single 'var' statement per scope.
].length-1;}for( ---> var  <--- tmpIx=tmpObjCnt;tmpIx>=0;tmpIx--

[WARNING] Try to use a single 'var' statement per scope.
>=0;tmpIx--){for( ---> var  <--- currIx=currentObjCnt;currIx>=0;currIx--

[WARNING] Try to use a single 'var' statement per scope.
,this)){try{for( ---> var  <--- ix=0;ix<currentObjCnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias].length;} ---> var  <--- failedAliases="";var failedAliasesCnt=0;if

[WARNING] Try to use a single 'var' statement per scope.
.length;}var failedAliases=""; ---> var  <--- failedAliasesCnt=0;if(ZaItem.hasRight(

[WARNING] Try to use a single 'var' statement per scope.
,this)){try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
this)){try{for(var  ---> ix <--- =0;ix<tmpObjCnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<tmpObjCnt;ix++){ ---> var  <--- aliasName=obj.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
==ZmCsfeException.ACCT_EXISTS)&&aliasName){ ---> var  <--- account=ZaXFormViewController.prototype._findAlias.call(

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A_zimbraMailAlias].length;} ---> var  <--- failedAliases="";var failedAliasesCnt=0;try

[WARNING] Try to use a single 'var' statement per scope.
.length;}var failedAliases=""; ---> var  <--- failedAliasesCnt=0;try{for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var failedAliasesCnt=0;try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<tmpObjCnt;ix++){ ---> var  <--- aliasName=obj.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
==ZmCsfeException.ACCT_EXISTS)&&aliasName){ ---> var  <--- account=ZaXFormViewController.prototype._findAlias.call(

[WARNING] Try to use a single 'var' statement per scope.
obj){var tmpObjCnt=-1; ---> var  <--- currentObjCnt=-1;var hasAddandRemoveRight=true;

[WARNING] Try to use a single 'var' statement per scope.
-1;var currentObjCnt=-1; ---> var  <--- hasAddandRemoveRight=true;if(hasAddandRemoveRight){if

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_DLOwners] instanceof Array)){ ---> var  <--- tmpStr=obj[ZaDistributionList.A2_DLOwners];obj

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_DLOwners] instanceof Array)){ ---> var  <--- tmpStr=this[ZaDistributionList.A2_DLOwners];this

[WARNING] The variable tmpStr has already been declared in the same scope...
.A2_DLOwners] instanceof Array)){var  ---> tmpStr <--- =this[ZaDistributionList.A2_DLOwners];this[

[WARNING] Try to use a single 'var' statement per scope.
].length-1;}for( ---> var  <--- tmpIx=tmpObjCnt;tmpIx>=0;tmpIx--

[WARNING] Try to use a single 'var' statement per scope.
>=0;tmpIx--){for( ---> var  <--- currIx=currentObjCnt;currIx>=0;currIx--

[WARNING] Try to use a single 'var' statement per scope.
].length;}try{for( ---> var  <--- ix=0;ix<currentObjCnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
].length;}try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.length;}try{for(var  ---> ix <--- =0;ix<tmpObjCnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_DLOwners] instanceof Array)){ ---> var  <--- tmpStr=obj[ZaDistributionList.A2_DLOwners];obj

[WARNING] Try to use a single 'var' statement per scope.
].length;}try{for( ---> var  <--- ix=0;ix<tmpObjCnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
create("DistributionListActionRequest","urn:zimbraAccount",null); ---> var  <--- dlBy=soapDoc.set("dl",this.

[WARNING] Try to use a single 'var' statement per scope.
dlBy.setAttribute("by","id"); ---> var  <--- opBy=soapDoc.set("action",null)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("action",null); ---> var  <--- busyMsg;var actionName;if(isAdd){

[WARNING] Try to use a single 'var' statement per scope.
("action",null);var busyMsg; ---> var  <--- actionName;if(isAdd){actionName="addOwners"

[WARNING] Try to use a single 'var' statement per scope.
opBy.setAttribute("op",actionName); ---> var  <--- ownerBy=soapDoc.set("owner",ownerName,

[WARNING] Try to use a single 'var' statement per scope.
ownerBy.setAttribute("type","usr"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("offset",offset); ---> var  <--- dl=soapDoc.set("dl",this.

[WARNING] Try to use a single 'var' statement per scope.
"name",this.getName()); ---> var  <--- busyId=Dwt.getNextId();var argsOfCallback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- argsOfCallback={controller:controller,offset:offset

[WARNING] Try to use a single 'var' statement per scope.
busyId:busyId,ajxCallbackWhenCompleted:ajxCallbackWhenCompleted}; ---> var  <--- reqCtrlParams={soapDoc:soapDoc,noAuthToken:true

[WARNING] Try to use a single 'var' statement per scope.
(this,callbackQuery,argsOfCallback);} ---> var  <--- reqMgrParams={controller:controller,showBusy:true

[WARNING] Try to use a single 'var' statement per scope.
busyId:busyId,skipCallbackIfCancelled:true}; ---> var  <--- queryParams={reqCtrlParams:reqCtrlParams,reqMgrParams:reqMgrParams

[WARNING] Try to use a single 'var' statement per scope.
if(this.id!=null){ ---> var  <--- limit=0;var offset=0;var 

[WARNING] Try to use a single 'var' statement per scope.
!=null){var limit=0; ---> var  <--- offset=0;var callbackQuery=ZaDistributionList.prototype

[WARNING] Try to use a single 'var' statement per scope.
limit=0;var offset=0; ---> var  <--- callbackQuery=ZaDistributionList.prototype.getAllMembersCallback;this[

[WARNING] Try to use a single 'var' statement per scope.
.A2_allMemberHash]={};try{ ---> var  <--- ajxCallbackWhenCompleted=new AjxCallback(view,ZaDLXFormView.prototype

[WARNING] Try to use a single 'var' statement per scope.
view,ZaDLXFormView.prototype.updateMemberList); ---> var  <--- updateTreeWhenCompleted=new AjxCallback(this,this.updateTree

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this.updateTree); ---> var  <--- queryParams=ZaDistributionList.prototype.getMemberQueryParams.call(

[WARNING] Try to use a single 'var' statement per scope.
[0])){return;} ---> var  <--- dlResp=dlBody.dl[0];if

[WARNING] Try to use a single 'var' statement per scope.
.A2_dlType]=ZaDistributionList.DYNAMIC_DL_TYPE;} ---> var  <--- members=dlResp.dlm;var len=(

[WARNING] Try to use a single 'var' statement per scope.
;}var members=dlResp.dlm; ---> var  <--- len=(members&&members.length)?

[WARNING] Try to use a single 'var' statement per scope.
length)?members.length:0; ---> var  <--- allMembers=this[ZaDistributionList.A2_allMemberHash];for

[WARNING] Try to use a single 'var' statement per scope.
this[ZaDistributionList.A2_allMemberHash];for( ---> var  <--- i=0;i<len;++i

[WARNING] Try to use a single 'var' statement per scope.
;i<len;++i){ ---> var  <--- name=members[i]._content;if

[WARNING] Try to use a single 'var' statement per scope.
!AjxUtil.isEmpty(name)){ ---> var  <--- member=new ZaDistributionListMember(name);allMembers[

[WARNING] Try to use a single 'var' statement per scope.
ZaAccountMemberOfListView.SEARCH_LIMIT)?1:0; ---> var  <--- owners=dlResp.owners;var ownerLen=(

[WARNING] Try to use a single 'var' statement per scope.
0;var owners=dlResp.owners; ---> var  <--- ownerLen=(owners&&owners.length)?

[WARNING] Try to use a single 'var' statement per scope.
);if(ownerLen>0){ ---> var  <--- ownerSet=owners[0].owner;for

[WARNING] Try to use a single 'var' statement per scope.
owners[0].owner;for( ---> var  <--- i=0;i<ownerSet.length;

[WARNING] The variable i has already been declared in the same scope...
[0].owner;for(var  ---> i <--- =0;i<ownerSet.length;i

[WARNING] Try to use a single 'var' statement per scope.
<ownerSet.length;i++){ ---> var  <--- owner=new ZaDistributionListOwner(ownerSet[i])

[WARNING] Try to use a single 'var' statement per scope.
push(owner.name);}} ---> var  <--- ajxCallbackWhenCompleted=params.ajxCallbackWhenCompleted||null;if(

[WARNING] Try to use a single 'var' statement per scope.
if(ajxCallbackWhenCompleted instanceof Array){for( ---> var  <--- i=0;i<ajxCallbackWhenCompleted.length;

[WARNING] The variable i has already been declared in the same scope...
(ajxCallbackWhenCompleted instanceof Array){for(var  ---> i <--- =0;i<ajxCallbackWhenCompleted.length;i

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(allMembers)){return;} ---> var  <--- pages=new Array();var names=

[WARNING] Try to use a single 'var' statement per scope.
}var pages=new Array(); ---> var  <--- names=AjxUtil.getHashKeys(allMembers);for

[WARNING] Try to use a single 'var' statement per scope.
AjxUtil.getHashKeys(allMembers);for( ---> var  <--- i=0;i<names.length;

[WARNING] Try to use a single 'var' statement per scope.
length;i+=ZaDistributionList.MEMBER_LIST_PAGE_SIZE){ ---> var  <--- page=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
page=new Array();for( ---> var  <--- j=0;(i+j<names

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.MEMBER_LIST_PAGE_SIZE);j++){ ---> var  <--- member=allMembers[names[i+j]

[WARNING] Try to use a single 'var' statement per scope.
}return;}var removeMemberSoapDoc,r; ---> var  <--- command=new ZmCsfeCommand();removeMemberSoapDoc=AjxSoapDoc

[WARNING] Try to use a single 'var' statement per scope.
set("id",obj.id); ---> var  <--- len=obj[ZaDistributionList.A2_removeList].length

[WARNING] Try to use a single 'var' statement per scope.
<1){return;}for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
i].toString());} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=finishedCallback;} ---> var  <--- removeList=obj[ZaDistributionList.A2_removeList];obj

[WARNING] Try to use a single 'var' statement per scope.
}return;}var addMemberSoapDoc,r; ---> var  <--- command=new ZmCsfeCommand();addMemberSoapDoc=AjxSoapDoc

[WARNING] Try to use a single 'var' statement per scope.
set("id",obj.id); ---> var  <--- len=obj[ZaDistributionList.A2_addList].length

[WARNING] Try to use a single 'var' statement per scope.
<1){return;}for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
i].toString());} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
finishedCallback;}params.noAuthToken=true; ---> var  <--- addList=obj[ZaDistributionList.A2_addList];command

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getTabGroup(); ---> var  <--- currentDl={name:dl.name,id

[WARNING] Try to use a single 'var' statement per scope.
id:dl.id};for( ---> var  <--- i=0;i<modifyList.length;

[WARNING] Try to use a single 'var' statement per scope.
<modifyList.length;i++){ ---> var  <--- currentItem=modifyList[i];var accountName=

[WARNING] Try to use a single 'var' statement per scope.
{var currentItem=modifyList[i]; ---> var  <--- accountName=null;accountName=currentItem.name;

[WARNING] Try to use a single 'var' statement per scope.
if(!accountName){continue;} ---> var  <--- currentView=null;for(var iTab=0

[WARNING] Try to use a single 'var' statement per scope.
;}var currentView=null;for( ---> var  <--- iTab=0;iTab<ZaAppTabGroup._TABS.

[WARNING] Try to use a single 'var' statement per scope.
.size();iTab++){ ---> var  <--- tab=ZaAppTabGroup._TABS.get(iTab)

[WARNING] Try to use a single 'var' statement per scope.
ZaAppTabGroup._TABS.get(iTab); ---> var  <--- v=tab.getAppView();if(

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailAlias]){ ---> var  <--- aliasList=v._containedObject.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
_containedObject.attrs[ZaAccount.A_zimbraMailAlias]; ---> var  <--- isAliasMatch=false;for(var iAlias=0

[WARNING] Try to use a single 'var' statement per scope.
];var isAliasMatch=false;for( ---> var  <--- iAlias=0;iAlias<aliasList.length;

[WARNING] Try to use a single 'var' statement per scope.
if(!currentView){continue;} ---> var  <--- isFind=false;var currentInDL=currentView._containedObject

[WARNING] Try to use a single 'var' statement per scope.
{continue;}var isFind=false; ---> var  <--- currentInDL=currentView._containedObject[ZaAccount.A2_memberOf]

[WARNING] Try to use a single 'var' statement per scope.
][ZaAccount.A2_directMemberList];for( ---> var  <--- j=0;j<currentInDL.length;

[WARNING] Try to use a single 'var' statement per scope.
=dl.a.length;for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
a=AjxUtil.isEmpty(val1); ---> var  <--- b=AjxUtil.isEmpty(val2);if

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAccount.A_zimbraMailAlias]; ---> var  <--- membersNum=this[ZaDistributionList.A2_numMembers];var 

[WARNING] Try to use a single 'var' statement per scope.
membersNum=this[ZaDistributionList.A2_numMembers]; ---> var  <--- Tis=[];if(alias.length

[WARNING] Try to use a single 'var' statement per scope.
if(alias.length>0){ ---> var  <--- aliasTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
;}if(membersNum>0){ ---> var  <--- membersTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
.VALUE_NOT_SET,id:""}); ---> var  <--- i=0;for(i=0;

[WARNING] Try to use a single 'var' statement per scope.
.VALUE_NOT_SET,id:""}); ---> var  <--- i=0;for(i=0;

[WARNING] Try to use a single 'var' statement per scope.
create("GetSignaturesRequest","urn:zimbraAccount",null); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
params.accountName=val;}try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
[ZaResource.A2_signatureList]=[]; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
if(resp.signature){for( ---> var  <--- i in resp.signature){var _content;

[WARNING] Try to use a single 'var' statement per scope.
(var i in resp.signature){ ---> var  <--- _content;var _type;if(resp.signature

[WARNING] Try to use a single 'var' statement per scope.
 in resp.signature){var _content; ---> var  <--- _type;if(resp.signature[i]

[WARNING] Try to use a single 'var' statement per scope.
.content[0].type;} ---> var  <--- currentSignature=new ZaSignature(resp.signature[i

[WARNING] Try to use a single 'var' statement per scope.
create("CreateSignatureRequest","urn:zimbraAccount",null); ---> var  <--- signBy=soapDoc.set("signature",null)

[WARNING] Try to use a single 'var' statement per scope.
,this[ZaSignature.A2_name]); ---> var  <--- contentBy;if(this[ZaSignature.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("type","text/plain");} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
params.accountName=val;}try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_RESOURCE}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
A2_signatureList].length;i++){ ---> var  <--- current=tmpObj[ZaResource.A2_signatureList][i

[WARNING] Try to use a single 'var' statement per scope.
[ZaResource.A2_signatureList][i]; ---> var  <--- newSign;if(current[ZaSignature.A2_name]

[WARNING] Try to use a single 'var' statement per scope.
][i]=newSign;}} ---> var  <--- mods={};var index;if(

[WARNING] Try to use a single 'var' statement per scope.
;}}var mods={}; ---> var  <--- index;if(tmpObj.attrs[ZaResource.

[WARNING] Try to use a single 'var' statement per scope.
create("ModifySignatureRequest","urn:zimbraAccount",null); ---> var  <--- signBy=soapDoc.set("signature",null)

[WARNING] Try to use a single 'var' statement per scope.
,this[ZaSignature.A2_id]); ---> var  <--- contentBy;if(this[ZaSignature.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("type","text/plain");} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
params.accountName=val;}try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
create("DeleteSignatureRequest","urn:zimbraAccount",null); ---> var  <--- signBy=soapDoc.set("signature",null)

[WARNING] Try to use a single 'var' statement per scope.
,this[ZaSignature.A2_id]); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
params.accountName=val;}try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_RESOURCE}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
}}var maxPwdLen=Number.POSITIVE_INFINITY; ---> var  <--- minPwdLen=1;if(ZaItem.hasWritePermission(

[WARNING] Try to use a single 'var' statement per scope.
A_password]).length<minPwdLen){ ---> var  <--- minpassMsg;if(minPwdLen>1){minpassMsg

[WARNING] Try to use a single 'var' statement per scope.
A_password]).length>maxPwdLen){ ---> var  <--- maxpassMsg;if(maxPwdLen>1){maxpassMsg

[WARNING] Try to use a single 'var' statement per scope.
]=tmpObj.name;var resp; ---> var  <--- soapDoc=AjxSoapDoc.create("CreateCalendarResourceRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
setLdapAttrsFromSchedulePolicy.call(tmpObj);for( ---> var  <--- aname in tmpObj.attrs){if(aname

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[aname].length

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname]!=null){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
attrs[aname]!=null){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
,aname);}}}try{ ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
(mods){var hasSomething=false; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyCalendarResourceRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id);for( ---> var  <--- aname in mods){hasSomething=true;if

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] Try to use a single 'var' statement per scope.
].length;if(cnt){ ---> var  <--- nonemptyElements=false;for(var ix=0

[WARNING] Try to use a single 'var' statement per scope.
){var nonemptyElements=false;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=null;if(mods[aname]

[WARNING] Try to use a single 'var' statement per scope.
;}else{nonemptyElements=true;} ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
}else{nonemptyElements=true;}var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
);nonemptyElements=true;}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
;nonemptyElements=true;}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!nonemptyElements){ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
}}if(!nonemptyElements){var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
if(!hasSomething){return;} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
this.deleteCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
a.length:0);for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- elBy=soapDoc.set("calresource",val)

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by",by); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_RESOURCE}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
(resp.calresource[0]); ---> var  <--- locationDisplayName=this.attrs[ZaResource.A_locationDisplayName]

[WARNING] Try to use a single 'var' statement per scope.
"GetAccountInfoRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("account",val)

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by",by); ---> var  <--- params=new Object();i;params

[WARNING] Try to use a single 'var' statement per scope.
;i;params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaResource.A_zimbraCalResRoom];} ---> var  <--- regEx=/^\,\s*/;autoLocName=autoLocName.replace(

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("newName",newName); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
{try{var params={}; ---> var  <--- busyId=Dwt.getNextId();params.

[WARNING] Try to use a single 'var' statement per scope.
var xform=inputFieldXFormItem.getForm(); ---> var  <--- contact_email=xform.getItemsById(ZaResource.A_zimbraCalResContactEmail)

[WARNING] Try to use a single 'var' statement per scope.
(ZaResource.A_zimbraCalResContactEmail)[0]; ---> var  <--- contact_phone=xform.getItemsById(ZaResource.A_zimbraCalResContactPhone)

[WARNING] Try to use a single 'var' statement per scope.
}else{ZaSearch.TOO_MANY_RESULTS_FLAG=false; ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList();list.loadFromJS

[WARNING] Try to use a single 'var' statement per scope.
);list.loadFromJS(response); ---> var  <--- arr=list.getArray();var data

[WARNING] Try to use a single 'var' statement per scope.
var arr=list.getArray(); ---> var  <--- data=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var data=[];for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAlias.A_targetType]);} ---> var  <--- soapDoc=AjxSoapDoc.create(soapCmd,ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
this.deleteCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr></tr>"; ---> var  <--- target=this.getAliasTargetObj();if(

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- newAlias=instance[ZaAccount.A_name];var 

[WARNING] Try to use a single 'var' statement per scope.
newAlias=instance[ZaAccount.A_name]; ---> var  <--- targetName=instance[ZaAlias.A_targetAccount];try

[WARNING] Try to use a single 'var' statement per scope.
instance[ZaAlias.A_targetAccount];try{ ---> var  <--- targetObj;var targetType=ZaAlias.TARGET_TYPE_ACCOUNT;try

[WARNING] Try to use a single 'var' statement per scope.
.A_targetAccount];try{var targetObj; ---> var  <--- targetType=ZaAlias.TARGET_TYPE_ACCOUNT;try{targetObj=

[WARNING] Try to use a single 'var' statement per scope.
(val,targetType){var soapDoc; ---> var  <--- elBy;if(targetType==ZaAlias.TARGET_TYPE_DL)

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by","name"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- respBody=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
invoke(params,reqMgrParams).Body; ---> var  <--- resp;var targetObj;if(targetType==ZaAlias

[WARNING] Try to use a single 'var' statement per scope.
,reqMgrParams).Body;var resp; ---> var  <--- targetObj;if(targetType==ZaAlias.TARGET_TYPE_DL)

[WARNING] Try to use a single 'var' statement per scope.
getAliasTargetObj=function(){var targetObj; ---> var  <--- targetType=this.attrs[ZaAlias.A_targetType]

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAlias.A_targetType]; ---> var  <--- targetName=this.attrs[ZaAlias.A_targetAccount]

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAlias.A_targetAccount]; ---> var  <--- targetId=this.attrs[ZaAlias.A_AliasTargetId]

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAlias.A_targetType]; ---> var  <--- targetName=this.attrs[ZaAlias.A_targetAccount]

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaAlias.A_targetAccount]; ---> var  <--- targetId=this.attrs[ZaAlias.A_AliasTargetId]

[WARNING] Try to use a single 'var' statement per scope.
entry){var obj={}; ---> var  <--- found=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
};var found=false;for( ---> var  <--- i=0;i<ZaFp.INTEROP_PROVIDER_CHOICES.

[WARNING] Try to use a single 'var' statement per scope.
"PushFreeBusyRequest",ZaZimbraAdmin.URN,null); ---> var  <--- entry=soapDoc.set("account","")

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
false,busyMsg:ZaMsg.BUSY_GET_INTEROP_PROVIDERS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
GetAllFreeBusyProvidersResponse;ZaFp.INTEROP_PROVIDER_CHOICES=[]; ---> var  <--- providers=resp.provider;if(providers!=

[WARNING] Try to use a single 'var' statement per scope.
if(providers!=null){for( ---> var  <--- i=0;i<providers.length;

[WARNING] Try to use a single 'var' statement per scope.
"GetCosRequest",ZaZimbraAdmin.URN,null); ---> var  <--- el=soapDoc.set("cos",val)

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_COS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraPrefMailPollingInterval]){ ---> var  <--- poIntervalInS=ZaUtil.getLifeTimeInSeconds(this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
set("name",name);for( ---> var  <--- aname in mods){if(mods[aname

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof String){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
.toString());}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
toString());}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname]))){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
mods[aname]))){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
("n",aname);}}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_CREATE_COS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
,AjxStringUtil.htmlEncode(newName)); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_RENAME_COS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
(mods){var gotSomething=false; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyCosRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id);for( ---> var  <--- aname in mods){gotSomething=true;if

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] Try to use a single 'var' statement per scope.
].length;if(cnt){ ---> var  <--- nonemptyElements=false;for(var ix=0

[WARNING] Try to use a single 'var' statement per scope.
){var nonemptyElements=false;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=null;if(mods[aname]

[WARNING] Try to use a single 'var' statement per scope.
;}else{nonemptyElements=true;} ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
}else{nonemptyElements=true;}var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
);nonemptyElements=true;}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
;nonemptyElements=true;}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!nonemptyElements){ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
}}if(!nonemptyElements){var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a","")

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a","");

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
if(!gotSomething){return;} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_MODIFY_COS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"GetAllCosRequest",ZaZimbraAdmin.URN,null); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ALL_COS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAllCosResponse; ---> var  <--- list=new ZaItemList(ZaCos);list.

[WARNING] Try to use a single 'var' statement per scope.
(accountName,isExtVirtualAccount){var defaultCos; ---> var  <--- defaultDomainCos;if(!accountName){returndefaultCos

[WARNING] Try to use a single 'var' statement per scope.
(!accountName){returndefaultCos;} ---> var  <--- domainName=ZaAccount.getDomain(accountName);var 

[WARNING] Try to use a single 'var' statement per scope.
domainName=ZaAccount.getDomain(accountName); ---> var  <--- domainCosId;var domain;try{domain=ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
.getDomain(accountName);var domainCosId; ---> var  <--- domain;try{domain=ZaDomain.getDomainByName(

[WARNING] Try to use a single 'var' statement per scope.
domain.attrs[ZaDomain.A_domainDefaultCOSId]; ---> var  <--- defaultCosName=isExtVirtualAccount?"defaultExternal":"default";if(

[WARNING] Try to use a single 'var' statement per scope.
:"default";if(!domainCosId){ ---> var  <--- cos=ZaCos.getCosByName(defaultCosName);return

[WARNING] Try to use a single 'var' statement per scope.
defaultCosName);returncos;}else{ ---> var  <--- cos=ZaCos.getCosById(domainCosId);if

[WARNING] The variable cos has already been declared in the same scope...
);returncos;}else{var  ---> cos <--- =ZaCos.getCosById(domainCosId);if(

[WARNING] Try to use a single 'var' statement per scope.
function(){var warning=""; ---> var  <--- tz=this.attrs[ZaCos.A_zimbraPrefTimeZoneId]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefTimeZoneId];if(tz){ ---> var  <--- n_tz=ZaModel.setUnrecoganizedChoiceValue(tz,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
.name+'"']);}} ---> var  <--- mdc=this.attrs[ZaCos.A_zimbraPrefMailDefaultCharset]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefMailDefaultCharset];if(mdc){ ---> var  <--- n_mdc=ZaModel.setUnrecoganizedChoiceValue(mdc,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
.name+'"']);}} ---> var  <--- lv=this.attrs[ZaCos.A_zimbraPrefLocale]

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefLocale];if(lv){ ---> var  <--- n_lv=ZaModel.setUnrecoganizedChoiceValue(lv,ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
"GetAllEffectiveRightsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elGrantee=soapDoc.set("grantee",adminId)

[WARNING] Try to use a single 'var' statement per scope.
elGrantee.setAttribute("by","id"); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_EFFICIENT_COS_LIST}; ---> var  <--- cosNameList=[];try{var resp=

[WARNING] Try to use a single 'var' statement per scope.
;var cosNameList=[];try{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
GetAllEffectiveRightsResponse.Fault){returncosNameList;} ---> var  <--- targets=resp.Body.GetAllEffectiveRightsResponse.target;

[WARNING] Try to use a single 'var' statement per scope.
.Body.GetAllEffectiveRightsResponse.target;for( ---> var  <--- i=0;i<targets.length;

[WARNING] Try to use a single 'var' statement per scope.
].right.length){for( ---> var  <--- j=0;j<targets[i]

[WARNING] Try to use a single 'var' statement per scope.
]=true;}}}for( ---> var  <--- j=0;j<targets[i]

[WARNING] The variable j has already been declared in the same scope...
=true;}}}for(var  ---> j <--- =0;j<targets[i].

[WARNING] Try to use a single 'var' statement per scope.
.entries.length;j++){ ---> var  <--- entry=targets[i].entries[j

[WARNING] Try to use a single 'var' statement per scope.
entries[j].entry;for( ---> var  <--- k=0;k<entry.length;

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("limit","-1"); ---> var  <--- query="("+ZaAccount.A_COSId+"="+

[WARNING] Try to use a single 'var' statement per scope.
set("types",ZaSearch.ACCOUNTS); ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;cmdParams.noAuthToken=true;try{ ---> var  <--- resp=command.invoke(cmdParams).Body

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("limit","-1"); ---> var  <--- query="("+ZaDomain.A_domainDefaultCOSId+"="+

[WARNING] Try to use a single 'var' statement per scope.
set("types",ZaSearch.DOMAINS); ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;cmdParams.noAuthToken=true;try{ ---> var  <--- resp=command.invoke(cmdParams).Body

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraDataSourcePop3PollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourcePop3PollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaCos.A_zimbraDataSourcePop3PollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourcePop3PollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraDataSourcePop3PollingInterval]));returnfalse;} ---> var  <--- min_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraDataSourceImapPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceImapPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaCos.A_zimbraDataSourceImapPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceImapPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraDataSourceImapPollingInterval]));returnfalse;} ---> var  <--- min_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval]

[WARNING] The variable min_dataInterval has already been declared in the same scope...
]));returnfalse;}var  ---> min_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraDataSourceCalendarPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceCalendarPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaCos.A_zimbraDataSourceCalendarPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceCalendarPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraDataSourceCalendarPollingInterval]));returnfalse;} ---> var  <--- min_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval]

[WARNING] The variable min_dataInterval has already been declared in the same scope...
]));returnfalse;}var  ---> min_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraDataSourceRssPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceRssPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaCos.A_zimbraDataSourceRssPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceRssPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraDataSourceRssPollingInterval]));returnfalse;} ---> var  <--- min_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval]

[WARNING] The variable min_dataInterval has already been declared in the same scope...
]));returnfalse;}var  ---> min_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraDataSourceCaldavPollingInterval,tmpObj)){ ---> var  <--- p_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceCaldavPollingInterval]

[WARNING] The variable p_dataInterval has already been declared in the same scope...
ZaCos.A_zimbraDataSourceCaldavPollingInterval,tmpObj)){var  ---> p_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceCaldavPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
MSG_zzimbraDataSourceCaldavPollingInterval]));returnfalse;} ---> var  <--- min_dataInterval=tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval]

[WARNING] The variable min_dataInterval has already been declared in the same scope...
]));returnfalse;}var  ---> min_dataInterval <--- =tmpObj.attrs[ZaCos.A_zimbraDataSourceMinPollingInterval];

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraPrefMailPollingInterval,tmpObj)){ ---> var  <--- n_minPollingInterval=tmpObj.attrs[ZaCos.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraMailMinPollingInterval]));returnfalse;} ---> var  <--- o_minPollingInterval=tmpObj.attrs[ZaCos.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
MSG_zimbraMailMessageLifetime]));returnfalse;} ---> var  <--- itestVal=parseInt(tmpObj.attrs[ZaCos.

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A_zimbraPrefMailItemsPerPage,tmpObj)){ ---> var  <--- maxItemsPerPage;if(tmpObj.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMaxMailItemsPerPage]);} ---> var  <--- prefItemsPerPage;if(tmpObj.attrs[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaCos.A_zimbraPrefSkin]){ ---> var  <--- arr=tmpObj.attrs[ZaCos.A_zimbraAvailableSkin]

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaCos.A_zimbraAvailableSkin]]; ---> var  <--- cnt=arr.length;var found=false

[WARNING] Try to use a single 'var' statement per scope.
];var cnt=arr.length; ---> var  <--- found=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var found=false;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
parentPath){var Tis=[]; ---> var  <--- count=this.countAllAccounts();if(

[WARNING] Try to use a single 'var' statement per scope.
);if(count>0){ ---> var  <--- accountTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
);if(count>0){ ---> var  <--- domainTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.hasGlobalDomainListAccess()){ ---> var  <--- domainNameList=ZaApp.getInstance()._domainNameList;

[WARNING] Try to use a single 'var' statement per scope.
domainNameList&&domainNameList instanceof Array){for( ---> var  <--- i=0;i<domainNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
+"=*"+target+"*)";}} ---> var  <--- params={query:query,types:[

[WARNING] Try to use a single 'var' statement per scope.
window,defaultParams.callback);}} ---> var  <--- response=ZaSearch.searchDirectory(params);if

[WARNING] Try to use a single 'var' statement per scope.
().Body:response.Body; ---> var  <--- searchDirectoryResponse=responseBody&&responseBody.SearchDirectoryResponse;var list

[WARNING] Try to use a single 'var' statement per scope.
var searchDirectoryResponse=responseBody&&responseBody.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(ZaDomain);if(

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_domainName]); ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_AuthLdapURL]){ ---> var  <--- temp=tmpObj.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
"n",ZaDomain.A_zimbraPasswordChangeListener);}} ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
,ZaDomain.A_zimbraPasswordChangeListener);}}var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraVirtualHostname] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraVirtualHostname]

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraVirtualHostname].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraMailAddressValidationRegex] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraMailAddressValidationRegex]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraMailAddressValidationRegex] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraMailAddressValidationRegex].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraMailAddressValidationRegex].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraMailAddressValidationRegex].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLoginURLAllowedUA] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedUA]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLoginURLAllowedUA] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedUA].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedUA].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedUA].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLogoutURLAllowedUA] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedUA].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedUA].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLoginURLAllowedIP] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedIP]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLoginURLAllowedIP] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedIP].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedIP].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedIP].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLogoutURLAllowedIP] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedIP].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedIP].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
("n",ZaDomain.A_zimbraDomainAggregateQuotaPolicy);} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_CREATE_DOMAIN}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
 in tmpDomainObj[ZaDomain.A2_gal_sync_accounts_set]){ ---> var  <--- tmpObj=tmpDomainObj[ZaDomain.A2_gal_sync_accounts_set][i

[WARNING] Try to use a single 'var' statement per scope.
tmpObj[ZaDomain.A2_new_external_gal_ds_name])){ ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
&&tmpObj[ZaDomain.A_mailHost]){ ---> var  <--- createInternalDSDoc=soapDoc.set("CreateGalSyncAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
&&tmpObj[ZaDomain.A_mailHost]){ ---> var  <--- createExternalDSDoc=soapDoc.set("CreateGalSyncAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
,ZaDataSource.A_zimbraDataSourcePollingInterval);}try{ ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.BUSY_CREATING_GALDS,showBusy:true}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
;lastException=ex;}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;}}

[WARNING] Try to use a single 'var' statement per scope.
"CheckAuthConfigRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("a",obj.

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",ZaDomain.A_AuthMech); ---> var  <--- temp=obj.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
,obj[ZaDomain.A_AuthTestPassword]); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
var cnt=permsToRevoke.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- folderActionRequest=soapDoc.set("FolderActionRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
"FolderActionRequest",null,null,"urn:zimbraMail"); ---> var  <--- actionEl=soapDoc.set("action","",

[WARNING] Try to use a single 'var' statement per scope.
"FolderActionRequest",null,null,"urn:zimbraMail"); ---> var  <--- actionEl=soapDoc.set("action","",

[WARNING] Try to use a single 'var' statement per scope.
actionEl.setAttribute("op","grant"); ---> var  <--- grantEl=soapDoc.set("grant","",

[WARNING] Try to use a single 'var' statement per scope.
("d",obj.name);} ---> var  <--- perms="";for(var a in obj

[WARNING] Try to use a single 'var' statement per scope.
;}var perms="";for( ---> var  <--- a in obj.acl){if(obj

[WARNING] Try to use a single 'var' statement per scope.
"CheckGalConfigRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("a",ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",ZaDomain.A_zimbraGalMode); ---> var  <--- temp=obj.attrs[ZaDomain.A_GalLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_zimbraGalSyncLdapURL]){ ---> var  <--- temp=obj.attrs[ZaDomain.A_zimbraGalSyncLdapURL]

[WARNING] The variable temp has already been declared in the same scope...
attrs[ZaDomain.A_zimbraGalSyncLdapURL]){var  ---> temp <--- =obj.attrs[ZaDomain.A_zimbraGalSyncLdapURL].

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("action","sync"); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
"CheckGalConfigRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("a",ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",ZaDomain.A_zimbraGalMode); ---> var  <--- temp=obj.attrs[ZaDomain.A_GalLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("action","search"); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_gal_sync_accounts_set])){for( ---> var  <--- i in tmpObj[ZaDomain.A2_gal_sync_accounts_set]){

[WARNING] Try to use a single 'var' statement per scope.
 in tmpObj[ZaDomain.A2_gal_sync_accounts_set]){ ---> var  <--- newGalAccount=tmpObj[ZaDomain.A2_gal_sync_accounts_set][i

[WARNING] Try to use a single 'var' statement per scope.
&&newGalAccount[ZaDomain.A_mailHost]){ ---> var  <--- createInternalDSDoc=soapDoc.set("CreateGalSyncAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
&&newGalAccount[ZaDomain.A_mailHost]){ ---> var  <--- createExternalDSDoc=soapDoc.set("CreateGalSyncAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_gal_sync_accounts])){for( ---> var  <--- i in tmpObj[ZaDomain.A2_gal_sync_accounts]){

[WARNING] The variable i has already been declared in the same scope...
.A2_gal_sync_accounts])){for(var  ---> i <---  in tmpObj[ZaDomain.A2_gal_sync_accounts]){var 

[WARNING] Try to use a single 'var' statement per scope.
 in tmpObj[ZaDomain.A2_gal_sync_accounts]){ ---> var  <--- currentSyncAccount=tmpObj[ZaDomain.A2_gal_sync_accounts][i

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){ ---> var  <--- modifyDSDoc=soapDoc.set("ModifyDataSourceRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
[i].id,modifyDSDoc); ---> var  <--- ds=soapDoc.set("dataSource",null,

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_zimbra_ds].id); ---> var  <--- attr=soapDoc.set("a",currentSyncAccount[

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){ ---> var  <--- modifyDSDoc=soapDoc.set("ModifyDataSourceRequest",null,

[WARNING] The variable modifyDSDoc has already been declared in the same scope...
attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){var  ---> modifyDSDoc <--- =soapDoc.set("ModifyDataSourceRequest",null,null

[WARNING] Try to use a single 'var' statement per scope.
[i].id,modifyDSDoc); ---> var  <--- ds=soapDoc.set("dataSource",null,

[WARNING] The variable ds has already been declared in the same scope...
i].id,modifyDSDoc);var  ---> ds <--- =soapDoc.set("dataSource",null,modifyDSDoc

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_ldap_ds].id); ---> var  <--- attr=soapDoc.set("a",currentSyncAccount[

[WARNING] The variable attr has already been declared in the same scope...
ZaAccount.A2_ldap_ds].id);var  ---> attr <--- =soapDoc.set("a",currentSyncAccount[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
ZaDataSource.A_zimbraDataSourcePollingInterval);}}}} ---> var  <--- modifyDomainDoc=soapDoc.set("ModifyDomainRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id,modifyDomainDoc); ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
,this.id,modifyDomainDoc);var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraGalMode]!=ZaDomain.GAL_Mode_internal){ ---> var  <--- temp=tmpObj.attrs[ZaDomain.A_GalLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.BUSY_CREATING_GALDS,showBusy:true}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
.A_AuthMech]==ZaDomain.AuthMech_ad){ ---> var  <--- temp=tmpObj.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
("n",ZaDomain.A_zimbraAuthLdapStartTlsEnabled);} ---> var  <--- temp=tmpObj.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] The variable temp has already been declared in the same scope...
"n",ZaDomain.A_zimbraAuthLdapStartTlsEnabled);}var  ---> temp <--- =tmpObj.attrs[ZaDomain.A_AuthLdapURL].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.modifySSOSettings(soapDoc,tmpObj); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_MODIFY_DOMAIN}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraVirtualHostname].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraVirtualHostname);}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
.A_zimbraVirtualHostname);}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLoginURLAllowedUA] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedUA]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLoginURLAllowedUA] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedUA].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedUA].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedUA].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
ix<cnt;ix++){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedUA);}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedUA);}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLogoutURLAllowedUA] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedUA].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedUA].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedUA].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
ix<cnt;ix++){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedUA);}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedUA);}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLoginURLAllowedIP] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedIP]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLoginURLAllowedIP] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLoginURLAllowedIP].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedIP].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedIP].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
ix<cnt;ix++){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLoginURLAllowedIP);}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
.A_zimbraWebClientLoginURLAllowedIP);}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP]

[WARNING] The variable cnt has already been declared in the same scope...
ZaDomain.A_zimbraWebClientLogoutURLAllowedIP] instanceof Array){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraWebClientLogoutURLAllowedIP].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedIP].length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] The variable ix has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedIP].length;for(var  ---> ix <--- =0;ix<cnt;ix++)

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
ix<cnt;ix++){var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraWebClientLogoutURLAllowedIP);}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
.A_zimbraWebClientLogoutURLAllowedIP);}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("onerror","stop"); ---> var  <--- modifyDomainDoc=soapDoc.set("ModifyDomainRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
"id",this.id,modifyDomainDoc); ---> var  <--- attr;if(tmpObj.attrs[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_zimbraAutoProvMode] instanceof Array){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraAutoProvMode]

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraAutoProvMode].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAutoProvAuthMech].length>0){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraAutoProvAuthMech]

[WARNING] The variable cnt has already been declared in the same scope...
A_zimbraAutoProvAuthMech].length>0){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraAutoProvAuthMech].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraAutoProvAuthMech].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
.A_zimbraAutoProvAuthMech].length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAutoProvAttrMap].length>0){ ---> var  <--- cnt=tmpObj.attrs[ZaDomain.A_zimbraAutoProvAttrMap]

[WARNING] The variable cnt has already been declared in the same scope...
A_zimbraAutoProvAttrMap].length>0){var  ---> cnt <--- =tmpObj.attrs[ZaDomain.A_zimbraAutoProvAttrMap].

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraAutoProvAttrMap].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
.A_zimbraAutoProvAttrMap].length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
getArray().length>0){ ---> var  <--- modifyServerDoc=null;var selectedList=tmpObj[ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
>0){var modifyServerDoc=null; ---> var  <--- selectedList=tmpObj[ZaDomain.A2_zimbraAutoProvSelectedServerList].getArray

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_zimbraAutoProvSelectedServerList].getArray(); ---> var  <--- serverList=tmpObj[ZaDomain.A2_zimbraAutoProvServerList];var 

[WARNING] Try to use a single 'var' statement per scope.
serverList=tmpObj[ZaDomain.A2_zimbraAutoProvServerList]; ---> var  <--- cnt=selectedList.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
=tmpObj[ZaDomain.A2_zimbraAutoProvServerList];var  ---> cnt <--- =selectedList.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=selectedList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=selectedList.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- server=null;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
){var server=null;for( ---> var  <--- j=0;j<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
];}}if(server){ ---> var  <--- scheduledDomains=server.attrs[ZaServer.A_zimbraAutoProvScheduledDomains]

[WARNING] Try to use a single 'var' statement per scope.
"id",server.id,modifyServerDoc); ---> var  <--- isExist=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var isExist=false;for( ---> var  <--- i=0;scheduledDomains&&i<scheduledDomains.

[WARNING] The variable i has already been declared in the same scope...
;var isExist=false;for(var  ---> i <--- =0;scheduledDomains&&i<scheduledDomains.length

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.BUSY_MODIFY_DOMAIN,showBusy:true}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
;lastException=ex;}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;var resp

[WARNING] Try to use a single 'var' statement per scope.
var batchResp=respObj.Body.BatchResponse; ---> var  <--- resp=batchResp.ModifyDomainResponse[0];this

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_MODIFY_DOMAIN_STATUS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("onerror","stop"); ---> var  <--- mods=tmods;if(ZaItem.modifyMethodsExt.

[WARNING] Try to use a single 'var' statement per scope.
if(ZaItem.modifyMethodsExt.ZaDomain){ ---> var  <--- methods=ZaItem.modifyMethodsExt.ZaDomain;var cnt

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaItem.modifyMethodsExt.ZaDomain; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
,tmpObj,soapDoc);}}} ---> var  <--- modifyDomainDoc=soapDoc.set("ModifyDomainRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
this.id,modifyDomainDoc);for( ---> var  <--- aname in mods){gotSomething=true;if

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] The variable cnt has already been declared in the same scope...
mods[aname] instanceof Array){var  ---> cnt <--- =mods[aname].length;if(

[WARNING] Try to use a single 'var' statement per scope.
].length;if(cnt){ ---> var  <--- nonemptyElements=false;for(var ix=0

[WARNING] Try to use a single 'var' statement per scope.
){var nonemptyElements=false;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- attr=null;if(mods[aname]

[WARNING] Try to use a single 'var' statement per scope.
;}else{nonemptyElements=true;} ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
}else{nonemptyElements=true;}var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
);nonemptyElements=true;}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
;nonemptyElements=true;}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!nonemptyElements){ ---> var  <--- attr=soapDoc.set("a","",

[WARNING] The variable attr has already been declared in the same scope...
}}if(!nonemptyElements){var  ---> attr <--- =soapDoc.set("a","",modifyDomainDoc

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a","",

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a","",modifyDomainDoc

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_gal_sync_accounts])){for( ---> var  <--- i in tmpObj[ZaDomain.A2_gal_sync_accounts]){

[WARNING] The variable i has already been declared in the same scope...
.A2_gal_sync_accounts])){for(var  ---> i <---  in tmpObj[ZaDomain.A2_gal_sync_accounts]){var 

[WARNING] Try to use a single 'var' statement per scope.
 in tmpObj[ZaDomain.A2_gal_sync_accounts]){ ---> var  <--- currentGalAccount=tmpObj[ZaDomain.A2_gal_sync_accounts][i

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){ ---> var  <--- modifyDSDoc=soapDoc.set("ModifyDataSourceRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
[i].id,modifyDSDoc); ---> var  <--- ds=soapDoc.set("dataSource",null,

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_zimbra_ds].id); ---> var  <--- attr=soapDoc.set("a",currentGalAccount[

[WARNING] The variable attr has already been declared in the same scope...
ZaAccount.A2_zimbra_ds].id);var  ---> attr <--- =soapDoc.set("a",currentGalAccount[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){ ---> var  <--- modifyDSDoc=soapDoc.set("ModifyDataSourceRequest",null,

[WARNING] The variable modifyDSDoc has already been declared in the same scope...
attrs[ZaDataSource.A_zimbraDataSourcePollingInterval]){var  ---> modifyDSDoc <--- =soapDoc.set("ModifyDataSourceRequest",null,null

[WARNING] Try to use a single 'var' statement per scope.
[i].id,modifyDSDoc); ---> var  <--- ds=soapDoc.set("dataSource",null,

[WARNING] The variable ds has already been declared in the same scope...
i].id,modifyDSDoc);var  ---> ds <--- =soapDoc.set("dataSource",null,modifyDSDoc

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_ldap_ds].id); ---> var  <--- attr=soapDoc.set("a",currentGalAccount[

[WARNING] The variable attr has already been declared in the same scope...
ZaAccount.A2_ldap_ds].id);var  ---> attr <--- =soapDoc.set("a",currentGalAccount[ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.BUSY_MODIFY_DOMAIN,showBusy:true}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
;lastException=ex;}}else{ ---> var  <--- batchResp=respObj.Body.BatchResponse;var resp

[WARNING] Try to use a single 'var' statement per scope.
var batchResp=respObj.Body.BatchResponse; ---> var  <--- resp=batchResp.ModifyDomainResponse[0];this

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("allServers","1");} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- isAsyncMode=callback?true:false;if(

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_QUOTA}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
resp=resp.Body.GetQuotaUsageResponse;} ---> var  <--- result={hasMore:false,mbxes:new 

[WARNING] Try to use a single 'var' statement per scope.
{result.hasMore=resp.more; ---> var  <--- accounts=resp.account;var accountArr=new 

[WARNING] Try to use a single 'var' statement per scope.
more;var accounts=resp.account; ---> var  <--- accountArr=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
accountArr=new Array();for( ---> var  <--- i=0;i<accounts.length;

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_GalLdapURL]){ ---> var  <--- temp=this.attrs[ZaDomain.A_GalLdapURL]

[WARNING] The variable temp has already been declared in the same scope...
attrs[ZaDomain.A_GalLdapURL]){var  ---> temp <--- =this.attrs[ZaDomain.A_GalLdapURL];

[WARNING] Try to use a single 'var' statement per scope.
[0].acl.grant){ ---> var  <--- grants=response.folder[0].acl

[WARNING] Try to use a single 'var' statement per scope.
folder[0].acl.grant; ---> var  <--- cnt=grants.length;this[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
.A_allNotebookACLS]=[];for( ---> var  <--- gi=0;gi<cnt;gi++

[WARNING] Try to use a single 'var' statement per scope.
;gi<cnt;gi++){ ---> var  <--- grant=grants[gi];var grantObj=

[WARNING] Try to use a single 'var' statement per scope.
{var grant=grants[gi]; ---> var  <--- grantObj={r:grant.perm.indexOf

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("applyConfig","false"); ---> var  <--- elBy=soapDoc.set("domain",val)

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:(ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_DOMAIN}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
null,false);}}else{ ---> var  <--- resp=respObj.Body.GetDomainResponse;this.

[WARNING] Try to use a single 'var' statement per scope.
.length;i++){try{ ---> var  <--- galSyncAccount=new ZaAccount();galSyncAccount.load

[WARNING] Try to use a single 'var' statement per scope.
create("GetFolderRequest","urn:zimbraMail",null); ---> var  <--- getFolderCommand=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var getFolderCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
this.attrs[ZaDomain.A_zimbraNotebookAccount]; ---> var  <--- folderEl=soapDoc.set("folder","")

[WARNING] Try to use a single 'var' statement per scope.
"CheckDomainMXRecordRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("domain",obj.

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by","id"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:(ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
function(){var total=0; ---> var  <--- accountCountsByCoses=this.getAccountCountsByCoses();if(

[WARNING] Try to use a single 'var' statement per scope.
accountCountsByCoses.length>0){for( ---> var  <--- i=0;i<accountCountsByCoses.length;

[WARNING] Try to use a single 'var' statement per scope.
<accountCountsByCoses.length;i++){ ---> var  <--- count=accountCountsByCoses[i]._content;total

[WARNING] Try to use a single 'var' statement per scope.
"CountAccountRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("domain",this.

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by","name"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_COUNT_ACCOUNTS}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
ZaRequestMgr.invoke(params,reqMgrParams); ---> var  <--- accountCountsByCoses=resp.Body.CountAccountResponse.cos;

[WARNING] Try to use a single 'var' statement per scope.
accountCountsByCoses.length>0){for( ---> var  <--- i=0;i<accountCountsByCoses.length;

[WARNING] Try to use a single 'var' statement per scope.
<accountCountsByCoses.length;i++){ ---> var  <--- aCosName=accountCountsByCoses[i].name;if

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts];for( ---> var  <--- i=0;i<cosMaxAccounts.length;

[WARNING] Try to use a single 'var' statement per scope.
<cosMaxAccounts.length;i++){ ---> var  <--- val=cosMaxAccounts[i].split(":"

[WARNING] Try to use a single 'var' statement per scope.
[i].split(":"); ---> var  <--- cos=ZaCos.getCosById(val[0]

[WARNING] Try to use a single 'var' statement per scope.
0]]));return;} ---> var  <--- n=cos.name;this[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
this.getUsedAccounts(cosName,refresh); ---> var  <--- max=this.getMaxAccounts(cosName,refresh)

[WARNING] Try to use a single 'var' statement per scope.
(){var types=[]; ---> var  <--- cosMaxAccounts=this.attrs[ZaDomain.A_zimbraDomainCOSMaxAccounts]

[WARNING] Try to use a single 'var' statement per scope.
cosMaxAccounts.length>0){for( ---> var  <--- i=0;i<cosMaxAccounts.length;

[WARNING] Try to use a single 'var' statement per scope.
<cosMaxAccounts.length;i++){ ---> var  <--- val=cosMaxAccounts[i].split(":"

[WARNING] Try to use a single 'var' statement per scope.
cosMaxAccounts.length>0){for( ---> var  <--- i=0;i<cosMaxAccounts.length;

[WARNING] Try to use a single 'var' statement per scope.
<cosMaxAccounts.length;i++){ ---> var  <--- val=cosMaxAccounts[i].split(":"

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchListController(); ---> var  <--- busyId=Dwt.getNextId();var callback

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- callback=new AjxCallback(controller,controller.searchCallback

[WARNING] Try to use a single 'var' statement per scope.
});controller._currentQuery=""; ---> var  <--- searchTypes=[ZaSearch.ACCOUNTS,ZaSearch.DLS

[WARNING] Try to use a single 'var' statement per scope.
standardAttributes);controller._currentPageNum=1; ---> var  <--- searchParams={query:controller._currentQuery,domain

[WARNING] Try to use a single 'var' statement per scope.
.searchDirectory(searchParams);}else{ ---> var  <--- currentController=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- newAlias=instance.attrs[ZaDomain.A_domainName]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaDomain.A_domainName]; ---> var  <--- targetName=instance[ZaDomain.A2_zimbraDomainAliasTarget];try

[WARNING] Try to use a single 'var' statement per scope.
instance[ZaDomain.A2_zimbraDomainAliasTarget];try{ ---> var  <--- targetObj=ZaDomain.getTargetDomainByName(targetName);if

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraMailCatchAllForwardingAddress]="@"+targetName; ---> var  <--- soapDoc=AjxSoapDoc.create("CreateDomainRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaDomain.A_domainName]); ---> var  <--- attrNames=[ZaDomain.A_domainType,ZaDomain.A_zimbraDomainAliasTargetId

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraMailCatchAllAddress,ZaDomain.A_zimbraMailCatchAllForwardingAddress];for( ---> var  <--- i=0;i<attrNames.length;

[WARNING] Try to use a single 'var' statement per scope.
<attrNames.length;i++){ ---> var  <--- aname=attrNames[i];if(this

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname]!=null){ ---> var  <--- attr=soapDoc.set("a",this.

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",aname);}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_CREATE_DOMAIN}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- targetName=instance[ZaDomain.A2_zimbraDomainAliasTarget];if

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_zimbraMailCatchAllForwardingAddress])){ ---> var  <--- targetObj=ZaDomain.getTargetDomainByName(targetName);if

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_zimbraMailCatchAllForwardingAddress]="@"+targetName; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyDomainRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- attrNames=[ZaDomain.A_zimbraDomainAliasTargetId,ZaDomain.A_description

[WARNING] Try to use a single 'var' statement per scope.
A_description,ZaDomain.A_zimbraMailCatchAllForwardingAddress];for( ---> var  <--- i=0;i<attrNames.length;

[WARNING] Try to use a single 'var' statement per scope.
<attrNames.length;i++){ ---> var  <--- aname=attrNames[i];if(this

[WARNING] Try to use a single 'var' statement per scope.
.attrs[aname]!=null){ ---> var  <--- attr=soapDoc.set("a",this.

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",aname);}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_MODIFY_DOMAIN}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
targetName).getArray();for( ---> var  <--- i=0;i<domainList.length;

[WARNING] Try to use a single 'var' statement per scope.
<domainList.length;i++){ ---> var  <--- domain=domainList[i];if(targetName

[WARNING] Try to use a single 'var' statement per scope.
"GetAllEffectiveRightsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elGrantee=soapDoc.set("grantee",adminId)

[WARNING] Try to use a single 'var' statement per scope.
elGrantee.setAttribute("by","id"); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_EFFICIENT_DOMAIN_LIST}; ---> var  <--- domainNameList=[];try{var resp=

[WARNING] Try to use a single 'var' statement per scope.
;var domainNameList=[];try{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
GetAllEffectiveRightsResponse.Fault){returndomainNameList;} ---> var  <--- targets=resp.Body.GetAllEffectiveRightsResponse.target;

[WARNING] Try to use a single 'var' statement per scope.
.Body.GetAllEffectiveRightsResponse.target;for( ---> var  <--- i=0;i<targets.length;

[WARNING] Try to use a single 'var' statement per scope.
[i].entries){for( ---> var  <--- j=0;j<targets[i]

[WARNING] Try to use a single 'var' statement per scope.
.entries.length;j++){ ---> var  <--- entry=targets[i].entries[j

[WARNING] Try to use a single 'var' statement per scope.
entries[j].entry;for( ---> var  <--- k=0;k<entry.length;

[WARNING] Try to use a single 'var' statement per scope.
].right.length){for( ---> var  <--- j=0;j<targets[i]

[WARNING] The variable j has already been declared in the same scope...
.right.length){for(var  ---> j <--- =0;j<targets[i].

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("limit","-1"); ---> var  <--- query="";var types=[ZaSearch.

[WARNING] Try to use a single 'var' statement per scope.
,"-1");var query=""; ---> var  <--- types=[ZaSearch.ACCOUNTS,ZaSearch.DLS

[WARNING] Try to use a single 'var' statement per scope.
set("domain",this.name); ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;cmdParams.noAuthToken=true;try{ ---> var  <--- resp=command.invoke(cmdParams).Body

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("limit","1"); ---> var  <--- query="("+ZaDomain.A_zimbraDomainAliasTargetId+"="+

[WARNING] Try to use a single 'var' statement per scope.
+"="+this.id+")"; ---> var  <--- types=[ZaSearch.DOMAINS];soapDoc.

[WARNING] Try to use a single 'var' statement per scope.
"types",types.toString()); ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;cmdParams.noAuthToken=true;try{ ---> var  <--- resp=command.invoke(cmdParams).Body

[WARNING] Try to use a single 'var' statement per scope.
parentPath){var Tis=[]; ---> var  <--- count=this.countAllAccounts();if(

[WARNING] Try to use a single 'var' statement per scope.
);if(count>0){ ---> var  <--- accountTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
);if(count>0){ ---> var  <--- aliasTi=new ZaTreeItemData({text:ZaMsg.

[WARNING] Try to use a single 'var' statement per scope.
);ZaSearch._currentQuery="";} ---> var  <--- sortBy=(params.sortBy!=undefined)?

[WARNING] Try to use a single 'var' statement per scope.
?params.sortBy:ZaAccount.A_name; ---> var  <--- limit=(params.limit!=undefined)?

[WARNING] Try to use a single 'var' statement per scope.
?params.limit:ZaAccount.RESULTSPERPAGE; ---> var  <--- offset=(params.offset!=undefined)?

[WARNING] Try to use a single 'var' statement per scope.
undefined)?params.offset:"0"; ---> var  <--- sortAscending=(params.sortAscending!=null)?

[WARNING] Try to use a single 'var' statement per scope.
.maxResults.toString());} ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("limit","1"); ---> var  <--- query=["(",by,"=",val

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("query",query); ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;cmdParams.noAuthToken=true; ---> var  <--- resp=command.invoke(cmdParams).Body

[WARNING] Try to use a single 'var' statement per scope.
invoke(cmdParams).Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(ZaAccount);list.

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(null);list.

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(null);list.

[WARNING] Try to use a single 'var' statement per scope.
);list.loadFromJS(response); ---> var  <--- choices=new XFormChoices([],XFormChoices.

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();var dataCallback=

[WARNING] Try to use a single 'var' statement per scope.
;var params=new Object(); ---> var  <--- dataCallback=new AjxCallback(this,this.dynSelectDataCallback

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var extraLdapQuery=callArgs

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- extraLdapQuery=callArgs.extraLdapQuery;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
callback;var extraLdapQuery=callArgs.extraLdapQuery; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();var dataCallback=

[WARNING] Try to use a single 'var' statement per scope.
;var params=new Object(); ---> var  <--- dataCallback=new AjxCallback(this,this.dynSelectDataCallback

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var applyConfig=callArgs

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- applyConfig=callArgs.applyConfig;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
callback;var applyConfig=callArgs.applyConfig; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();var dataCallback=

[WARNING] Try to use a single 'var' statement per scope.
;var params=new Object(); ---> var  <--- dataCallback=new AjxCallback(this,this.dynSelectDataCallback

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.hasGlobalDomainListAccess()){ ---> var  <--- domainNameList=ZaApp.getInstance()._domainNameList;

[WARNING] Try to use a single 'var' statement per scope.
domainNameList&&domainNameList instanceof Array){for( ---> var  <--- i=0;i<domainNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();var dataCallback=

[WARNING] Try to use a single 'var' statement per scope.
;var params=new Object(); ---> var  <--- dataCallback=new AjxCallback(this,this.dynSelectDataCallback

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();var dataCallback=

[WARNING] Try to use a single 'var' statement per scope.
;var params=new Object(); ---> var  <--- dataCallback=new AjxCallback(this,this.dynSelectSearchCosesCallback

[WARNING] Try to use a single 'var' statement per scope.
(!ZaZimbraAdmin.hasGlobalCOSSListAccess()){ ---> var  <--- cosNameList=ZaApp.getInstance()._cosNameList;

[WARNING] Try to use a single 'var' statement per scope.
cosNameList.length==0){for( ---> var  <--- i=0;i<cosNameList.length;

[WARNING] Try to use a single 'var' statement per scope.
null)?limit:ZaAccount.RESULTSPERPAGE; ---> var  <--- offset=(pagenum-1)*limit;

[WARNING] Try to use a single 'var' statement per scope.
null)?attrs:ZaSearch.standardAttributes; ---> var  <--- params={query:query,offset:offset

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getCurrentController(); ---> var  <--- resp=ZaSearch.searchDirectory(params).Body

[WARNING] Try to use a single 'var' statement per scope.
searchDirectory(params).Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList(null);list.

[WARNING] Try to use a single 'var' statement per scope.
);list.loadFromJS(resp); ---> var  <--- searchTotal=resp.searchTotal;var numPages=Math

[WARNING] Try to use a single 'var' statement per scope.
);var searchTotal=resp.searchTotal; ---> var  <--- numPages=Math.ceil(searchTotal/limit)

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- retObj;retObj={};retObj[ZaItem

[WARNING] Try to use a single 'var' statement per scope.
retObj[ZaItem.SERVER]=0; ---> var  <--- batchResp=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
if(batchResp.CountObjectsResponse){for( ---> var  <--- i=0;i<batchResp.CountObjectsResponse.

[WARNING] Try to use a single 'var' statement per scope.
resp=batchResp.CountObjectsResponse[i]; ---> var  <--- type=resp.type;if(type==

[WARNING] Try to use a single 'var' statement per scope.
getObjectCountsCalback,{callback:callback}); ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror","continue");for( ---> var  <--- i=0;i<types.length;

[WARNING] Try to use a single 'var' statement per scope.
<types.length;i++){ ---> var  <--- type=types[i];var getCountDoc=

[WARNING] Try to use a single 'var' statement per scope.
{var type=types[i]; ---> var  <--- getCountDoc=soapDoc.set("CountObjectsRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
("type",type);}try{ ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
{var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.noAuthToken

[WARNING] Try to use a single 'var' statement per scope.
.DOMAINS,ZaSearch.COSES];} ---> var  <--- addedAddrFields=false;var addedAccResFields=false;var 

[WARNING] Try to use a single 'var' statement per scope.
COSES];}var addedAddrFields=false; ---> var  <--- addedAccResFields=false;var addedDLAliasFields=false;for

[WARNING] Try to use a single 'var' statement per scope.
addedAddrFields=false;var addedAccResFields=false; ---> var  <--- addedDLAliasFields=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
false;var addedDLAliasFields=false;for( ---> var  <--- i=0;i<types.length;

[WARNING] Try to use a single 'var' statement per scope.
.DOMAINS,ZaSearch.COSES];} ---> var  <--- addedAddrFields=false;var addedAccResFields=false;var 

[WARNING] Try to use a single 'var' statement per scope.
COSES];}var addedAddrFields=false; ---> var  <--- addedAccResFields=false;var addedDLAliasFields=false;for

[WARNING] Try to use a single 'var' statement per scope.
addedAddrFields=false;var addedAccResFields=false; ---> var  <--- addedDLAliasFields=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
false;var addedDLAliasFields=false;for( ---> var  <--- i=0;i<types.length;

[WARNING] Try to use a single 'var' statement per scope.
n=ZaSearch.escapeLdapQuery(n); ---> var  <--- orig=new RegExp("\\*"+n+"\\*"

[WARNING] Try to use a single 'var' statement per scope.
"\\*"+n+"\\*","g"); ---> var  <--- lReg=new RegExp("^\\s*\\(\\s*\\|");var rReg

[WARNING] Try to use a single 'var' statement per scope.
var lReg=new RegExp("^\\s*\\(\\s*\\|"); ---> var  <--- rReg=new RegExp("\\)\\s*$");var beginWithQuery

[WARNING] Try to use a single 'var' statement per scope.
var rReg=new RegExp("\\)\\s*$"); ---> var  <--- beginWithQuery=query.replace(orig,n+

[WARNING] Try to use a single 'var' statement per scope.
beginWithQuery.replace(rReg,""); ---> var  <--- endWithQuery=query.replace(orig,"*"+

[WARNING] Try to use a single 'var' statement per scope.
query.types!=null){for( ---> var  <--- i=0;i<query.types.

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getCurrentController(); ---> var  <--- accountName=params.name;var isPopupErrorDialog=params

[WARNING] Try to use a single 'var' statement per scope.
);var accountName=params.name; ---> var  <--- isPopupErrorDialog=params.popupError?true:false;

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.error_account_missing);returntrue;} ---> var  <--- params={query:["(mail=",accountName,

[WARNING] The variable params has already been declared in the same scope...
.error_account_missing);returntrue;}var  ---> params <--- ={query:["(mail=",accountName,")"

[WARNING] Try to use a single 'var' statement per scope.
],controller:currentController};try{ ---> var  <--- resp=ZaSearch.searchDirectory(params).Body

[WARNING] Try to use a single 'var' statement per scope.
,"ZaSearch.isAccountExist",null,false);} ---> var  <--- list=new ZaItemList(null);list.

[WARNING] Try to use a single 'var' statement per scope.
>0){if(isPopupErrorDialog){ ---> var  <--- acc=list.getArray()[0]

[WARNING] Try to use a single 'var' statement per scope.
ZaZimbraAdmin.URN,null);for( ---> var  <--- i=0;i<savedSearchArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<savedSearchArray.length;i++){ ---> var  <--- cSavedSearch=savedSearchArray[i];var el=

[WARNING] Try to use a single 'var' statement per scope.
{var cSavedSearch=savedSearchArray[i]; ---> var  <--- el=soapDoc.set("search",cSavedSearch.

[WARNING] Try to use a single 'var' statement per scope.
("name",cSavedSearch.name);} ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
}var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
);if(searchNameArr){for( ---> var  <--- i=0;i<searchNameArr.length;

[WARNING] Try to use a single 'var' statement per scope.
<searchNameArr.length;i++){ ---> var  <--- el=soapDoc.set("search","")

[WARNING] Try to use a single 'var' statement per scope.
,searchNameArr[i]);}} ---> var  <--- command=new ZmCsfeCommand();var cmdParams=

[WARNING] Try to use a single 'var' statement per scope.
}var command=new ZmCsfeCommand(); ---> var  <--- cmdParams=new Object();cmdParams.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
var respObj=resp._data||resp; ---> var  <--- searchResults=respObj.Body.GetAdminSavedSearchesResponse.search;

[WARNING] Try to use a single 'var' statement per scope.
search;if(searchResults){for( ---> var  <--- i=0;i<searchResults.length;

[WARNING] Try to use a single 'var' statement per scope.
(ZaSearchField.canSaveSearch())){ ---> var  <--- modifiedSearches=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
{var modifiedSearches=[];for( ---> var  <--- i=0;i<currentSavedSearches.length;

[WARNING] Try to use a single 'var' statement per scope.
<currentSavedSearches.length;i++){ ---> var  <--- currentName=currentSavedSearches[i].name;var 

[WARNING] Try to use a single 'var' statement per scope.
currentName=currentSavedSearches[i].name; ---> var  <--- currentContent=currentSavedSearches[i].query;if

[WARNING] Try to use a single 'var' statement per scope.
(ZaSearchField.canSaveSearch())){ ---> var  <--- savedSearchArr=[];for(var m=

[WARNING] Try to use a single 'var' statement per scope.
{var savedSearchArr=[];for( ---> var  <--- m=0;m<ZaSearch.getPredefinedSavedSearchesForAdminOnly(

[WARNING] Try to use a single 'var' statement per scope.
)[m]);}for( ---> var  <--- n=0;n<ZaSearch.getPredefinedSavedSearches(

[WARNING] Try to use a single 'var' statement per scope.
{return;}var regEx=/^(.+)#{3}JSON:(.+)#{3}(.+)$/; ---> var  <--- results=query.match(regEx);if

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
){query=results[1]; ---> eval <--- ("var jsonObj = "+results[2]);query

[WARNING] Try to use a single 'var' statement per scope.
{var d=parseInt(days); ---> var  <--- dateObj=new Date();var now=

[WARNING] Try to use a single 'var' statement per scope.
;var dateObj=new Date(); ---> var  <--- now=dateObj.getTime();dateObj.

[WARNING] Try to use a single 'var' statement per scope.
xmodel={items:[]}; ---> var  <--- basicItems=[{id:ZaSearchOption.A_basic_uid,

[WARNING] Try to use a single 'var' statement per scope.
A_objTypeAccountDomainAdmin,type:_STRING_});} ---> var  <--- objTypeItems=[{id:ZaSearchOption.A_objTypeAccount,

[WARNING] Try to use a single 'var' statement per scope.
.A_objTypeDomain,type:_STRING_}]; ---> var  <--- domainItems=[{id:ZaSearchOption.A_domainFilter,

[WARNING] Try to use a single 'var' statement per scope.
.A_domainList,type:_LIST_}]; ---> var  <--- serverItems=[{id:ZaSearchOption.A_serverListChecked,

[WARNING] Try to use a single 'var' statement per scope.
.A_serverList,type:_LIST_}]; ---> var  <--- advancedItems=[{id:ZaSearchOption.A_enableAccountLastLoginTime_From,

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraMailForwardingAddress,type:_STRING_}]; ---> var  <--- cosItems=[{id:ZaSearchOption.A_cosFilter,

[WARNING] Try to use a single 'var' statement per scope.
xmodel={items:[]}; ---> var  <--- basicFilterItems=[{id:ZaSearchOption.A_basic_uid,

[WARNING] Try to use a single 'var' statement per scope.
A_objTypeAccountDomainAdmin,type:_STRING_});} ---> var  <--- domainFilterItems=[{id:ZaSearchOption.A_domainFilter,

[WARNING] Try to use a single 'var' statement per scope.
.A_domainList,type:_LIST_}]; ---> var  <--- serverFilterItems=[{id:ZaSearchOption.A_serverListChecked,

[WARNING] Try to use a single 'var' statement per scope.
.A_serverList,type:_LIST_}]; ---> var  <--- loginItem=[{id:ZaSearchOption.A_enableAccountLastLoginTime_From,

[WARNING] Try to use a single 'var' statement per scope.
.A_accountLastLoginTime_To,type:_DATETIME_}]; ---> var  <--- cosFilterItems=[{id:ZaSearchOption.A_cosFilter,

[WARNING] Try to use a single 'var' statement per scope.
.A_cosList,type:_LIST_}]; ---> var  <--- extEmailItem=[{id:ZaSearchOption.A_zimbraMailForwardingAddress,

[WARNING] Try to use a single 'var' statement per scope.
:_STRING_,minLength:3}]; ---> var  <--- accountStatusItem=[{id:ZaSearchOption.A2_status_active,

[WARNING] Try to use a single 'var' statement per scope.
var marginTop=ZaSearchOptionView.HEADER_HEIGHT+8; ---> var  <--- accountStatusChoices=[{value:ZaAccount.ACCOUNT_STATUS_ACTIVE,

[WARNING] Try to use a single 'var' statement per scope.
getAccountStatusMsg(ZaAccount.ACCOUNT_STATUS_MAINTENANCE)}]; ---> var  <--- xform={numCols:2,width:150

[WARNING] Try to use a single 'var' statement per scope.
:"",items:[]}; ---> var  <--- basicItems=[{type:_TEXTFIELD_,ref:

[WARNING] Try to use a single 'var' statement per scope.
150,items:[]}]; ---> var  <--- i=basicItems.length;var adminOnlyItem={

[WARNING] Try to use a single 'var' statement per scope.
];var i=basicItems.length; ---> var  <--- adminOnlyItem={type:_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
);if(ZaSearchOption.A_objTypeAccountDomainAdmin){ ---> var  <--- domainAdminObjTypeItem={type:_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
.items.push(domainAdminObjTypeItem);} ---> var  <--- systemAccountOnlyItem={type:_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
].items.push(systemAccountOnlyItem); ---> var  <--- objTypeItems=[{type:_CHECKBOX_,ref:

[WARNING] Try to use a single 'var' statement per scope.
,visibilityChecks:["(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.RESOURCE_LIST_VIEW] || ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI])"]}]; ---> var  <--- domainFilterLabelWidth=50;var domainItems=[{type

[WARNING] Try to use a single 'var' statement per scope.
]}];var domainFilterLabelWidth=50; ---> var  <--- domainItems=[{type:_TEXTFIELD_,ref:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- serverItems=[{type:_GROUP_,width:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- cosItems=[{type:_TEXTFIELD_,ref:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- advancedItems=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
:"ZaSearchOptionOverview",items:[]}; ---> var  <--- basicFilterItem=[{type:_GROUP_,colSizes:

[WARNING] Try to use a single 'var' statement per scope.
items:[]}]}]; ---> var  <--- i=basicFilterItem[0].items.length

[WARNING] Try to use a single 'var' statement per scope.
basicFilterItem[0].items.length; ---> var  <--- adminOnlyItem={type:_WIZ_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
);if(ZaSearchOption.A_objTypeAccountDomainAdmin){ ---> var  <--- domainAdminObjTypeItem={type:_WIZ_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
.items.push(domainAdminObjTypeItem);} ---> var  <--- systemAccountOnlyItem={type:_WIZ_CHECKBOX_,ref:ZaSearchOption

[WARNING] Try to use a single 'var' statement per scope.
].items.push(systemAccountOnlyItem); ---> var  <--- domainFilterItems=[{type:_TEXTFIELD_,ref:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- serverFilterItems=[{type:_GROUP_,width:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- cosFilterItems=[{type:_TEXTFIELD_,ref:

[WARNING] Try to use a single 'var' statement per scope.
:ZaSearchBuilderController.filterSelectionListener}]}]; ---> var  <--- loginFilterItems=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
:_LEFT_}]}]}]; ---> var  <--- extMailFilterItem=[{type:_OUTPUT_,value:

[WARNING] Try to use a single 'var' statement per scope.
],visibilityChecks:[]}]; ---> var  <--- statusFilterItem=[{type:_CHECKBOX_,ref:

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(10); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
pos=mask.indexOf("/"); ---> var  <--- lastPos=mask.lastIndexOf("/");if

[WARNING] Try to use a single 'var' statement per scope.
lastPos){returnZaServer.ERR_NOT_CIDR;} ---> var  <--- numNetworkBits=parseInt(mask.substr(lastPos+

[WARNING] Try to use a single 'var' statement per scope.
1){returnZaServer.ERR_NOT_CIDR;} ---> var  <--- addrString=mask.substr(0,lastPos)

[WARNING] Try to use a single 'var' statement per scope.
mask.substr(0,lastPos); ---> var  <--- addrNumber=ZaServer.octetsToLong(addrString);if

[WARNING] Try to use a single 'var' statement per scope.
0){returnZaServer.ERR_NOT_CIDR;} ---> var  <--- maskNumber=0;var lastIndex=32-numNetworkBits

[WARNING] Try to use a single 'var' statement per scope.
.ERR_NOT_CIDR;}var maskNumber=0; ---> var  <--- lastIndex=32-numNetworkBits;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var lastIndex=32-numNetworkBits;for( ---> var  <--- j=31;j>=lastIndex;j--

[WARNING] Try to use a single 'var' statement per scope.
pos=mask.indexOf("/"); ---> var  <--- lastPos=mask.lastIndexOf("/");var 

[WARNING] Try to use a single 'var' statement per scope.
lastPos=mask.lastIndexOf("/"); ---> var  <--- numNetworkBits=parseInt(mask.substr(lastPos+

[WARNING] Try to use a single 'var' statement per scope.
numNetworkBits=ZaServer.iGetNumNetBits(mask); ---> var  <--- lastPos=mask.lastIndexOf("/");var 

[WARNING] Try to use a single 'var' statement per scope.
lastPos=mask.lastIndexOf("/"); ---> var  <--- addrString=mask.substr(0,lastPos)

[WARNING] Try to use a single 'var' statement per scope.
mask.substr(0,lastPos); ---> var  <--- addrNumber=ZaServer.octetsToLong(addrString);var 

[WARNING] Try to use a single 'var' statement per scope.
addrNumber=ZaServer.octetsToLong(addrString); ---> var  <--- maskNumber=0;var lastIndex=32-numNetworkBits

[WARNING] Try to use a single 'var' statement per scope.
(addrString);var maskNumber=0; ---> var  <--- lastIndex=32-numNetworkBits;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var lastIndex=32-numNetworkBits;for( ---> var  <--- j=31;j>=lastIndex;j--

[WARNING] Try to use a single 'var' statement per scope.
.pow(2,j);} ---> var  <--- firstAddr=ZaServer.applyMask(addrNumber,maskNumber)

[WARNING] Try to use a single 'var' statement per scope.
(patrn.test(addrString)){ ---> var  <--- temp1=addrString.indexOf(".");var 

[WARNING] Try to use a single 'var' statement per scope.
temp1=addrString.indexOf("."); ---> var  <--- temp2=addrString.indexOf(":");var 

[WARNING] Try to use a single 'var' statement per scope.
temp2=addrString.indexOf(":"); ---> var  <--- temp3=addrString.indexOf("::");if

[WARNING] Try to use a single 'var' statement per scope.
;if(temp3!=-1){ ---> var  <--- octets=addrString.split("::");if

[WARNING] Try to use a single 'var' statement per scope.
return-1;}else{for( ---> var  <--- j=0;j<octetsub0.length;

[WARNING] Try to use a single 'var' statement per scope.
{return-1;}}for( ---> var  <--- j=0;j<octetsub1.length;

[WARNING] The variable j has already been declared in the same scope...
return-1;}}for(var  ---> j <--- =0;j<octetsub1.length;j

[WARNING] Try to use a single 'var' statement per scope.
].split(".");for( ---> var  <--- j=0;j<octetsub.length;

[WARNING] The variable j has already been declared in the same scope...
.split(".");for(var  ---> j <--- =0;j<octetsub.length;j

[WARNING] Try to use a single 'var' statement per scope.
}if(temp1!=-1){ ---> var  <--- octets=addrString.split(".");if

[WARNING] The variable octets has already been declared in the same scope...
if(temp1!=-1){var  ---> octets <--- =addrString.split(".");if(

[WARNING] Try to use a single 'var' statement per scope.
return-1;}else{for( ---> var  <--- i=0;i<octets.length;

[WARNING] Try to use a single 'var' statement per scope.
<octets.length;i++){ ---> var  <--- j=octets[i];if(j

[WARNING] The variable j has already been declared in the same scope...
octets.length;i++){var  ---> j <--- =octets[i];if(j>

[WARNING] Try to use a single 'var' statement per scope.
)){return-1;}} ---> var  <--- addrNumber=Math.pow(256,3)

[WARNING] Try to use a single 'var' statement per scope.
}if(temp2!=-1){ ---> var  <--- octets=addrString.split(":");if

[WARNING] The variable octets has already been declared in the same scope...
if(temp2!=-1){var  ---> octets <--- =addrString.split(":");if(

[WARNING] Try to use a single 'var' statement per scope.
return-1;}else{for( ---> var  <--- i=0;i<octets.length;

[WARNING] The variable i has already been declared in the same scope...
-1;}else{for(var  ---> i <--- =0;i<octets.length;i

[WARNING] Try to use a single 'var' statement per scope.
.pow(256,3)); ---> var  <--- ip2=Math.floor((addrNumber%Math

[WARNING] Try to use a single 'var' statement per scope.
.pow(256,2)); ---> var  <--- ip3=Math.floor(((addrNumber%

[WARNING] Try to use a single 'var' statement per scope.
.pow(256,1)); ---> var  <--- ip4=Math.floor((((addrNumber

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("applyConfig","false"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
attrs.join(","));} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
(params,reqMgrParams);}else{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAllServersResponse; ---> var  <--- list=new ZaItemList(ZaServer);list.

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("applyConfig","false"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
attrs.join(","));} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ALL_SERVER}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAllServersResponse; ---> var  <--- list=new ZaItemList(ZaServer);list.

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraServiceInstalled];if(svcInstalled){ ---> var  <--- enabled=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
{var enabled=[];for( ---> var  <--- i=0;i<svcInstalled.length;

[WARNING] Try to use a single 'var' statement per scope.
<svcInstalled.length;i++){ ---> var  <--- service=svcInstalled[i];if(service

[WARNING] Try to use a single 'var' statement per scope.
push(service);}}for( ---> var  <--- i=0;i<ZaServer.servlets.

[WARNING] The variable i has already been declared in the same scope...
(service);}}for(var  ---> i <--- =0;i<ZaServer.servlets.length

[WARNING] Try to use a single 'var' statement per scope.
.servlets.length;i++){ ---> var  <--- service=ZaServer.servlets[i];if

[WARNING] The variable service has already been declared in the same scope...
servlets.length;i++){var  ---> service <--- =ZaServer.servlets[i];if(

[WARNING] Try to use a single 'var' statement per scope.
enabled.push(service);}} ---> var  <--- dirty=false;if(this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaServer.A_zimbraServiceEnabled]){ ---> var  <--- prevEnabled=AjxUtil.isString(this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
;if(!dirty){for( ---> var  <--- i=0;i<prevEnabled.length;

[WARNING] The variable i has already been declared in the same scope...
if(!dirty){for(var  ---> i <--- =0;i<prevEnabled.length;i

[WARNING] Try to use a single 'var' statement per scope.
<prevEnabled.length;i++){ ---> var  <--- service=prevEnabled[i];if(service

[WARNING] The variable service has already been declared in the same scope...
prevEnabled.length;i++){var  ---> service <--- =prevEnabled[i];if(service==

[WARNING] Try to use a single 'var' statement per scope.
(tmpObj[ZaServer.A_RemovedVolumes]){ ---> var  <--- cnt=tmpObj[ZaServer.A_RemovedVolumes].length

[WARNING] Try to use a single 'var' statement per scope.
ZaServer.A_RemovedVolumes].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
.A_RemovedVolumes].length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
(tmpObj[ZaServer.A_Volumes]){ ---> var  <--- tmpVolumeMap=new Array();var cnt=

[WARNING] Try to use a single 'var' statement per scope.
{var tmpVolumeMap=new Array(); ---> var  <--- cnt=tmpObj[ZaServer.A_Volumes].length

[WARNING] The variable cnt has already been declared in the same scope...
var tmpVolumeMap=new Array();var  ---> cnt <--- =tmpObj[ZaServer.A_Volumes].length;

[WARNING] Try to use a single 'var' statement per scope.
ZaServer.A_Volumes].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
.A_Volumes].length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
}cnt=tmpVolumeMap.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=tmpVolumeMap.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
i][ZaServer.A_VolumeRootPath]){ ---> var  <--- newId=this.createVolume(tmpVolumeMap[i]

[WARNING] Try to use a single 'var' statement per scope.
if(newId>0){for( ---> var  <--- key in ZaServer.currentkeys){if(tmpObj

[WARNING] Try to use a single 'var' statement per scope.
;}}}}}cnt--; ---> var  <--- cnt2=this[ZaServer.A_Volumes].length

[WARNING] Try to use a single 'var' statement per scope.
ZaServer.A_Volumes].length;for( ---> var  <--- i=cnt;i>=0;i--

[WARNING] The variable i has already been declared in the same scope...
.A_Volumes].length;for(var  ---> i <--- =cnt;i>=0;i--)

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- newVolume=tmpVolumeMap[i];var oldVolume;

[WARNING] Try to use a single 'var' statement per scope.
{var newVolume=tmpVolumeMap[i]; ---> var  <--- oldVolume;for(var ix=0;ix

[WARNING] Try to use a single 'var' statement per scope.
[i];var oldVolume;for( ---> var  <--- ix=0;ix<cnt2;ix++

[WARNING] Try to use a single 'var' statement per scope.
==newVolume[ZaServer.A_VolumeId]){ ---> var  <--- modified=false;for(var attr in oldVolume

[WARNING] Try to use a single 'var' statement per scope.
){var modified=false;for( ---> var  <--- attr in oldVolume){if(oldVolume[attr

[WARNING] Try to use a single 'var' statement per scope.
1);}}}}for( ---> var  <--- key in ZaServer.currentkeys){if(tmpObj

[WARNING] The variable key has already been declared in the same scope...
);}}}}for(var  ---> key <---  in ZaServer.currentkeys){if(tmpObj[

[WARNING] Try to use a single 'var' statement per scope.
]],key);}}} ---> var  <--- hasSomething=false;var soapDoc=AjxSoapDoc.create

[WARNING] Try to use a single 'var' statement per scope.
;}}}var hasSomething=false; ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyServerRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
set("id",this.id); ---> var  <--- mods=new Object();for(var 

[WARNING] Try to use a single 'var' statement per scope.
mods=new Object();for( ---> var  <--- a in tmpObj.attrs){if(a

[WARNING] Try to use a single 'var' statement per scope.
(",").valueOf()){ ---> var  <--- array=tmpObj.attrs[a];if

[WARNING] Try to use a single 'var' statement per scope.
array.length>0){for( ---> var  <--- i=0;i<array.length;

[WARNING] The variable i has already been declared in the same scope...
.length>0){for(var  ---> i <--- =0;i<array.length;i

[WARNING] Try to use a single 'var' statement per scope.
<array.length;i++){ ---> var  <--- attr=soapDoc.set("a",array[

[WARNING] The variable attr has already been declared in the same scope...
array.length;i++){var  ---> attr <--- =soapDoc.set("a",array[i

[WARNING] Try to use a single 'var' statement per scope.
"n",a);}}else{ ---> var  <--- attr=soapDoc.set("a");attr

[WARNING] The variable attr has already been declared in the same scope...
,a);}}else{var  ---> attr <--- =soapDoc.set("a");attr.

[WARNING] Try to use a single 'var' statement per scope.
,a);}}}else{ ---> var  <--- attr=soapDoc.set("a",tmpObj.

[WARNING] The variable attr has already been declared in the same scope...
a);}}}else{var  ---> attr <--- =soapDoc.set("a",tmpObj.attrs

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(hasSomething){ ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_MODIFY_SERVER}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
var _by=by?by:"id"; ---> var  <--- _val=val?val:this.id;

[WARNING] Try to use a single 'var' statement per scope.
=val?val:this.id; ---> var  <--- soapDoc=AjxSoapDoc.create("GetServerRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetServerRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("server",_val)

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
(ZaServer.MANAGE_VOLUME_RIGHT,this)){ ---> var  <--- getAllVols=soapDoc.set("GetAllVolumesRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- getCurrentVols=soapDoc.set("GetCurrentVolumesRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
,null,ZaZimbraAdmin.URN);} ---> var  <--- getAllVols=soapDoc.set("GetServerNIfsRequest",null,

[WARNING] The variable getAllVols has already been declared in the same scope...
null,ZaZimbraAdmin.URN);}var  ---> getAllVols <--- =soapDoc.set("GetServerNIfsRequest",null,null

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- server=soapDoc.set("server",_val,

[WARNING] Try to use a single 'var' statement per scope.
params.targetServer=this.id;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] The variable reqMgrParams has already been declared in the same scope...
.targetServer=this.id;}var  ---> reqMgrParams <--- ={controller:ZaApp.getInstance().

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_SERVER}; ---> var  <--- respObj=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
respObj.Body.BatchResponse.Fault){ ---> var  <--- fault=respObj.Body.BatchResponse.Fault;

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
"ZaServer.loadMethod",null,false);}} ---> var  <--- batchResp=respObj.Body.BatchResponse;if(

[WARNING] Try to use a single 'var' statement per scope.
){var NIs=resp.ni; ---> var  <--- cnt=NIs.length;this.nifs=

[WARNING] Try to use a single 'var' statement per scope.
this.nifs=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- ni={};ZaItem.prototype.initFromJS

[WARNING] Try to use a single 'var' statement per scope.
installed=[installed];}for( ---> var  <--- i=0;i<installed.length;

[WARNING] Try to use a single 'var' statement per scope.
<installed.length;i++){ ---> var  <--- service=installed[i];if(service

[WARNING] Try to use a single 'var' statement per scope.
"_"+service]=false;}} ---> var  <--- enabled=this.attrs[ZaServer.A_zimbraServiceEnabled]

[WARNING] Try to use a single 'var' statement per scope.
enabled=[enabled];}for( ---> var  <--- i=0;i<enabled.length;

[WARNING] The variable i has already been declared in the same scope...
=[enabled];}for(var  ---> i <--- =0;i<enabled.length;i

[WARNING] Try to use a single 'var' statement per scope.
<enabled.length;i++){ ---> var  <--- service=enabled[i];if(service

[WARNING] The variable service has already been declared in the same scope...
enabled.length;i++){var  ---> service <--- =enabled[i];if(service==

[WARNING] Try to use a single 'var' statement per scope.
resp.volume;if(volumes){ ---> var  <--- cnt=volumes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=volumes.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- volume=volumes[i];for(var 

[WARNING] Try to use a single 'var' statement per scope.
volume=volumes[i];for( ---> var  <--- key in ZaServer.currentkeys){if(volume

[WARNING] Try to use a single 'var' statement per scope.
resp.volume;if(volumes){ ---> var  <--- cnt=volumes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=volumes.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
"GetAllVolumesRequest",ZaZimbraAdmin.URN,null); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
callback:callback?callback:null}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
setAttribute(ZaServer.A_VolumeId,id); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
callback:callback?callback:null}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
"CreateVolumeRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elVolume=soapDoc.set("volume",null)

[WARNING] Try to use a single 'var' statement per scope.
,volume[ZaServer.A_VolumeCompressionThreshold]); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
this.id,asyncMode:false}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_CREATE_VOL}; ---> var  <--- response=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
,volume[ZaServer.A_VolumeId]); ---> var  <--- elVolume=soapDoc.set("volume",null)

[WARNING] Try to use a single 'var' statement per scope.
,volume[ZaServer.A_VolumeCompressionThreshold]); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
this.id,asyncMode:false}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
setAttribute(ZaServer.A_VolumeId,id); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
this.id,asyncMode:false}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
"FlushCacheRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elCache=soapDoc.set("cache",null)

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("cache",null); ---> var  <--- type=[];if(params.flushSkin

[WARNING] Try to use a single 'var' statement per scope.
,type.join(",")); ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
BUSY_FLUSH_CACHE,busyId:params.busyId}; ---> var  <--- reqParams={soapDoc:soapDoc,targetServer:params

[WARNING] Try to use a single 'var' statement per scope.
var exc=exclude?exclude:"none"; ---> var  <--- soapDoc=AjxSoapDoc.create("GetAllZimletsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("exclude",exc); ---> var  <--- params={soapDoc:soapDoc,asyncMode:Boolean

[WARNING] Try to use a single 'var' statement per scope.
._handleGetAllResponse,[callback])}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ZIMLET}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.zimlets=new Object();} ---> var  <--- newZimlets=new Object();var zimlets=

[WARNING] Try to use a single 'var' statement per scope.
}var newZimlets=new Object(); ---> var  <--- zimlets=list.getVector()._array;

[WARNING] Try to use a single 'var' statement per scope.
.getVector()._array;for( ---> var  <--- i in zimlets){var z=zimlets[

[WARNING] Try to use a single 'var' statement per scope.
;for(var i in zimlets){ ---> var  <--- z=zimlets[i];newZimlets[z

[WARNING] Try to use a single 'var' statement per scope.
ZaZimlet.A_name]]=z;} ---> var  <--- incList;incList=new ZaItemList(ZaZimlet);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaItemList(ZaZimlet);for( ---> var  <--- zimletName in newZimlets){var oz=ZaZimlet.

[WARNING] Try to use a single 'var' statement per scope.
;for(var zimletName in newZimlets){ ---> var  <--- oz=ZaZimlet.zimlets[zimletName];var 

[WARNING] Try to use a single 'var' statement per scope.
oz=ZaZimlet.zimlets[zimletName]; ---> var  <--- nz=newZimlets[zimletName];if(!

[WARNING] Try to use a single 'var' statement per scope.
;}}}if(callback){ ---> var  <--- args=callback.args;args=args?

[WARNING] Try to use a single 'var' statement per scope.
{var includes=[];for( ---> var  <--- id in list.getIdHash()){var 

[WARNING] Try to use a single 'var' statement per scope.
id in list.getIdHash()){ ---> var  <--- zimlet=list.getItemById(id);includes

[WARNING] Try to use a single 'var' statement per scope.
"res_"+zimlet.name});} ---> var  <--- baseurl=appContextPath;var proxy=null;AjxInclude

[WARNING] Try to use a single 'var' statement per scope.
});}var baseurl=appContextPath; ---> var  <--- proxy=null;AjxInclude(includes,baseurl,

[WARNING] Try to use a single 'var' statement per scope.
function(){var des=null; ---> var  <--- name=null;if(this.attrs&&

[WARNING] Try to use a single 'var' statement per scope.
name=this[ZaZimlet.A_name]; ---> var  <--- obj=window[name];var displayName=

[WARNING] Try to use a single 'var' statement per scope.
;var obj=window[name]; ---> var  <--- displayName=(obj&&(obj.label||

[WARNING] Try to use a single 'var' statement per scope.
function(){var label=null; ---> var  <--- name=this[ZaZimlet.A_name];if

[WARNING] Try to use a single 'var' statement per scope.
);}if(!label){ ---> var  <--- res=window[name];label=(

[WARNING] Try to use a single 'var' statement per scope.
"ModifyZimletRequest",ZaZimbraAdmin.URN,null); ---> var  <--- zimletEl=soapDoc.set("zimlet","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- statusEl=soapDoc.set("status","",

[WARNING] Try to use a single 'var' statement per scope.
[ZaZimlet.A_zimbraZimletEnabled]="FALSE";} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_UNDEPLOY_ZIMLET}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
?params.action:ZaZimlet.ACTION_DEPLOY_ALL; ---> var  <--- attId=params.attId?params.attId:

[WARNING] Try to use a single 'var' statement per scope.
.attId?params.attId:null; ---> var  <--- flushCache=params.flushCache?params.flushCache:

[WARNING] Try to use a single 'var' statement per scope.
.flushCache?params.flushCache:"0"; ---> var  <--- soapDoc=AjxSoapDoc.create("DeployZimletRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("flush",flushCache);} ---> var  <--- contentEl=soapDoc.set("content","")

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("aid",attId);} ---> var  <--- params=new Object();params.soapDoc

[WARNING] The variable params has already been declared in the same scope...
setAttribute("aid",attId);}var  ---> params <--- =new Object();params.soapDoc=

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
=val?val:this.name; ---> var  <--- soapDoc=AjxSoapDoc.create("GetZimletRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetZimletRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elZimlet=soapDoc.set("zimlet","")

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
this.lifetime.length-1); ---> var  <--- unit=this.lifetime.substr(this.

[WARNING] Try to use a single 'var' statement per scope.
);if(by&&val){ ---> var  <--- el=soapDoc.set("cos",val)

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("by",by);} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;params.soapDoc=soapDoc;try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_RETENTION_POLICIES}; ---> var  <--- result={};result[ZaRetentionPolicy.TYPE_KEEP

[WARNING] Try to use a single 'var' statement per scope.
[ZaRetentionPolicy.TYPE_PURGE]=[]; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
resp.retentionPolicy.length==1){ ---> var  <--- policies=resp.retentionPolicy[0];var 

[WARNING] Try to use a single 'var' statement per scope.
policies=resp.retentionPolicy[0]; ---> var  <--- keeps=policies.keep[0].policy

[WARNING] Try to use a single 'var' statement per scope.
policies.keep[0].policy; ---> var  <--- purges=policies.purge[0].policy

[WARNING] Try to use a single 'var' statement per scope.
policy;if(keeps){for( ---> var  <--- i=0;i<keeps.length;

[WARNING] Try to use a single 'var' statement per scope.
(keeps[i].id){ ---> var  <--- pk=new ZaRetentionPolicy(keeps[i].

[WARNING] Try to use a single 'var' statement per scope.
}}if(purges){for( ---> var  <--- j=0;j<purges.length;

[WARNING] Try to use a single 'var' statement per scope.
(purges[j].id){ ---> var  <--- pp=new ZaRetentionPolicy(purges[j].

[WARNING] Try to use a single 'var' statement per scope.
);if(by&&val){ ---> var  <--- el=soapDoc.set("cos",val)

[WARNING] Try to use a single 'var' statement per scope.
!==ZaRetentionPolicy.TYPE_PURGE){return;} ---> var  <--- wrapper=soapDoc.set(this[ZaRetentionPolicy.

[WARNING] Try to use a single 'var' statement per scope.
[ZaRetentionPolicy.A2_type],null); ---> var  <--- policy=soapDoc.set("policy",null,

[WARNING] Try to use a single 'var' statement per scope.
"lifetime",this.toDays()); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;params.soapDoc=soapDoc;try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_CREATE_RETENTION_POLICIES}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.isArray(list)){for( ---> var  <--- i=0;i<list.length;

[WARNING] Try to use a single 'var' statement per scope.
);if(by&&val){ ---> var  <--- el=soapDoc.set("cos",val)

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("by",by);} ---> var  <--- policy=soapDoc.set("policy",null,

[WARNING] Try to use a single 'var' statement per scope.
policy.setAttribute("type","system"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;params.skipAuthCheck=false;try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
);if(by&&val){ ---> var  <--- el=soapDoc.set("cos",val)

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("by",by);} ---> var  <--- policy=soapDoc.set("policy",null,

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("id",this.id); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
;params.skipAuthCheck=false;try{ ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_DELETE_RETENTION_POLICIES}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
attrsToGet.join(","));} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ALL_CONFIG}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
components=[components];}for( ---> var  <--- i=0;i<components.length;

[WARNING] Try to use a single 'var' statement per scope.
<components.length;i++){ ---> var  <--- component=components[i];this.attrs

[WARNING] Try to use a single 'var' statement per scope.
[ZaGlobalConfig.A_zimbraMtaPolicyService]=[]; ---> var  <--- restrictions=this.attrs[ZaGlobalConfig.A_zimbraMtaRestriction]

[WARNING] Try to use a single 'var' statement per scope.
restrictions=[restrictions];}for( ---> var  <--- i=0;i<restrictions.length;

[WARNING] The variable i has already been declared in the same scope...
=[restrictions];}for(var  ---> i <--- =0;i<restrictions.length;i

[WARNING] Try to use a single 'var' statement per scope.
indexOf("reject_rbl_client")>-1){ ---> var  <--- restriction=restrictions[i];var chunks=

[WARNING] Try to use a single 'var' statement per scope.
{var restriction=restrictions[i]; ---> var  <--- chunks=restriction.split(" ");if

[WARNING] Try to use a single 'var' statement per scope.
indexOf("reject_rhsbl_client")>-1){ ---> var  <--- restriction=restrictions[i];var chunks=

[WARNING] The variable restriction has already been declared in the same scope...
("reject_rhsbl_client")>-1){var  ---> restriction <--- =restrictions[i];var chunks=restriction

[WARNING] Try to use a single 'var' statement per scope.
{var restriction=restrictions[i]; ---> var  <--- chunks=restriction.split(" ");if

[WARNING] The variable chunks has already been declared in the same scope...
var restriction=restrictions[i];var  ---> chunks <--- =restriction.split(" ");if(

[WARNING] Try to use a single 'var' statement per scope.
indexOf("reject_rhsbl_reverse_client")>-1){ ---> var  <--- restriction=restrictions[i];var chunks=

[WARNING] The variable restriction has already been declared in the same scope...
("reject_rhsbl_reverse_client")>-1){var  ---> restriction <--- =restrictions[i];var chunks=restriction

[WARNING] Try to use a single 'var' statement per scope.
{var restriction=restrictions[i]; ---> var  <--- chunks=restriction.split(" ");if

[WARNING] The variable chunks has already been declared in the same scope...
var restriction=restrictions[i];var  ---> chunks <--- =restriction.split(" ");if(

[WARNING] Try to use a single 'var' statement per scope.
indexOf("reject_rhsbl_sender")>-1){ ---> var  <--- restriction=restrictions[i];var chunks=

[WARNING] The variable restriction has already been declared in the same scope...
("reject_rhsbl_sender")>-1){var  ---> restriction <--- =restrictions[i];var chunks=restriction

[WARNING] Try to use a single 'var' statement per scope.
{var restriction=restrictions[i]; ---> var  <--- chunks=restriction.split(" ");if

[WARNING] The variable chunks has already been declared in the same scope...
var restriction=restrictions[i];var  ---> chunks <--- =restriction.split(" ");if(

[WARNING] Try to use a single 'var' statement per scope.
indexOf("check_policy_service")>-1){ ---> var  <--- restriction=restrictions[i];var chunks=

[WARNING] The variable restriction has already been declared in the same scope...
("check_policy_service")>-1){var  ---> restriction <--- =restrictions[i];var chunks=restriction

[WARNING] Try to use a single 'var' statement per scope.
{var restriction=restrictions[i]; ---> var  <--- chunks=restriction.split(" ");if

[WARNING] The variable chunks has already been declared in the same scope...
var restriction=restrictions[i];var  ---> chunks <--- =restriction.split(" ");if(

[WARNING] Try to use a single 'var' statement per scope.
[1]);}}else{ ---> var  <--- restriction=restrictions[i];this.attrs

[WARNING] The variable restriction has already been declared in the same scope...
1]);}}else{var  ---> restriction <--- =restrictions[i];this.attrs[

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("onerror","stop"); ---> var  <--- mods=tmods;if(ZaItem.modifyMethodsExt.

[WARNING] Try to use a single 'var' statement per scope.
if(ZaItem.modifyMethodsExt.ZaGlobalConfig){ ---> var  <--- methods=ZaItem.modifyMethodsExt.ZaGlobalConfig;var cnt

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaItem.modifyMethodsExt.ZaGlobalConfig; ---> var  <--- cnt=methods.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
,tmpObj,soapDoc);}}} ---> var  <--- modifyConfDoc=soapDoc.set("ModifyConfigRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,ZaZimbraAdmin.URN);for( ---> var  <--- aname in mods){if(mods[aname

[WARNING] Try to use a single 'var' statement per scope.
(mods[aname] instanceof Array){ ---> var  <--- cnt=mods[aname].length;if

[WARNING] The variable cnt has already been declared in the same scope...
mods[aname] instanceof Array){var  ---> cnt <--- =mods[aname].length;if(

[WARNING] Try to use a single 'var' statement per scope.
if(cnt>0){for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof String){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] Try to use a single 'var' statement per scope.
aname][ix] instanceof Object){ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
][ix] instanceof Object){var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
(),modifyConfDoc);}else{ ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
),modifyConfDoc);}else{var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
"n",aname);}}else{ ---> var  <--- attr=soapDoc.set("a","",

[WARNING] The variable attr has already been declared in the same scope...
,aname);}}else{var  ---> attr <--- =soapDoc.set("a","",modifyConfDoc

[WARNING] Try to use a single 'var' statement per scope.
>-1){continue;}} ---> var  <--- attr=soapDoc.set("a",mods[

[WARNING] The variable attr has already been declared in the same scope...
-1){continue;}}var  ---> attr <--- =soapDoc.set("a",mods[aname

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("n",aname);}} ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
}var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraLogHostname];if(logHost){ ---> var  <--- soapDoc=AjxSoapDoc.create("GetServiceStatusRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetServiceStatusRequest",ZaZimbraAdmin.URN,null); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.noAuthToken

[WARNING] Try to use a single 'var' statement per scope.
=true;params.soapDoc=soapDoc; ---> var  <--- resp=command.invoke(params).Body

[WARNING] Try to use a single 'var' statement per scope.
status&&obj.status instanceof Array){ ---> var  <--- statusArray=obj.status;var cnt=statusArray

[WARNING] Try to use a single 'var' statement per scope.
){var statusArray=obj.status; ---> var  <--- cnt=statusArray.length;var formatter=AjxDateFormat

[WARNING] Try to use a single 'var' statement per scope.
status;var cnt=statusArray.length; ---> var  <--- formatter=AjxDateFormat.getDateTimeInstance(AjxDateFormat.MEDIUM,

[WARNING] Try to use a single 'var' statement per scope.
MEDIUM,AjxDateFormat.SHORT);for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- serverName=statusArray[i].server;if

[WARNING] Try to use a single 'var' statement per scope.
this.serverMap[serverName]);} ---> var  <--- serviceName=statusArray[i].service;if

[WARNING] Try to use a single 'var' statement per scope.
.serviceMap=new Object();} ---> var  <--- seconds=Number(statusArray[i].t

[WARNING] Try to use a single 'var' statement per scope.
(statusArray[i].t); ---> var  <--- millis=seconds*1000;var gmtSeconds=seconds

[WARNING] Try to use a single 'var' statement per scope.
);var millis=seconds*1000; ---> var  <--- gmtSeconds=seconds-AjxTimezone.getOffset(AjxTimezone.

[WARNING] Try to use a single 'var' statement per scope.
getOffset(AjxTimezone.DEFAULT_RULE)*60; ---> var  <--- serverSeconds=gmtSeconds+AjxTimezone.getOffset(tzId,

[WARNING] Try to use a single 'var' statement per scope.
serviceMap[serviceName].timestamp=millis; ---> var  <--- serverMillis=serverSeconds*1000;this.serverMap[

[WARNING] Try to use a single 'var' statement per scope.
isException&&resp.isException()){ ---> var  <--- details={obj:this,qName:null

[WARNING] Try to use a single 'var' statement per scope.
(resp.getException());} ---> var  <--- response=resp.getResponse();var body

[WARNING] Try to use a single 'var' statement per scope.
var response=resp.getResponse(); ---> var  <--- body=response.Body;if(body&&

[WARNING] Try to use a single 'var' statement per scope.
._quecountsArr.length/2)]; ---> var  <--- details={obj:this,qName:null

[WARNING] The variable details has already been declared in the same scope...
_quecountsArr.length/2)];var  ---> details <--- ={obj:this,qName:null,

[WARNING] Try to use a single 'var' statement per scope.
.fireChangeEvent(details);}else{ ---> var  <--- ex=new ZmCsfeException(ZMsg["service.UNKNOWN_DOCUMENT"],

[WARNING] The variable ex has already been declared in the same scope...
fireChangeEvent(details);}else{var  ---> ex <--- =new ZmCsfeException(ZMsg["service.UNKNOWN_DOCUMENT"],ZmCsfeException

[WARNING] Try to use a single 'var' statement per scope.
ZaMTA.A_refreshTime]=ZaMsg.PQ_Error; ---> var  <--- details={obj:this,qName:null

[WARNING] The variable details has already been declared in the same scope...
.A_refreshTime]=ZaMsg.PQ_Error;var  ---> details <--- ={obj:this,qName:null,

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("applyConfig","false"); ---> var  <--- params=new Object();params.asyncMode

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraId].join(",")); ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
(params,reqMgrParams);}else{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAllServersResponse; ---> var  <--- list=new ZaItemList(ZaMTA);var retVal

[WARNING] Try to use a single 'var' statement per scope.
var list=new ZaItemList(ZaMTA); ---> var  <--- retVal=new ZaItemList(ZaMTA);list.

[WARNING] Try to use a single 'var' statement per scope.
);list.loadFromJS(resp); ---> var  <--- servers=list.getArray();var cnt

[WARNING] Try to use a single 'var' statement per scope.
var servers=list.getArray(); ---> var  <--- cnt=servers.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=servers.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
100;if(obj.queue){ ---> var  <--- cnt=obj.queue.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=obj.queue.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- queue=obj.queue[ix];var 

[WARNING] Try to use a single 'var' statement per scope.
queue=obj.queue[ix]; ---> var  <--- qName=queue.name;if(!this

[WARNING] Try to use a single 'var' statement per scope.
];if(queue.qs){ ---> var  <--- qs=obj.queue[ix].qs

[WARNING] Try to use a single 'var' statement per scope.
obj.queue[ix].qs; ---> var  <--- cnt2=qs.length;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=qs.length;for( ---> var  <--- j=0;j<cnt2;j++

[WARNING] Try to use a single 'var' statement per scope.
(qs[j].qsi){ ---> var  <--- item=qs[j].qsi;var 

[WARNING] Try to use a single 'var' statement per scope.
item=qs[j].qsi; ---> var  <--- cnt3=item.length;for(var k

[WARNING] Try to use a single 'var' statement per scope.
var cnt3=item.length;for( ---> var  <--- k=0;k<cnt3;k++

[WARNING] Try to use a single 'var' statement per scope.
];if(queue.qi){ ---> var  <--- qi=obj.queue[ix].qi

[WARNING] Try to use a single 'var' statement per scope.
obj.queue[ix].qi; ---> var  <--- cnt4=qi.length;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var cnt4=qi.length;for( ---> var  <--- j=0;j<cnt4;j++

[WARNING] The variable j has already been declared in the same scope...
cnt4=qi.length;for(var  ---> j <--- =0;j<cnt4;j++)

[WARNING] Try to use a single 'var' statement per scope.
"GetMailQueueInfoRequest",ZaZimbraAdmin.URN,null); ---> var  <--- attr=soapDoc.set("server","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;params.asyncMode=true; ---> var  <--- callback=new AjxCallback(this,this.QCountsCallback

[WARNING] Try to use a single 'var' statement per scope.
offset!=null)?offset:"0"; ---> var  <--- soapDoc=AjxSoapDoc.create("GetMailQueueRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetMailQueueRequest",ZaZimbraAdmin.URN,null); ---> var  <--- serverEl=soapDoc.set("server","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- qEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
;}serverEl.appendChild(qEl); ---> var  <--- queryEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(query)){for( ---> var  <--- key in query){var arr=query[

[WARNING] Try to use a single 'var' statement per scope.
{for(var key in query){ ---> var  <--- arr=query[key];if(arr

[WARNING] Try to use a single 'var' statement per scope.
[key];if(arr){ ---> var  <--- cnt=arr.length;if(cnt)

[WARNING] The variable cnt has already been declared in the same scope...
key];if(arr){var  ---> cnt <--- =arr.length;if(cnt){

[WARNING] Try to use a single 'var' statement per scope.
arr.length;if(cnt){ ---> var  <--- fieldEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",key);for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- matchEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
;}qEl.appendChild(queryEl); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;params.asyncMode=true; ---> var  <--- callback=new AjxCallback(this,this.mailQStatusCallback

[WARNING] Try to use a single 'var' statement per scope.
.qName;if(!resp){ ---> var  <--- ex=new ZmCsfeException(ZMsg.errorEmptyResponse,ZmCsfeException

[WARNING] Try to use a single 'var' statement per scope.
).code==ZmCsfeException.SVC_ALREADY_IN_PROGRESS){ ---> var  <--- details={obj:this,qName:qName

[WARNING] Try to use a single 'var' statement per scope.
,"ZaMTA.prototype.mailQStatusCallback");}}return;} ---> var  <--- response=resp.getResponse();var body

[WARNING] Try to use a single 'var' statement per scope.
var response=resp.getResponse(); ---> var  <--- body=response.Body;if(body&&

[WARNING] Try to use a single 'var' statement per scope.
.server[0],false); ---> var  <--- details={obj:this,poll:true

[WARNING] The variable details has already been declared in the same scope...
server[0],false);var  ---> details <--- ={obj:this,poll:true}

[WARNING] Try to use a single 'var' statement per scope.
this,poll:true};for( ---> var  <--- ix in arg){details[ix]=

[WARNING] Try to use a single 'var' statement per scope.
.fireChangeEvent(details);}else{ ---> var  <--- ex=new ZmCsfeException(ZMsg["service.UNKNOWN_DOCUMENT"],

[WARNING] The variable ex has already been declared in the same scope...
fireChangeEvent(details);}else{var  ---> ex <--- =new ZmCsfeException(ZMsg["service.UNKNOWN_DOCUMENT"],ZmCsfeException

[WARNING] Try to use a single 'var' statement per scope.
"MailQueueActionRequest",ZaZimbraAdmin.URN,null); ---> var  <--- serverEl=soapDoc.set("server","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- qEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
);serverEl.appendChild(qEl); ---> var  <--- actionEl;if(by=="id"){actionEl

[WARNING] Try to use a single 'var' statement per scope.
getDoc().createElement("action"); ---> var  <--- queryEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
if(val!=null){for( ---> var  <--- key in val){var arr=val[

[WARNING] Try to use a single 'var' statement per scope.
{for(var key in val){ ---> var  <--- arr=val[key];if(arr

[WARNING] Try to use a single 'var' statement per scope.
[key];if(arr){ ---> var  <--- cnt=arr.length;if(cnt)

[WARNING] Try to use a single 'var' statement per scope.
arr.length;if(cnt){ ---> var  <--- fieldEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",key);for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- matchEl=soapDoc.getDoc().createElement(

[WARNING] Try to use a single 'var' statement per scope.
actionEl.setAttribute("by",by); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=true;params.noAuthToken=true; ---> var  <--- callback=new AjxCallback(this,this.mailQueueActionClbck

[WARNING] Try to use a single 'var' statement per scope.
"MailQueueFlushRequest",ZaZimbraAdmin.URN,null); ---> var  <--- serverEl=soapDoc.set("server","")

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",this.name); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(20); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<br/>"; ---> var  <--- arr=this[ZaMTAQMsgItem.A_todomain] instanceof Array

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
domainList.size()>0){ ---> var  <--- lastDomain=domainList.getVector().getLast(

[WARNING] Try to use a single 'var' statement per scope.
.getVector().getLast(); ---> var  <--- domainListController=ZaApp.getInstance().getDomainListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getDomainList(); ---> var  <--- canConfigGAL=false;if(domainList.size(

[WARNING] Try to use a single 'var' statement per scope.
domainList.size()>0){ ---> var  <--- currentDomain;var vector=domainList.getVector()

[WARNING] Try to use a single 'var' statement per scope.
()>0){var currentDomain; ---> var  <--- vector=domainList.getVector();for(

[WARNING] Try to use a single 'var' statement per scope.
=domainList.getVector();for( ---> var  <--- i=vector.size()-1;

[WARNING] Try to use a single 'var' statement per scope.
domainList.size()>0){ ---> var  <--- lastDomain=domainList.getVector().getLast(

[WARNING] Try to use a single 'var' statement per scope.
.getVector().getLast(); ---> var  <--- domainListController=ZaApp.getInstance().getDomainListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getDomainList(); ---> var  <--- canConfigAuth=false;if(domainList.size(

[WARNING] Try to use a single 'var' statement per scope.
cosList.size()>0){ ---> var  <--- vector=cosList.getVector();var cos

[WARNING] Try to use a single 'var' statement per scope.
var vector=cosList.getVector(); ---> var  <--- cos;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
getVector();var cos;for( ---> var  <--- i=0;i<vector.size(

[WARNING] Try to use a single 'var' statement per scope.
getCosController().show(cos); ---> var  <--- parentPath=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- path=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- path=ZaTree.getPathByArray([ZaMsg.OVP_home

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- setupGroupItem=form.getItemById(form.getId(

[WARNING] Try to use a single 'var' statement per scope.
entry){var cases=[]; ---> var  <--- labelChoices=[];var contentChoices=[]

[WARNING] Try to use a single 'var' statement per scope.
[];var labelChoices=[]; ---> var  <--- contentChoices=[];labelChoices.push(ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
;contentChoices.push([]); ---> var  <--- startContentChoices=contentChoices[contentChoices.length-1]

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- domainContentChoices=[];if(ZaZimbraAdmin.canCreateTopDomain

[WARNING] Try to use a single 'var' statement per scope.
.ENABLED_UI_COMPONENTS[ZaSettings.CARTE_BLANCHE_UI]){ ---> var  <--- addAccountChoices=[];if(ZaZimbraAdmin.canCreateAccount

[WARNING] Try to use a single 'var' statement per scope.
contentChoices.push(addAccountChoices);}} ---> var  <--- case1={type:_ZATABCASE_,numCols:3

[WARNING] Try to use a single 'var' statement per scope.
(value){var imgStr=""; ---> var  <--- serviceStatusMsg=this.getInstanceValue(ZaHome.A2_serviceStatusMessage)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaHome.A2_serviceStatusMessage); ---> var  <--- imgCssStyle;if(serviceStatusMsg!=ZaMsg.MSG_HomeLoading)

[WARNING] Try to use a single 'var' statement per scope.
("Check",imgCssStyle);}}} ---> var  <--- textStr="";if(serviceStatusMsg!="")

[WARNING] Try to use a single 'var' statement per scope.
._containedObject.attrs){var resultType; ---> var  <--- account=this._containedObject;if(account.

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
id=entry.id;}for( ---> var  <--- a in entry.attrs){var modelItem=

[WARNING] The variable a has already been declared in the same scope...
=entry.id;}for(var  ---> a <---  in entry.attrs){var modelItem=this

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] The variable modelItem has already been declared in the same scope...
var a in entry.attrs){var  ---> modelItem <--- =this._localXForm.getModel().getItem

[WARNING] Try to use a single 'var' statement per scope.
.setAttrs[ZaAccount.A_COSId]){ ---> var  <--- cos=ZaCos.getCosById(this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
=entry[ZaModel.currentTab];} ---> var  <--- domainName=ZaAccount.getDomain(this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
getDomain(this._containedObject.name); ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName);this

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- skins=ZaApp.getInstance().getInstalledSkins(

[WARNING] Try to use a single 'var' statement per scope.
{skins=[skins];}} ---> var  <--- skinsChoices=ZaApp.getInstance().getSkinChoices(

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- allZimlets=ZaZimlet.getAll("extension");if

[WARNING] Try to use a single 'var' statement per scope.
zimletChoices.dirtyChoices();}else{ ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] Try to use a single 'var' statement per scope.
else{var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.modelExtensions.ZaAccount){for( ---> var  <--- i=0;i<ZaItem.modelExtensions.

[WARNING] The variable i has already been declared in the same scope...
.modelExtensions.ZaAccount){for(var  ---> i <--- =0;i<ZaItem.modelExtensions.ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.ZaAccount.length;i++){ ---> var  <--- ext=ZaItem.modelExtensions.ZaAccount[i]

[WARNING] Try to use a single 'var' statement per scope.
[ext]={};for( ---> var  <--- a in entry[ext]){var modelItem

[WARNING] The variable a has already been declared in the same scope...
ext]={};for(var  ---> a <---  in entry[ext]){var modelItem=

[WARNING] Try to use a single 'var' statement per scope.
var a in entry[ext]){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] The variable modelItem has already been declared in the same scope...
a in entry[ext]){var  ---> modelItem <--- =this._localXForm.getModel().getItem

[WARNING] Try to use a single 'var' statement per scope.
){val=value;}else{ ---> var  <--- cos=ZaCos.getCosByName(value);if

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_alias_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaAccount.A2_alias_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailAlias]){ ---> var  <--- aliasArr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMailAlias];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=aliasArr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=aliasArr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
&&instance.alias_selection_cache[0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_alias_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraMailAlias].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editAliasDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
!=obj[ZaAccount.A_name]){ ---> var  <--- domain;var domainName=ZaAccount.getDomain(obj

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name]){var domain; ---> var  <--- domainName=ZaAccount.getDomain(obj[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
[domainName]));}else{ ---> var  <--- viewController=null;viewController=ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
getControllerById(this.parent.__internalId); ---> var  <--- account=null;if(viewController){account

[WARNING] Try to use a single 'var' statement per scope.
]);}if(account){ ---> var  <--- warning=null;switch(account.type)

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- domain;var domainName=ZaAccount.getDomain(obj

[WARNING] Try to use a single 'var' statement per scope.
.length>1){var domain; ---> var  <--- domainName=ZaAccount.getDomain(obj[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
[domainName]));}else{ ---> var  <--- viewController=null;viewController=ZaApp.getInstance(

[WARNING] Try to use a single 'var' statement per scope.
getControllerById(this.parent.__internalId); ---> var  <--- account=null;if(viewController){account

[WARNING] Try to use a single 'var' statement per scope.
]);}if(account){ ---> var  <--- warning=null;switch(account.type)

[WARNING] Try to use a single 'var' statement per scope.
.popupErrorDialog(warning);}else{ ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
(acctName){var res=true; ---> var  <--- domainName=null;var acct=acctName.split

[WARNING] Try to use a single 'var' statement per scope.
res=true;var domainName=null; ---> var  <--- acct=acctName.split("@");if

[WARNING] Try to use a single 'var' statement per scope.
0];}if(domainName){ ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName);if

[WARNING] Try to use a single 'var' statement per scope.
acctName=null;if(attrName){ ---> var  <--- instance=this.getInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_fwdAddr_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaAccount.A2_fwdAddr_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailForwardingAddress]){ ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailForwardingAddress]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMailForwardingAddress];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=arr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=arr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_calFwdAddr_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaAccount.A2_calFwdAddr_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraPrefCalendarForwardInvitesTo]){ ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraPrefCalendarForwardInvitesTo];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=arr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=arr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A2_fwdAddr_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_fwdAddr_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraMailForwardingAddress]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraMailForwardingAddress].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A2_calFwdAddr_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_calFwdAddr_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraPrefCalendarForwardInvitesTo].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editFwdAddrDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailForwardingAddress]

[WARNING] Try to use a single 'var' statement per scope.
.parent.editCalFwdAddrDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- arr=this.getInstance().attrs[

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- arr=this.getInstance().attrs[

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(instance.fp_selection_cache)){ ---> var  <--- cnt=instance.fp_selection_cache.length;var arr

[WARNING] Try to use a single 'var' statement per scope.
var cnt=instance.fp_selection_cache.length; ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraForeignPrincipal]

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(arr)){for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=arr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=arr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
&&instance.fp_selection_cache[0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj=ZaFp.getObject(instance.fp_selection_cache[

[WARNING] Try to use a single 'var' statement per scope.
(instance.fp_selection_cache[0]); ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraForeignPrincipal]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraForeignPrincipal].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editFpDlg.getObject(); ---> var  <--- arr=this.getInstance().attrs[

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaFp.A_prefix

[WARNING] Try to use a single 'var' statement per scope.
.parent.addFpDlg.getObject(); ---> var  <--- app=this.parent._app;var currentFps

[WARNING] Try to use a single 'var' statement per scope.
var app=this.parent._app; ---> var  <--- currentFps=this.getInstance().attrs[

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaAccount.A2_domainLeftAccounts); ---> var  <--- val2=this.getInstanceValue(ZaAccount.A2_accountTypes)

[WARNING] Try to use a single 'var' statement per scope.
}var addressFormItems=new Array(); ---> var  <--- addressFormItemsOrders=new Array();if(ZaZimbraAdmin

[WARNING] Try to use a single 'var' statement per scope.
,ZaAccount.A_country];}for( ---> var  <--- i=0;i<addressFormItemsOrders.length;

[WARNING] Try to use a single 'var' statement per scope.
}var addressFormItems=new Array(); ---> var  <--- addressFormItemsOrders=new Array();if(ZaZimbraAdmin

[WARNING] Try to use a single 'var' statement per scope.
,ZaAccount.A_country];}for( ---> var  <--- i=0;i<addressFormItemsOrders.length;

[WARNING] Try to use a single 'var' statement per scope.
}var accountNameFormItems=new Array(); ---> var  <--- accountNameItemsOrders=new Array();if(ZaZimbraAdmin

[WARNING] Try to use a single 'var' statement per scope.
,ZaAccount.A_zimbraHideInGal];}for( ---> var  <--- i=0;i<accountNameItemsOrders.length;

[WARNING] Try to use a single 'var' statement per scope.
);this.setInstanceValue(value); ---> var  <--- prefPollingInterval=instance.attrs[ZaAccount.A_zimbraPrefMailPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraPrefMailPollingInterval];} ---> var  <--- minPollingInterval=instance.attrs[ZaAccount.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailMinPollingInterval];} ---> var  <--- prefPollingIntervalItem=form.getItemsById(ZaAccount.A_zimbraPrefMailPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefMailPollingInterval)[0];try{ ---> var  <--- prefPollingInNum=parseInt(ZaUtil.getLifeTimeInSeconds(prefPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
(ZaUtil.getLifeTimeInSeconds(prefPollingInterval)); ---> var  <--- minPollingNum=parseInt(ZaUtil.getLifeTimeInSeconds(minPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
){throw(ex);}} ---> var  <--- emptyAlias=" @"+domainName;var headerItems=[

[WARNING] Try to use a single 'var' statement per scope.
}}var emptyAlias=" @"+domainName; ---> var  <--- headerItems=[{type:_AJX_IMAGE_,src:

[WARNING] Try to use a single 'var' statement per scope.
var usedVal=this.getInstanceValue(); ---> var  <--- formatter=AjxNumberFormat.getNumberInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
=formatter.format(usedVal);} ---> var  <--- quotaLimit=this.getInstanceValue(ZaAccount.A_zimbraMailQuota)

[WARNING] Try to use a single 'var' statement per scope.
this.tabChoices=new Array(); ---> var  <--- _tab1,_tab2,_tab3,_tab4,_tab5,

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_LOCALE].join("");} ---> var  <--- cases=[];var case1={type

[WARNING] Try to use a single 'var' statement per scope.
);}var cases=[]; ---> var  <--- case1={type:_ZATABCASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:2,numCols:1}; ---> var  <--- case1Items=[{type:_DWT_ALERT_,ref:

[WARNING] Try to use a single 'var' statement per scope.
:ZaAccountXFormView.getAccountNameInfoItem()}]; ---> var  <--- setupGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
);case1Items.push(setupGroup); ---> var  <--- passwordGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
};case1Items.push(passwordGroup); ---> var  <--- externalAuthGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
};case1Items.push(externalAuthGroup); ---> var  <--- notesGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
;cases.push(case2);} ---> var  <--- directMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT); ---> var  <--- indirectMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT); ---> var  <--- nonMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.NON);

[WARNING] Try to use a single 'var' statement per scope.
.NON);if(_tab3){ ---> var  <--- case3={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
});}if(_tab5){ ---> var  <--- prefItems=[{type:_ZA_TOP_GROUPER_,id:

[WARNING] Try to use a single 'var' statement per scope.
,listType){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;this._listType=

[WARNING] Try to use a single 'var' statement per scope.
.ABSOLUTE_STYLE;this._listType=listType; ---> var  <--- headerList=this._getHeaderList();var listViewId

[WARNING] Try to use a single 'var' statement per scope.
var headerList=this._getHeaderList(); ---> var  <--- listViewId;if(!this._listType||this

[WARNING] Try to use a single 'var' statement per scope.
){var title=ZaMsg.Addresses_view_title; ---> var  <--- cc=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
function(){var icon=null; ---> var  <--- cc=ZaApp.getInstance().getControllerById(

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
account,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;var dwtId

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._headerList.length; ---> var  <--- dwtId=Dwt.getNextId();var rowId

[WARNING] Try to use a single 'var' statement per scope.
var dwtId=Dwt.getNextId(); ---> var  <--- rowId=this._listType;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var rowId=this._listType;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- cellWidth=this._getCellWidth(i,{}

[WARNING] Try to use a single 'var' statement per scope.
+dwtId+'" width='+cellWidth+"><nobr>"; ---> var  <--- status="";if(account.type==

[WARNING] Try to use a single 'var' statement per scope.
+dwtId+'" width='+cellWidth+"><nobr>"; ---> var  <--- targetType=account.attrs[ZaAlias.A_targetType]

[WARNING] Try to use a single 'var' statement per scope.
account.attrs[ZaAlias.A_targetType]; ---> var  <--- targetType_desc;if(targetType==ZaItem.ACCOUNT)

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
.currentStep]==ZaNewAccountXWizard.ALIASES_STEP){ ---> var  <--- args=arguments[0];if(args

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_domainName]=domainName; ---> var  <--- domain=ZaItem.create(newDomain,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
entry[ZaAccount.A2_errorMessage]||""; ---> var  <--- domainName;if(!domainName){try{

[WARNING] Try to use a single 'var' statement per scope.
;EmailAddr_XFormItem.domainChoices.dirtyChoices(); ---> var  <--- domainName=ZaAccount.getDomain(this._containedObject.

[WARNING] The variable domainName has already been declared in the same scope...
EmailAddr_XFormItem.domainChoices.dirtyChoices();var  ---> domainName <--- =ZaAccount.getDomain(this._containedObject.name

[WARNING] Try to use a single 'var' statement per scope.
this._containedObject.name);try{ ---> var  <--- domainObj=ZaDomain.getDomainByName(domainName);this

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- skins=ZaApp.getInstance().getInstalledSkins(

[WARNING] Try to use a single 'var' statement per scope.
{skins=[skins];}} ---> var  <--- skinsChoices=ZaApp.getInstance().getSkinChoices(

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- allZimlets=ZaZimlet.getAll("extension");if

[WARNING] Try to use a single 'var' statement per scope.
zimletChoices.dirtyChoices();}else{ ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] Try to use a single 'var' statement per scope.
else{var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
_localXForm.setInstance(this._containedObject); ---> var  <--- nameFields=this._localXForm.getItemsById(ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
acctName=null;if(attrName){ ---> var  <--- instance=this.getInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaAccount.A2_domainLeftAccounts); ---> var  <--- val2=this.getInstanceValue(ZaAccount.A2_accountTypes)

[WARNING] Try to use a single 'var' statement per scope.
}var accountNameFormItems=new Array(); ---> var  <--- accountNameItemsOrders=new Array();if(ZaZimbraAdmin

[WARNING] Try to use a single 'var' statement per scope.
,ZaAccount.A_zimbraHideInGal];}for( ---> var  <--- i=0;i<accountNameItemsOrders.length;

[WARNING] Try to use a single 'var' statement per scope.
){var domainName=ZaSettings.myDomainName; ---> var  <--- emptyAlias="@"+domainName;var cases=new 

[WARNING] Try to use a single 'var' statement per scope.
myDomainName;var emptyAlias="@"+domainName; ---> var  <--- cases=new Array();this.stepChoices

[WARNING] Try to use a single 'var' statement per scope.
XFormChoices.OBJECT_LIST,"id","name"); ---> var  <--- case1={type:_CASE_,tabGroupKey:ZaNewAccountXWizard

[WARNING] Try to use a single 'var' statement per scope.
align:_LEFT_,valign:_TOP_}; ---> var  <--- case1Items=[{type:_DWT_ALERT_,ref:

[WARNING] Try to use a single 'var' statement per scope.
.A_mailHost],[])){ ---> var  <--- setupGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
).getItems()[0]; ---> var  <--- form=this.getForm();if(

[WARNING] Try to use a single 'var' statement per scope.
;case1Items.push(setupGroup);} ---> var  <--- passwordGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
};case1Items.push(passwordGroup); ---> var  <--- externalAuthGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
};case1Items.push(externalAuthGroup); ---> var  <--- new_acct_timezone_group={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
.A_notes],[])){ ---> var  <--- notesGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_ContactInfo}); ---> var  <--- case2={type:_CASE_,caseKey:ZaNewAccountXWizard

[WARNING] Try to use a single 'var' statement per scope.
.MEMBEROF_TAB_ATTRS,ZaAccountXFormView.MEMBEROF_TAB_RIGHTS)){ ---> var  <--- directMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT); ---> var  <--- indirectMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT,150

[WARNING] Try to use a single 'var' statement per scope.
ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT,150); ---> var  <--- nonMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.NON);

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_MemberOf}); ---> var  <--- memberofCase={type:_CASE_,caseKey:ZaNewAccountXWizard

[WARNING] Try to use a single 'var' statement per scope.
;cases.push(memberofCase);} ---> var  <--- zimbraFeatureMailForwardingEnabledItem={ref:ZaAccount.A_zimbraFeatureMailForwardingEnabled,msgName

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Features}); ---> var  <--- featuresCase={type:_CASE_,caseKey:ZaNewAccountXWizard

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Preferences}); ---> var  <--- prefItems=[];if(ZAWizTopGrouper_XFormItem.isGroupVisible

[WARNING] Try to use a single 'var' statement per scope.
(this,this._helpButtonListener)); ---> var  <--- moveButton=new DwtDialog_ButtonDescriptor(MoveAliasXDialog.MOVE_BUTTON,ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
(this,this.doMove)); ---> var  <--- closeButton=new DwtDialog_ButtonDescriptor(MoveAliasXDialog.CLOSE_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
parent.asynCommand.cancel();} ---> var  <--- callback=new AjxCallback(this.getForm()

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- callback=new AjxCallback(this.getForm()

[WARNING] Try to use a single 'var' statement per scope.
(this,this._helpButtonListener)); ---> var  <--- abortButton=new DwtDialog_ButtonDescriptor(DeleteAcctsPgrsDlg.ABORT_BUTTON,ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
.ABORT_BUTTON].setEnabled(false); ---> var  <--- obj=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- stopForError=false;var ex=result.getException

[WARNING] Try to use a single 'var' statement per scope.
getInstance();var stopForError=false; ---> var  <--- ex=result.getException();if(

[WARNING] Try to use a single 'var' statement per scope.
{var sourceHeaderList=new Array(); ---> var  <--- sortable=1;sourceHeaderList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name,true,true); ---> var  <--- xFormObject={numCols:1,height:"300px"

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
_headerList[i]._width+">"; ---> var  <--- isCurrent=false;for(a in ZaServer.

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
{return;}var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=ZaServerListView

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=ZaServerListView._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
server,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
server,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
;}var ix=params.ix; ---> var  <--- newServerList=[];var serverList=this.

[WARNING] Try to use a single 'var' statement per scope.
.ix;var newServerList=[]; ---> var  <--- serverList=this.getInstanceValue("serverList");newServerList

[WARNING] Try to use a single 'var' statement per scope.
=serverList._version+1;for( ---> var  <--- i=0;i<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),"status",0); ---> var  <--- msg=AjxMessageFormat.format(ZaMsg.ERROR_FAILED_FLUSH_CACHE,

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),"statusMessage",msg); ---> var  <--- fault=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);ZaApp

[WARNING] Try to use a single 'var' statement per scope.
null,false);}}else{ ---> var  <--- busyid=Dwt.getNextId();ix++

[WARNING] Try to use a single 'var' statement per scope.
=busyid;params.ix=ix; ---> var  <--- callback=new AjxCallback(this,ZaFlushCacheXDialog.flushCacheCalback

[WARNING] Try to use a single 'var' statement per scope.
var busyid=Dwt.getNextId(); ---> var  <--- params=this.getInstance();params.

[WARNING] Try to use a single 'var' statement per scope.
=0;params.busyId=busyid; ---> var  <--- callback=new AjxCallback(this,ZaFlushCacheXDialog.flushCacheCalback

[WARNING] Try to use a single 'var' statement per scope.
(){var srvHeaderList=[]; ---> var  <--- sortable=1;srvHeaderList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
++,"status",true,true); ---> var  <--- xFormObject={numCols:1,items:[

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.modelExtensions.ZaServer){for( ---> var  <--- i=0;i<ZaItem.modelExtensions.

[WARNING] Try to use a single 'var' statement per scope.
.ZaServer.length;i++){ ---> var  <--- ext=ZaItem.modelExtensions.ZaServer[i]

[WARNING] Try to use a single 'var' statement per scope.
[ext]={};for( ---> var  <--- a in entry[ext]){var modelItem

[WARNING] The variable a has already been declared in the same scope...
ext]={};for(var  ---> a <---  in entry[ext]){var modelItem=

[WARNING] Try to use a single 'var' statement per scope.
var a in entry[ext]){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] The variable modelItem has already been declared in the same scope...
a in entry[ext]){var  ---> modelItem <--- =this._localXForm.getModel().getItem

[WARNING] Try to use a single 'var' statement per scope.
[ZaServer.A_Volumes]){for( ---> var  <--- a in entry[ZaServer.A_Volumes]){

[WARNING] The variable a has already been declared in the same scope...
ZaServer.A_Volumes]){for(var  ---> a <---  in entry[ZaServer.A_Volumes]){this

[WARNING] Try to use a single 'var' statement per scope.
A_Volumes][a]){for( ---> var  <--- v in entry[ZaServer.A_Volumes][a

[WARNING] Try to use a single 'var' statement per scope.
ZaServer.A_Volumes]._version:1; ---> var  <--- cnt=this._containedObject[ZaServer.A_Volumes]

[WARNING] Try to use a single 'var' statement per scope.
_containedObject[ZaServer.A_Volumes].length; ---> var  <--- indexArr=[];var msgArr=[]

[WARNING] Try to use a single 'var' statement per scope.
.length;var indexArr=[]; ---> var  <--- msgArr=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var msgArr=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
var msgArr=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
);if(ZaServerXFormView.setObjectMethods){ ---> var  <--- methods=ZaServerXFormView.setObjectMethods;var cnt=methods

[WARNING] Try to use a single 'var' statement per scope.
){var methods=ZaServerXFormView.setObjectMethods; ---> var  <--- cnt=methods.length;for(var i

[WARNING] The variable cnt has already been declared in the same scope...
{var methods=ZaServerXFormView.setObjectMethods;var  ---> cnt <--- =methods.length;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
var cnt=methods.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=methods.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;break;}}}}for( ---> var  <--- key in ZaServer.currentkeys){if(entry

[WARNING] Try to use a single 'var' statement per scope.
getInstanceValue(ZaServer.A2_volume_selection_cache);for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
.parent.editVolumeDlg.getObject(); ---> var  <--- soapDoc=AjxSoapDoc.create("ModifyVolumeRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
,obj[ZaServer.A_VolumeId]); ---> var  <--- elVolume=soapDoc.set("volume",null)

[WARNING] Try to use a single 'var' statement per scope.
,obj[ZaServer.A_VolumeCompressionThreshold]); ---> var  <--- callback=new AjxCallback(this,ZaServerXFormView.prototype

[WARNING] Try to use a single 'var' statement per scope.
this,ZaServerXFormView.prototype.modifyVolumeCallback); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
asyncMode:true,callback:callback}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.CreateVolumeResponse; ---> var  <--- volumes=this._localXForm.getInstanceValue(ZaServer.

[WARNING] Try to use a single 'var' statement per scope.
_localXForm.getInstanceValue(ZaServer.A_Volumes); ---> var  <--- newVolumes=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var newVolumes=[];for( ---> var  <--- i=0;i<volumes.length;

[WARNING] Try to use a single 'var' statement per scope.
"CreateVolumeRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elVolume=soapDoc.set("volume",null)

[WARNING] Try to use a single 'var' statement per scope.
,obj[ZaServer.A_VolumeCompressionThreshold]); ---> var  <--- callback=new AjxCallback(this,ZaServerXFormView.prototype

[WARNING] Try to use a single 'var' statement per scope.
this,ZaServerXFormView.prototype.createVolumeCallback); ---> var  <--- params={soapDoc:soapDoc,targetServer:this

[WARNING] Try to use a single 'var' statement per scope.
asyncMode:true,callback:callback}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
&&instance.volume_selection_cache[0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaServer.A_VolumeId

[WARNING] Try to use a single 'var' statement per scope.
[0][ZaServer.A_VolumeType]; ---> var  <--- volArr=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaServer.A_Volumes); ---> var  <--- cnt=volArr.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=volArr.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.GetAllVolumesResponse; ---> var  <--- newVolumes=[];var volumes=response.

[WARNING] Try to use a single 'var' statement per scope.
.GetAllVolumesResponse;var newVolumes=[]; ---> var  <--- volumes=response.volume;if(volumes)

[WARNING] Try to use a single 'var' statement per scope.
response.volume;if(volumes){ ---> var  <--- cnt=volumes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=volumes.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
),callback);}return;} ---> var  <--- nextVolume=selArr.shift();if(

[WARNING] Try to use a single 'var' statement per scope.
;}deletedVolumes.push(nextVolume); ---> var  <--- callback=new AjxCallback(this,ZaServerXFormView.doDeleteVolume

[WARNING] The variable callback has already been declared in the same scope...
}deletedVolumes.push(nextVolume);var  ---> callback <--- =new AjxCallback(this,ZaServerXFormView.doDeleteVolume,

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- volArr=[];if(!instance.

[WARNING] Try to use a single 'var' statement per scope.
!instance.volume_selection_cache){return;} ---> var  <--- selArr=this.getInstanceValue(ZaServer.A2_volume_selection_cache)

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaServer.A_VolumeId

[WARNING] Try to use a single 'var' statement per scope.
null,null,false,true); ---> var  <--- _tab1,_tab2,_tab3,_tab4,_tab5,

[WARNING] Try to use a single 'var' statement per scope.
,_tab6,_tab7,_tab8,_tab9; ---> var  <--- tabBarChoices=[];this.helpMap={

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_LOCALE].join("");} ---> var  <--- switchItems=[];var case1={type

[WARNING] Try to use a single 'var' statement per scope.
);}var switchItems=[]; ---> var  <--- case1={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_ZATABCASE_,colSizes:[

[WARNING] Try to use a single 'var' statement per scope.
case2);}if(_tab3){ ---> var  <--- case3={type:_ZATABCASE_,id:"server_mta_tab"

[WARNING] Try to use a single 'var' statement per scope.
case3);}if(_tab5){ ---> var  <--- case5={type:_ZATABCASE_,colSizes:[

[WARNING] Try to use a single 'var' statement per scope.
case5);}if(_tab6){ ---> var  <--- case6={type:_ZATABCASE_,caseKey:_tab6

[WARNING] Try to use a single 'var' statement per scope.
case6);}if(_tab7){ ---> var  <--- case7={type:_ZATABCASE_,width:"100%"

[WARNING] Try to use a single 'var' statement per scope.
};switchItems.push(case7); ---> var  <--- case7_2={type:_ZATABCASE_,caseKey:_tab7

[WARNING] Try to use a single 'var' statement per scope.
case7_2);}if(_tab8){ ---> var  <--- case8={type:_ZATABCASE_,id:"server_bind_ip_tab"

[WARNING] Try to use a single 'var' statement per scope.
=function(isMtaEnable){var notice; ---> var  <--- style;if(isMtaEnable){notice=ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
(parent){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
zimlet,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- cellWidth=this._getCellWidth(i,{}

[WARNING] Try to use a single 'var' statement per scope.
++]="<td align='left' width="+cellWidth+">"; ---> var  <--- version=zimlet.attrs[ZaZimlet.A_zimbraZimletVersion]

[WARNING] Try to use a single 'var' statement per scope.
version&&version.length>0){ ---> var  <--- lastIndexOf_=version.lastIndexOf("_");if

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;headerList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
(parent){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
zimlet,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cellWidth=this._getCellWidth(i,{}

[WARNING] Try to use a single 'var' statement per scope.
._getCellWidth(i,{}); ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
++]="<td align='left' width="+cellWidth+">"; ---> var  <--- desc=ZaZimletListView.__processMessage(zimlet[ZaZimlet.

[WARNING] Try to use a single 'var' statement per scope.
++]="<td align='left' width="+cellWidth+">"; ---> var  <--- version=zimlet.attrs[ZaZimlet.A_zimbraZimletVersion]

[WARNING] Try to use a single 'var' statement per scope.
version&&version.length>0){ ---> var  <--- lastIndexOf_=version.lastIndexOf("_");if

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;headerList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
]=new Array();for( ---> var  <--- aa in entry.attrs[a]){

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaZimlet.A_name); ---> var  <--- ret=ZaZimletListView.__processMessage(name,itemVal)

[WARNING] Try to use a single 'var' statement per scope.
);var uri=appContextPath+"/../service/upload"; ---> var  <--- html=new Array();var idx=

[WARNING] Try to use a single 'var' statement per scope.
;var html=new Array(); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
var iframeId=Dwt.getNextId(); ---> var  <--- html=["<iframe name='",iframeId,"' id='",iframeId

[WARNING] Try to use a single 'var' statement per scope.
appContextPath+"/public/blank.html":'javascript:""',"' style='position: absolute; top: 0; left: 0; visibility: hidden'></iframe>"]; ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
if(inputElement&&inputElement.value){ ---> var  <--- zimletUploadCallback=new AjxCallback(this,this.uploadCallback

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- msgLine=null;instance[ZaZimlet.A_attachmentId]

[WARNING] Try to use a single 'var' statement per scope.
.getException());}else{ ---> var  <--- done=true;var hasErrors=false;var 

[WARNING] Try to use a single 'var' statement per scope.
;}else{var done=true; ---> var  <--- hasErrors=false;var response=resp.getResponse

[WARNING] Try to use a single 'var' statement per scope.
done=true;var hasErrors=false; ---> var  <--- response=resp.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.DeployZimletResponse; ---> var  <--- msgLines=[];var progress=response[

[WARNING] Try to use a single 'var' statement per scope.
.DeployZimletResponse;var msgLines=[]; ---> var  <--- progress=response[ZaZimlet.A_progress];if

[WARNING] Try to use a single 'var' statement per scope.
){progress=[progress];} ---> var  <--- cnt=progress.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=progress.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- serverName=progress[i].server;var 

[WARNING] Try to use a single 'var' statement per scope.
serverName=progress[i].server; ---> var  <--- status=progress[i].status;if

[WARNING] Try to use a single 'var' statement per scope.
ZaZimlet.STATUS_SUCCEEDED){returnfalse;} ---> var  <--- deployStatus=this.getInstanceValue(ZaZimlet.A_deployStatus)

[WARNING] Try to use a single 'var' statement per scope.
_SPACER_,colSpan:2}]}; ---> var  <--- case2={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
,listType){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;this._listType=

[WARNING] Try to use a single 'var' statement per scope.
.ABSOLUTE_STYLE;this._listType=listType; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
domain,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;var dwtId

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._headerList.length; ---> var  <--- dwtId=Dwt.getNextId();var rowId

[WARNING] Try to use a single 'var' statement per scope.
var dwtId=Dwt.getNextId(); ---> var  <--- rowId=this._listType;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var rowId=this._listType;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- cellWidth=this._getCellWidth(i,{}

[WARNING] Try to use a single 'var' statement per scope.
);if(field=="type"){ ---> var  <--- partialClassName="Domain";var domainType=domain.attrs

[WARNING] Try to use a single 'var' statement per scope.
=="type"){var partialClassName="Domain"; ---> var  <--- domainType=domain.attrs[ZaDomain.A_domainType]

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_allNotebookACLS]._version:1; ---> var  <--- cnt=entry[ZaDomain.A_allNotebookACLS].length

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A_allNotebookACLS].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- aclObj=entry[ZaDomain.A_allNotebookACLS][i

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A_allNotebookACLS][i]; ---> var  <--- _newAclObj={};_newAclObj.gt=aclObj

[WARNING] Try to use a single 'var' statement per scope.
0,x:0};for( ---> var  <--- a in aclObj.acl){_newAclObj.acl

[WARNING] The variable a has already been declared in the same scope...
,x:0};for(var  ---> a <---  in aclObj.acl){_newAclObj.acl[

[WARNING] Try to use a single 'var' statement per scope.
.ZIMLETS_TAB_ATTRS,ZaDomainXFormView.ZIMLETS_TAB_RIGHTS)){ ---> var  <--- allZimlets=ZaZimlet.getAll(ZaZimlet.EXCLUDE_EXTENSIONS)

[WARNING] Try to use a single 'var' statement per scope.
allZimlets=allZimlets.getArray();} ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] The variable cnt has already been declared in the same scope...
=allZimlets.getArray();}var  ---> cnt <--- =allZimlets.length;var _tmpZimlets=[]

[WARNING] Try to use a single 'var' statement per scope.
;}var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
var _tmpZimlets=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
ZaDomainXFormView.zimletChoices.dirtyChoices();} ---> var  <--- isCatchAllEnabled=this._containedObject.attrs[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
.getAttrs[ZaDomain.A_domainDefaultCOSId]){ ---> var  <--- cos=ZaCos.getCosById(this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A2_zimbra_ds].id;for( ---> var  <--- a in entry[ZaDomain.A2_gal_sync_accounts][0

[WARNING] The variable a has already been declared in the same scope...
.A2_zimbra_ds].id;for(var  ---> a <---  in entry[ZaDomain.A2_gal_sync_accounts][0]

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_zimbra_ds].attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] The variable modelItem has already been declared in the same scope...
ZaAccount.A2_zimbra_ds].attrs){var  ---> modelItem <--- =this._localXForm.getModel().getItem

[WARNING] Try to use a single 'var' statement per scope.
].attrs=[];for( ---> var  <--- a in entry[ZaDomain.A2_gal_sync_accounts][0

[WARNING] The variable a has already been declared in the same scope...
.attrs=[];for(var  ---> a <---  in entry[ZaDomain.A2_gal_sync_accounts][0]

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_ldap_ds].attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] The variable modelItem has already been declared in the same scope...
ZaAccount.A2_ldap_ds].attrs){var  ---> modelItem <--- =this._localXForm.getModel().getItem

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAutoProvMode] instanceof Array){for( ---> var  <--- mode=0;mode<this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAutoProvAuthMech] instanceof Array){for( ---> var  <--- mode=0;mode<this._containedObject.

[WARNING] The variable mode has already been declared in the same scope...
A_zimbraAutoProvAuthMech] instanceof Array){for(var  ---> mode <--- =0;mode<this._containedObject.attrs

[WARNING] Try to use a single 'var' statement per scope.
]=new AjxVector();for( ---> var  <--- i=0;i<this._containedObject[

[WARNING] The variable i has already been declared in the same scope...
=new AjxVector();for(var  ---> i <--- =0;i<this._containedObject[ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
A2_zimbraAutoProvServerList].length;i++){ ---> var  <--- server=this._containedObject[ZaDomain.A2_zimbraAutoProvServerList]

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvServerList][i]; ---> var  <--- scheduledDomains=server.attrs[ZaServer.A_zimbraAutoProvScheduledDomains]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaServer.A_zimbraAutoProvScheduledDomains];for( ---> var  <--- j=0;scheduledDomains&&j<scheduledDomains.

[WARNING] Try to use a single 'var' statement per scope.
server.checked=true;}}} ---> var  <--- accountQuota=new Array();accountQuota._version

[WARNING] Try to use a single 'var' statement per scope.
if(ZaTabView.XFormSetObjectMethods.ZaDomainXFormView){ ---> var  <--- methods=ZaTabView.XFormSetObjectMethods.ZaDomainXFormView;var cnt

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaTabView.XFormSetObjectMethods.ZaDomainXFormView; ---> var  <--- cnt=methods.length;var containedObj=this

[WARNING] The variable cnt has already been declared in the same scope...
methods=ZaTabView.XFormSetObjectMethods.ZaDomainXFormView;var  ---> cnt <--- =methods.length;var containedObj=this.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomainXFormView;var cnt=methods.length; ---> var  <--- containedObj=this._containedObject;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var containedObj=this._containedObject;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
containedObj=this._containedObject;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=this.widget.getSelection();

[WARNING] Try to use a single 'var' statement per scope.
getInstanceValue(ZaDomain.A2_acl_selection_cache))){ ---> var  <--- arr=this.getInstanceValue(ZaDomain.A2_acl_selection_cache)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaDomain.A2_acl_selection_cache); ---> var  <--- cnt=arr.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=arr.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj.gt=ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
0];}if(fault){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault);throw

[WARNING] Try to use a single 'var' statement per scope.
throw(ex);}}}} ---> var  <--- domain=new ZaDomain();var instance=

[WARNING] Try to use a single 'var' statement per scope.
}var domain=new ZaDomain(); ---> var  <--- instance=this.getInstance();domain.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.loadNotebookACLs.call(domain); ---> var  <--- oldArray=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
.parent.addAclDlg.getObject(); ---> var  <--- accountName=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A_zimbraNotebookAccount); ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.getGrantNotebookACLsRequest(obj,soapDoc); ---> var  <--- params=new Object();if(accountName

[WARNING] Try to use a single 'var' statement per scope.
){params.accountName=accountName;} ---> var  <--- busyId=Dwt.getNextId();params.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomainXFormView.modifyAclCallback,[params]); ---> var  <--- reqMgrParams={showBusy:true,busyId:busyId

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_acl_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj.gt=instance

[WARNING] Try to use a single 'var' statement per scope.
0,x:0};for( ---> var  <--- a in instance[ZaDomain.A2_acl_selection_cache][0

[WARNING] Try to use a single 'var' statement per scope.
.parent.editAclDlg.getObject(); ---> var  <--- aclSelection=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A2_acl_selection_cache); ---> var  <--- dirty=false;for(var a in obj

[WARNING] Try to use a single 'var' statement per scope.
);var dirty=false;for( ---> var  <--- a in obj.acl){if(obj

[WARNING] Try to use a single 'var' statement per scope.
break;}}if(dirty){ ---> var  <--- accountName=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A_zimbraNotebookAccount); ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.getGrantNotebookACLsRequest(obj,soapDoc); ---> var  <--- params=new Object();if(accountName

[WARNING] Try to use a single 'var' statement per scope.
){params.accountName=accountName;} ---> var  <--- busyId=Dwt.getNextId();params.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomainXFormView.modifyAclCallback,[params]); ---> var  <--- reqMgrParams={showBusy:true,busyId:busyId

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(aclSelectionCache)){return;} ---> var  <--- cnt=aclSelectionCache.length;if(cnt>

[WARNING] Try to use a single 'var' statement per scope.
length;if(cnt>0){ ---> var  <--- accountName=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A_zimbraNotebookAccount); ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.setMethodAttribute("onerror","stop"); ---> var  <--- accountName=this.getModel().getInstanceValue(

[WARNING] The variable accountName has already been declared in the same scope...
.setMethodAttribute("onerror","stop");var  ---> accountName <--- =this.getModel().getInstanceValue(this

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.getRevokeNotebookACLsRequest(aclSelectionCache,soapDoc); ---> var  <--- params=new Object();if(accountName

[WARNING] Try to use a single 'var' statement per scope.
){params.accountName=accountName;} ---> var  <--- busyId=Dwt.getNextId();params.

[WARNING] Try to use a single 'var' statement per scope.
ZaDomainXFormView.modifyAclCallback,[params]); ---> var  <--- reqMgrParams={showBusy:true,busyId:busyId

[WARNING] Try to use a single 'var' statement per scope.
A_zimbraDomainStatus]==ZaDomain.DOMAIN_STATUS_SHUTDOWN)){ ---> var  <--- oldVal=this.getInstanceValue();returnoldVal

[WARNING] Try to use a single 'var' statement per scope.
){val=value;}else{ ---> var  <--- cos=ZaCos.getCosByName(value,form.

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- instance=this.getInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
.getParentItem().getRefPath(); ---> var  <--- attributePath=parentItemPath+"/"+attributeRelativepath;var value

[WARNING] Try to use a single 'var' statement per scope.
var attributePath=parentItemPath+"/"+attributeRelativepath; ---> var  <--- value=this.getInstanceValue(attributePath);var 

[WARNING] Try to use a single 'var' statement per scope.
value=this.getInstanceValue(attributePath); ---> var  <--- empty=AjxUtil.isEmpty(value);return

[WARNING] Try to use a single 'var' statement per scope.
.A2_diskUsage;params.sortAscending=0; ---> var  <--- cb=new AjxCallback(this.getForm()

[WARNING] Try to use a single 'var' statement per scope.
{result.hasMore=resp.more; ---> var  <--- accounts=resp.account;var accountArr=new 

[WARNING] Try to use a single 'var' statement per scope.
more;var accounts=resp.account; ---> var  <--- accountArr=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
accountArr=new Array();for( ---> var  <--- i=0;i<accounts.length;

[WARNING] Try to use a single 'var' statement per scope.
;}result.mbxes=accountArr;} ---> var  <--- _version=this.getInstanceValue(ZaDomain.A2_domain_account_quota)

[WARNING] Try to use a single 'var' statement per scope.
result.mbxes,ZaDomain.A2_domain_account_quota); ---> var  <--- accountQuotaPool=this.getItemById(this.getId(

[WARNING] Try to use a single 'var' statement per scope.
().parent.getHtmlElement(); ---> var  <--- totalWidth=parseInt(parentPage.style.width)

[WARNING] Try to use a single 'var' statement per scope.
.getForm().parent;try{ ---> var  <--- totalHeight=parentPage.getSize().y;

[WARNING] Try to use a single 'var' statement per scope.
=parentPage.getSize().y; ---> var  <--- formHeaders=this.getForm().getItemsById(

[WARNING] Try to use a single 'var' statement per scope.
getForm().getItemsById("xform_header"); ---> var  <--- headHeight=0;if(formHeaders){var 

[WARNING] Try to use a single 'var' statement per scope.
headHeight=0;if(formHeaders){ ---> var  <--- formHeader=formHeaders[0];if(formHeader

[WARNING] Try to use a single 'var' statement per scope.
.getSize(formHeader).y;} ---> var  <--- containerHeight=2;if(AjxEnv.isIE)

[WARNING] Try to use a single 'var' statement per scope.
hasReadPermission]}]}]}); ---> var  <--- tabIx=++this.TAB_INDEX;var tabBar=

[WARNING] Try to use a single 'var' statement per scope.
;var tabIx=++this.TAB_INDEX; ---> var  <--- tabBar={type:_TAB_BAR_,ref:ZaModel

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_GeneralPage}); ---> var  <--- switchGroup={type:_SWITCH_,items:[

[WARNING] Try to use a single 'var' statement per scope.
.DEFAULT_LOCALE].join(""); ---> var  <--- case1={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
width:"98%",cellpadding:2}; ---> var  <--- case1Items=[{type:_ZA_TOP_GROUPER_,label:

[WARNING] Try to use a single 'var' statement per scope.
try{var value=callArgs.value; ---> var  <--- event=callArgs.event;var callback=callArgs

[WARNING] Try to use a single 'var' statement per scope.
value;var event=callArgs.event; ---> var  <--- callback=callArgs.callback;var busyId=Dwt

[WARNING] Try to use a single 'var' statement per scope.
event;var callback=callArgs.callback; ---> var  <--- busyId=Dwt.getNextId();var params

[WARNING] Try to use a single 'var' statement per scope.
var busyId=Dwt.getNextId(); ---> var  <--- params=new Object();dataCallback=new 

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.Domain_Tab_GAL}); ---> var  <--- case2={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
width:"98%",cellpadding:2}; ---> var  <--- case2Items=[{type:_ZA_TOP_GROUPER_,label:

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.Domain_Tab_Authentication}); ---> var  <--- case3={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.Domain_Tab_VirtualHost}); ---> var  <--- case4={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Features}); ---> var  <--- caseFeature={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.Domain_Tab_Advanced}); ---> var  <--- case5={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Interop}); ---> var  <--- case6={type:_ZATABCASE_,caseKey:tabIx

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Zimlets}); ---> var  <--- case7={type:_ZATABCASE_,id:"account_form_zimlets_tab"

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Themes}); ---> var  <--- case8={type:_ZATABCASE_,id:"domain_form_skin_tab"

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Certificate}); ---> var  <--- case9a={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_MBX}); ---> var  <--- case10={type:_SUPER_TABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- itemArr=item.split(":");var 

[WARNING] Try to use a single 'var' statement per scope.
itemArr=item.split(":"); ---> var  <--- cosId=itemArr[0];var cos=

[WARNING] Try to use a single 'var' statement per scope.
;var cosId=itemArr[0]; ---> var  <--- cos=ZaCos.getCosById(cosId);var 

[WARNING] Try to use a single 'var' statement per scope.
cos=ZaCos.getCosById(cosId); ---> var  <--- cosDisplayValue;if(cos){cosDisplayValue=cos

[WARNING] Try to use a single 'var' statement per scope.
.ERROR_INVALID_COS_VALUE,[cosId]);} ---> var  <--- limits=itemArr[1];var idx=

[WARNING] Try to use a single 'var' statement per scope.
}var limits=itemArr[1]; ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- itemArr=item.split(":");var 

[WARNING] Try to use a single 'var' statement per scope.
itemArr=item.split(":"); ---> var  <--- feature=ZaUtil.getListItemLabel(ZaCos.MAJOR_FEATURES_CHOICES,

[WARNING] Try to use a single 'var' statement per scope.
0])||itemArr[0]; ---> var  <--- limits=itemArr[1];var idx=

[WARNING] Try to use a single 'var' statement per scope.
;var limits=itemArr[1]; ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
.A2_gal_sync_accounts_set]=[];for( ---> var  <--- i in entry[ZaDomain.A2_gal_sync_accounts_set]){

[WARNING] Try to use a single 'var' statement per scope.
.A_domainName).split("."); ---> var  <--- szSearchBase="";var coma="";for

[WARNING] Try to use a single 'var' statement per scope.
(".");var szSearchBase=""; ---> var  <--- coma="";for(var ix in parts

[WARNING] Try to use a single 'var' statement per scope.
"";var coma="";for( ---> var  <--- ix in parts){szSearchBase+=coma;szSearchBase

[WARNING] Try to use a single 'var' statement per scope.
"dc=";szSearchBase+=parts[ix]; ---> var  <--- coma=",";}form.getModel()

[WARNING] The variable coma has already been declared in the same scope...
;szSearchBase+=parts[ix];var  ---> coma <--- =",";}form.getModel().

[WARNING] Try to use a single 'var' statement per scope.
instance,ZaDomain.A2_isTestingSync,1); ---> var  <--- callback=new AjxCallback(this,ZaNewDomainXWizard.checkSyncConfigCallBack

[WARNING] Try to use a single 'var' statement per scope.
if(arg.isException()){ ---> var  <--- msg=[arg.getException().detail

[WARNING] Try to use a single 'var' statement per scope.
.A_GALSyncTestMessage,msg);}else{ ---> var  <--- searchResponse=arg.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
instance,ZaDomain.A2_isTestingGAL,1); ---> var  <--- callback=new AjxCallback(this,ZaNewDomainXWizard.checkGALConfigCallBack

[WARNING] Try to use a single 'var' statement per scope.
if(arg.isException()){ ---> var  <--- msg=[arg.getException().detail

[WARNING] Try to use a single 'var' statement per scope.
.A_GALTestSearchResults,null);}else{ ---> var  <--- searchResponse=arg.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.A_GALTestSearchResults,null);}else{ ---> var  <--- searchResults=new Array();if(searchResponse

[WARNING] Try to use a single 'var' statement per scope.
cn&&searchResponse.cn.length){ ---> var  <--- len=searchResponse.cn.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=searchResponse.cn.length;for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<len;ix++){ ---> var  <--- cnObject=new Object();if(searchResponse

[WARNING] Try to use a single 'var' statement per scope.
[ix]._attrs){for( ---> var  <--- a in searchResponse.cn[ix]._attrs

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_AuthADDomainName]);} ---> var  <--- callback=new AjxCallback(this,ZaNewDomainXWizard.checkAuthCallBack

[WARNING] Try to use a single 'var' statement per scope.
().msg);}else{ ---> var  <--- response=arg.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A_GALSyncUseGALSearch); ---> var  <--- val2=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
(!isCreated){returntrue;} ---> var  <--- GALAccountSet=this._containedObject[ZaDomain.A2_gal_sync_accounts_set]

[WARNING] Try to use a single 'var' statement per scope.
this._containedObject[ZaDomain.A2_gal_sync_accounts_set]; ---> var  <--- isFound=false;var currentGALAccount;for(var 

[WARNING] Try to use a single 'var' statement per scope.
.A2_gal_sync_accounts_set];var isFound=false; ---> var  <--- currentGALAccount;for(var i in GALAccountSet){

[WARNING] Try to use a single 'var' statement per scope.
isFound=false;var currentGALAccount;for( ---> var  <--- i in GALAccountSet){currentGALAccount=GALAccountSet[i

[WARNING] Try to use a single 'var' statement per scope.
null,"fullName",true,true); ---> var  <--- labelVisibility={};labelVisibility[ZaNewDomainXWizard.GAL_CONFIG_STEP_2

[WARNING] Try to use a single 'var' statement per scope.
){var form=this._localXForm; ---> var  <--- instance=form.getInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
("id",domain.id);} ---> var  <--- domainAlias=domain.attrs[ZaDomain.A_domainName]

[WARNING] Try to use a single 'var' statement per scope.
domain.attrs[ZaDomain.A_domainName]; ---> var  <--- domainTarget=domain.attrs[ZaDomain.A_zimbraMailCatchAllForwardingAddress]

[WARNING] Try to use a single 'var' statement per scope.
.A_domainName].split("."); ---> var  <--- szSearchBase="";var coma="";for

[WARNING] Try to use a single 'var' statement per scope.
(".");var szSearchBase=""; ---> var  <--- coma="";for(var ix in parts

[WARNING] Try to use a single 'var' statement per scope.
"";var coma="";for( ---> var  <--- ix in parts){szSearchBase+=coma;szSearchBase

[WARNING] Try to use a single 'var' statement per scope.
"dc=";szSearchBase+=parts[ix]; ---> var  <--- coma=",";}this.setInstanceValue(szSearchBase

[WARNING] The variable coma has already been declared in the same scope...
;szSearchBase+=parts[ix];var  ---> coma <--- =",";}this.setInstanceValue(szSearchBase,

[WARNING] Try to use a single 'var' statement per scope.
instance,ZaDomain.A2_isTestingSync,1); ---> var  <--- callback=new AjxCallback(this,ZaGALConfigXWizard.checkSyncConfigCallBack

[WARNING] Try to use a single 'var' statement per scope.
if(arg.isException()){ ---> var  <--- msg=[arg.getException().detail

[WARNING] Try to use a single 'var' statement per scope.
.A_GALSyncTestMessage,msg);}else{ ---> var  <--- searchResponse=arg.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
instance,ZaDomain.A2_isTestingGAL,1); ---> var  <--- callback=new AjxCallback(this,ZaGALConfigXWizard.checkGALConfigCallBack

[WARNING] Try to use a single 'var' statement per scope.
if(arg.isException()){ ---> var  <--- msg=[arg.getException().detail

[WARNING] Try to use a single 'var' statement per scope.
.A_GALTestSearchResults,null);}else{ ---> var  <--- searchResponse=arg.getResponse().Body.

[WARNING] Try to use a single 'var' statement per scope.
.A_GALTestSearchResults,null);}else{ ---> var  <--- searchResults=new Array();if(searchResponse

[WARNING] Try to use a single 'var' statement per scope.
cn&&searchResponse.cn.length){ ---> var  <--- len=searchResponse.cn.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=searchResponse.cn.length;for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<len;ix++){ ---> var  <--- cnObject=new Object();if(searchResponse

[WARNING] Try to use a single 'var' statement per scope.
[ix]._attrs){for( ---> var  <--- a in searchResponse.cn[ix]._attrs

[WARNING] Try to use a single 'var' statement per scope.
(!obj){returnresult;} ---> var  <--- existing=obj[ZaDomain.A2_gal_sync_accounts];if

[WARNING] Try to use a single 'var' statement per scope.
)){returnresult;}for( ---> var  <--- i=0;i<existing.length;

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDomain.A_GALSyncUseGALSearch); ---> var  <--- val2=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
null,"fullName",true,true); ---> var  <--- labelVisibility={};labelVisibility[ZaGALConfigXWizard.GAL_CONFIG_STEP_2

[WARNING] Try to use a single 'var' statement per scope.
).getInstanceValue(ZaDomain.A2_gal_sync_accounts); ---> var  <--- total=0;if(existing&&existing instanceof 

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- ldapUrls=instance.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaDomain.A_AuthLdapURL]; ---> var  <--- newUrls=[];if(ZaSettings.isDomainAdmin

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_allowClearTextLDAPAuth]="FALSE";for( ---> var  <--- i=0;i<ldapUrls.length;

[WARNING] Try to use a single 'var' statement per scope.
<ldapUrls.length;i++){ ---> var  <--- ldapUrl=ldapUrls[i];if(ldapUrl

[WARNING] Try to use a single 'var' statement per scope.
);}}}else{for( ---> var  <--- i=0;i<ldapUrls.length;

[WARNING] The variable i has already been declared in the same scope...
;}}}else{for(var  ---> i <--- =0;i<ldapUrls.length;i

[WARNING] Try to use a single 'var' statement per scope.
<ldapUrls.length;i++){ ---> var  <--- ldapUrl=ldapUrls[i];if(ldapUrl

[WARNING] The variable ldapUrl has already been declared in the same scope...
ldapUrls.length;i++){var  ---> ldapUrl <--- =ldapUrls[i];if(ldapUrl==

[WARNING] Try to use a single 'var' statement per scope.
.AUTH_CONFIG_AUTH_SET_STEP){var nextEnabled=false; ---> var  <--- authMode=this._containedObject.attrs[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
this._containedObject[ZaModel.currentStep]; ---> var  <--- nextStep=curStep+1;if(curStep==

[WARNING] Try to use a single 'var' statement per scope.
.A_AuthMech]==ZaDomain.AuthMech_ldap){ ---> var  <--- temp=this._containedObject.attrs[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_allowClearTextLDAPAuth]="FALSE";} ---> var  <--- serverList=ZaApp.getInstance().getServerList(

[WARNING] Try to use a single 'var' statement per scope.
().getArray();for( ---> var  <--- ix=0;ix<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraSpnegoAuthEnabled]="TRUE";} ---> var  <--- globalConfig=ZaApp.getInstance().getGlobalConfig(

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- ldapUrls=instance.attrs[ZaDomain.A_AuthLdapURL]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaDomain.A_AuthLdapURL]; ---> var  <--- newUrls=[];if(ZaSettings.isDomainAdmin

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_allowClearTextLDAPAuth]="FALSE";for( ---> var  <--- i=0;i<ldapUrls.length;

[WARNING] Try to use a single 'var' statement per scope.
<ldapUrls.length;i++){ ---> var  <--- ldapUrl=ldapUrls[i];if(ldapUrl

[WARNING] Try to use a single 'var' statement per scope.
);}}}else{for( ---> var  <--- i=0;i<ldapUrls.length;

[WARNING] The variable i has already been declared in the same scope...
;}}}else{for(var  ---> i <--- =0;i<ldapUrls.length;i

[WARNING] Try to use a single 'var' statement per scope.
<ldapUrls.length;i++){ ---> var  <--- ldapUrl=ldapUrls[i];if(ldapUrl

[WARNING] The variable ldapUrl has already been declared in the same scope...
ldapUrls.length;i++){var  ---> ldapUrl <--- =ldapUrls[i];if(ldapUrl==

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_zimbraSpnegoApplyFor]=ZaItem.DOMAIN; ---> var  <--- parent=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaDomain.A_zimbraWebClientLoginURLAllowedUA); ---> var  <--- obj={};if(typeofallowedUAs==

[WARNING] Try to use a single 'var' statement per scope.
(obj){instance=obj;} ---> var  <--- titleText=ZaMsg.SpnegoSettingGlobalDialogTitle;if(caller==

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_zimbraSpnegoApplyFor]=ZaItem.SERVER; ---> var  <--- serverList=ZaApp.getInstance().getServerList(

[WARNING] Try to use a single 'var' statement per scope.
.getServerList().getArray(); ---> var  <--- serverObj=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var serverObj=null;for( ---> var  <--- i=0;i<serverList.length;

[WARNING] Try to use a single 'var' statement per scope.
.dialogs.spnegoUACustomDialog.getObject(); ---> var  <--- allowedUA=[];if(obj[ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
{return;}var attr=null; ---> var  <--- soapDoc=null;var obj=ZaApp.getInstance

[WARNING] Try to use a single 'var' statement per scope.
attr=null;var soapDoc=null; ---> var  <--- obj=ZaApp.getInstance().dialogs.

[WARNING] Try to use a single 'var' statement per scope.
.A2_zimbraSpnegoApplyFor]==ZaItem.GLOBAL_CONFIG){ ---> var  <--- autoDlgForm=ZaApp.getInstance().dialogs.

[WARNING] Try to use a single 'var' statement per scope.
("n",ZaDomain.A2_zimbraSpnegoAuthErrorURL);} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
("n",ZaDomain.A2_zimbraSpnegoAuthTargetName);} ---> var  <--- params=new Object();params.soapDoc

[WARNING] The variable params has already been declared in the same scope...
"n",ZaDomain.A2_zimbraSpnegoAuthTargetName);}var  ---> params <--- =new Object();params.soapDoc=

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] The variable reqMgrParams has already been declared in the same scope...
);params.soapDoc=soapDoc;var  ---> reqMgrParams <--- ={controller:ZaApp.getInstance().

[WARNING] Try to use a single 'var' statement per scope.
(this,this._applyButtonListener)); ---> var  <--- helpButton=new DwtDialog_ButtonDescriptor(ZaXWizardDialog.HELP_BUTTON,ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TBB_zimbraAutoProvEmailSetting}); ---> var  <--- cases=[];var case1={type

[WARNING] Try to use a single 'var' statement per scope.
});var cases=[]; ---> var  <--- case1={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case1); ---> var  <--- case2={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case2); ---> var  <--- case3={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case3); ---> var  <--- case4={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case4); ---> var  <--- case5={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case5); ---> var  <--- xFormObject={numCols:1,items:[

[WARNING] Try to use a single 'var' statement per scope.
.setInstanceValue(value);return;} ---> var  <--- instance=this.getInstance();instance[

[WARNING] Try to use a single 'var' statement per scope.
)&&this._checkLazyConfig()){ ---> var  <--- savedObj=this.getObject();this.

[WARNING] Try to use a single 'var' statement per scope.
function(){var isError=false; ---> var  <--- errorMsg="";if(!this._containedObject

[WARNING] Try to use a single 'var' statement per scope.
function(){var isError=false; ---> var  <--- errorMsg="";if(!isError&&this

[WARNING] Try to use a single 'var' statement per scope.
_containedObject.attrs[ZaDomain.A_zimbraAutoProvAttrMap]; ---> var  <--- obj=this.getObject();var isGiven

[WARNING] Try to use a single 'var' statement per scope.
var obj=this.getObject(); ---> var  <--- isGiven=false;if(attrMaps){if

[WARNING] Try to use a single 'var' statement per scope.
attrMaps=[attrMaps];}for( ---> var  <--- i=0;i<attrMaps.length&&

[WARNING] Try to use a single 'var' statement per scope.
length&&!isGiven;i++){ ---> var  <--- kv=attrMaps[i].split("="

[WARNING] Try to use a single 'var' statement per scope.
{if(!this._confirmPasswordSettingDialog){ ---> var  <--- height="220px";if(AjxEnv.isIE)

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAutoProvAuthMech] instanceof Array){for( ---> var  <--- mode=0;mode<entry.attrs[

[WARNING] The variable mode has already been declared in the same scope...
A_zimbraAutoProvAuthMech] instanceof Array){for(var  ---> mode <--- =0;mode<entry.attrs[ZaDomain

[WARNING] Try to use a single 'var' statement per scope.
]=new AjxVector();for( ---> var  <--- i=0;i<entry[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
A2_zimbraAutoProvServerList].length;i++){ ---> var  <--- server=entry[ZaDomain.A2_zimbraAutoProvServerList][i

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvServerList][i]; ---> var  <--- scheduledDomains=server.attrs[ZaServer.A_zimbraAutoProvScheduledDomains]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaServer.A_zimbraAutoProvScheduledDomains];for( ---> var  <--- j=0;scheduledDomains&&j<scheduledDomains.

[WARNING] Try to use a single 'var' statement per scope.
var newObj=this.getObject(); ---> var  <--- oldObj=this._autoprovLdapObject;if((oldObj

[WARNING] Try to use a single 'var' statement per scope.
.getForm().getInstance(); ---> var  <--- formParent=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
._checkGeneralConfig()){return;} ---> var  <--- soapDoc=AjxSoapDoc.create("SearchAutoProvDirectoryRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("keyAttr","name"); ---> var  <--- attr=soapDoc.set("domain",instance.

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("by","id"); ---> var  <--- query="(|(mail=*)(zimbraMailAlias=*)(uid=*))";if(instance[ZaSearch.

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("query",query); ---> var  <--- limit=ZaSettings.RESULTSPERPAGE;if(!instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]=0;} ---> var  <--- offset=instance[ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]*ZaSettings

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]*ZaSettings.RESULTSPERPAGE; ---> var  <--- attrs=[ZaAccount.A_name,ZaAccount.A_mail

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvSearchActivated,"FALSE"); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
busyMsg:ZaMsg.BUSY_AUTOPROV_GETACCT};try{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.SearchAutoProvDirectoryResponse.entry){return;} ---> var  <--- provAcctList=[];var objs=resp.

[WARNING] Try to use a single 'var' statement per scope.
return;}var provAcctList=[]; ---> var  <--- objs=resp.Body.SearchAutoProvDirectoryResponse.entry;

[WARNING] Try to use a single 'var' statement per scope.
=resp.Body.SearchAutoProvDirectoryResponse.entry; ---> var  <--- searchTotal=resp.Body.SearchAutoProvDirectoryResponse.searchTotal;

[WARNING] Try to use a single 'var' statement per scope.
.Body.SearchAutoProvDirectoryResponse.searchTotal;for( ---> var  <--- i=0;objs&&i<objs.

[WARNING] Try to use a single 'var' statement per scope.
<objs.length;i++){ ---> var  <--- obj=objs[i];var acct=

[WARNING] Try to use a single 'var' statement per scope.
{var obj=objs[i]; ---> var  <--- acct=new Object();acct.dn

[WARNING] Try to use a single 'var' statement per scope.
;acct.dn=obj.dn; ---> var  <--- len=obj.a.length;acct.

[WARNING] Try to use a single 'var' statement per scope.
attrs=new Array();for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvAccountPool,provAcctList); ---> var  <--- poolTotalPages=Math.ceil(searchTotal/ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var sourceListItems

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- sourceListItems=form.getItemsById(ZaDomain.A2_zimbraAutoProvAccountPool)

[WARNING] Try to use a single 'var' statement per scope.
&&sourceListItems[0].widget){ ---> var  <--- selection=sourceListItems[0].widget.getSelection

[WARNING] Try to use a single 'var' statement per scope.
0].widget.getSelection(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountTargetPool]:[]; ---> var  <--- list=(selection instanceof AjxVector)?selection.

[WARNING] Try to use a single 'var' statement per scope.
list.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpTargetList=[];var cnt2=currentTargetList.

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpTargetList=[]; ---> var  <--- cnt2=currentTargetList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=currentTargetList.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] Try to use a single 'var' statement per scope.
tmpTargetList.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpList=[];var cnt=list.

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpList=[]; ---> var  <--- cnt=list.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=list.length;for( ---> var  <--- i=cnt-1;i>=0;

[WARNING] The variable i has already been declared in the same scope...
cnt=list.length;for(var  ---> i <--- =cnt-1;i>=0;i

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- dup=false;cnt2=tmpTargetList.length;

[WARNING] Try to use a single 'var' statement per scope.
;cnt2=tmpTargetList.length;for( ---> var  <--- j=cnt2-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var oldArr

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- oldArr=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountTargetPool]:[]; ---> var  <--- arr=instance[ZaDomain.A2_zimbraAutoProvAccountPool];var 

[WARNING] Try to use a single 'var' statement per scope.
arr=instance[ZaDomain.A2_zimbraAutoProvAccountPool]; ---> var  <--- arr2=new Array();if(arr

[WARNING] Try to use a single 'var' statement per scope.
Array();if(arr){ ---> var  <--- cnt=arr.length;var oldCnt=oldArr

[WARNING] Try to use a single 'var' statement per scope.
){var cnt=arr.length; ---> var  <--- oldCnt=oldArr.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var oldCnt=oldArr.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- found=false;for(var j=oldCnt

[WARNING] Try to use a single 'var' statement per scope.
){var found=false;for( ---> var  <--- j=oldCnt-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvAccountTargetPool,arr2); ---> var  <--- instance=form.getInstance();var currentTargetList

[WARNING] The variable instance has already been declared in the same scope...
,ZaDomain.A2_zimbraAutoProvAccountTargetPool,arr2);var  ---> instance <--- =form.getInstance();var currentTargetList=

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var targetListItems

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- targetListItems=form.getItemsById(ZaDomain.A2_zimbraAutoProvAccountTargetPool)

[WARNING] Try to use a single 'var' statement per scope.
&&targetListItems[0].widget){ ---> var  <--- selection=targetListItems[0].widget.getSelection

[WARNING] Try to use a single 'var' statement per scope.
0].widget.getSelection(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
currentTargetList.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpTargetList=[];var list=(selection

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpTargetList=[]; ---> var  <--- list=(selection instanceof AjxVector)?selection.

[WARNING] Try to use a single 'var' statement per scope.
list.sort(ZaItem.compareNamesDesc); ---> var  <--- cnt=list.length;var cnt2=currentTargetList

[WARNING] Try to use a single 'var' statement per scope.
);var cnt=list.length; ---> var  <--- cnt2=currentTargetList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=currentTargetList.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] Try to use a single 'var' statement per scope.
currentTargetList[i]);}for( ---> var  <--- i=cnt-1;i>=0;

[WARNING] The variable i has already been declared in the same scope...
[i]);}for(var  ---> i <--- =cnt-1;i>=0;i

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- cnt2=tmpTargetList.length;for(var j

[WARNING] The variable cnt2 has already been declared in the same scope...
i>=0;i--){var  ---> cnt2 <--- =tmpTargetList.length;for(var j=

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=tmpTargetList.length;for( ---> var  <--- j=cnt2-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();instance[

[WARNING] Try to use a single 'var' statement per scope.
.A2_zimbraAutoProvAccountTargetPool]=new Array(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getObject(); ---> var  <--- acctlist=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool];if

[WARNING] Try to use a single 'var' statement per scope.
.length<1){return;} ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror","continue");for( ---> var  <--- i=0;i<acctlist.length;

[WARNING] Try to use a single 'var' statement per scope.
<acctlist.length;i++){ ---> var  <--- autoProvDoc=soapDoc.set("AutoProvAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- attr=soapDoc.set("domain",instance.

[WARNING] Try to use a single 'var' statement per scope.
.A2_zimbraAutoProvAccountPassword],autoProvDoc);}} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
type&&targetEl.type=="checkbox"){ ---> var  <--- item=targetEl.value;var form=this

[WARNING] Try to use a single 'var' statement per scope.
){var item=targetEl.value; ---> var  <--- form=this.getForm();var instance

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var checkedFiltersVector

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- checkedFiltersVector=null;checkedFiltersVector=instance[ZaDomain.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(10); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;var checked="";if

[WARNING] Try to use a single 'var' statement per scope.
.TYPE_LIST_ITEM);var idx=0; ---> var  <--- checked="";if(item.checked)

[WARNING] Try to use a single 'var' statement per scope.
.getInstance()){return;} ---> var  <--- pw=xformObj.getInstanceValue(ZaDomain.A2_zimbraAutoProvAccountPasswordInDlg)

[WARNING] Try to use a single 'var' statement per scope.
xformObj.getInstanceValue(ZaDomain.A2_zimbraAutoProvAccountPasswordInDlg); ---> var  <--- pwAgain=xformObj.getInstanceValue(ZaDomain.A2_zimbraAutoProvAccountPasswordAgainInDlg)

[WARNING] Try to use a single 'var' statement per scope.
.setEnabled(true);}else{ ---> var  <--- is1stTime=AjxUtil.isEmpty(pwAgain);xformObj

[WARNING] Try to use a single 'var' statement per scope.
.getForm().getInstance(); ---> var  <--- formParent=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- soapDoc=AjxSoapDoc.create("SearchAutoProvDirectoryRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("keyAttr","name"); ---> var  <--- attr=soapDoc.set("domain",instance.

[WARNING] Try to use a single 'var' statement per scope.
attr.setAttribute("by","id"); ---> var  <--- query="";if(instance[ZaSearch.

[WARNING] Try to use a single 'var' statement per scope.
soapDoc.set("query",query); ---> var  <--- limit=ZaSettings.RESULTSPERPAGE;if(!instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]=0;} ---> var  <--- offset=instance[ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]*ZaSettings

[WARNING] Try to use a single 'var' statement per scope.
ZaDomain.A2_zimbraAutoProvAccountPoolPageNum]*ZaSettings.RESULTSPERPAGE; ---> var  <--- attrs=[ZaAccount.A_name,ZaAccount.A_mail

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvSearchActivated,"FALSE"); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
busyMsg:ZaMsg.BUSY_AUTOPROV_GETACCT};try{ ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.SearchAutoProvDirectoryResponse.entry){return;} ---> var  <--- provAcctList=[];var objs=resp.

[WARNING] Try to use a single 'var' statement per scope.
return;}var provAcctList=[]; ---> var  <--- objs=resp.Body.SearchAutoProvDirectoryResponse.entry;

[WARNING] Try to use a single 'var' statement per scope.
=resp.Body.SearchAutoProvDirectoryResponse.entry; ---> var  <--- searchTotal=resp.Body.SearchAutoProvDirectoryResponse.searchTotal;

[WARNING] Try to use a single 'var' statement per scope.
.Body.SearchAutoProvDirectoryResponse.searchTotal;for( ---> var  <--- i=0;objs&&i<objs.

[WARNING] Try to use a single 'var' statement per scope.
<objs.length;i++){ ---> var  <--- obj=objs[i];var acct=

[WARNING] Try to use a single 'var' statement per scope.
{var obj=objs[i]; ---> var  <--- acct=new Object();acct.dn

[WARNING] Try to use a single 'var' statement per scope.
;acct.dn=obj.dn; ---> var  <--- len=obj.a.length;acct.

[WARNING] Try to use a single 'var' statement per scope.
attrs=new Array();for( ---> var  <--- ix=0;ix<len;ix++

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvAccountPool,provAcctList); ---> var  <--- poolTotalPages=Math.ceil(searchTotal/ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var sourceListItems

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- sourceListItems=form.getItemsById(ZaDomain.A2_zimbraAutoProvAccountPool)

[WARNING] Try to use a single 'var' statement per scope.
&&sourceListItems[0].widget){ ---> var  <--- selection=sourceListItems[0].widget.getSelection

[WARNING] Try to use a single 'var' statement per scope.
0].widget.getSelection(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountTargetPool]:[]; ---> var  <--- list=(selection instanceof AjxVector)?selection.

[WARNING] Try to use a single 'var' statement per scope.
list.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpTargetList=[];var cnt2=currentTargetList.

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpTargetList=[]; ---> var  <--- cnt2=currentTargetList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=currentTargetList.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] Try to use a single 'var' statement per scope.
tmpTargetList.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpList=[];var cnt=list.

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpList=[]; ---> var  <--- cnt=list.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=list.length;for( ---> var  <--- i=cnt-1;i>=0;

[WARNING] The variable i has already been declared in the same scope...
cnt=list.length;for(var  ---> i <--- =cnt-1;i>=0;i

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- dup=false;cnt2=tmpTargetList.length;

[WARNING] Try to use a single 'var' statement per scope.
;cnt2=tmpTargetList.length;for( ---> var  <--- j=cnt2-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var oldArr

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- oldArr=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
[ZaDomain.A2_zimbraAutoProvAccountTargetPool]:[]; ---> var  <--- arr=instance[ZaDomain.A2_zimbraAutoProvAccountPool];var 

[WARNING] Try to use a single 'var' statement per scope.
arr=instance[ZaDomain.A2_zimbraAutoProvAccountPool]; ---> var  <--- arr2=new Array();if(arr

[WARNING] Try to use a single 'var' statement per scope.
Array();if(arr){ ---> var  <--- cnt=arr.length;var oldCnt=oldArr

[WARNING] Try to use a single 'var' statement per scope.
){var cnt=arr.length; ---> var  <--- oldCnt=oldArr.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var oldCnt=oldArr.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;ix<cnt;ix++){ ---> var  <--- found=false;for(var j=oldCnt

[WARNING] Try to use a single 'var' statement per scope.
){var found=false;for( ---> var  <--- j=oldCnt-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
),ZaDomain.A2_zimbraAutoProvAccountTargetPool,arr2); ---> var  <--- instance=form.getInstance();var currentTargetList

[WARNING] The variable instance has already been declared in the same scope...
,ZaDomain.A2_zimbraAutoProvAccountTargetPool,arr2);var  ---> instance <--- =form.getInstance();var currentTargetList=

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();var targetListItems

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- targetListItems=form.getItemsById(ZaDomain.A2_zimbraAutoProvAccountTargetPool)

[WARNING] Try to use a single 'var' statement per scope.
&&targetListItems[0].widget){ ---> var  <--- selection=targetListItems[0].widget.getSelection

[WARNING] Try to use a single 'var' statement per scope.
0].widget.getSelection(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
currentTargetList.sort(ZaItem.compareNamesDesc); ---> var  <--- tmpTargetList=[];var list=(selection

[WARNING] Try to use a single 'var' statement per scope.
compareNamesDesc);var tmpTargetList=[]; ---> var  <--- list=(selection instanceof AjxVector)?selection.

[WARNING] Try to use a single 'var' statement per scope.
list.sort(ZaItem.compareNamesDesc); ---> var  <--- cnt=list.length;var cnt2=currentTargetList

[WARNING] Try to use a single 'var' statement per scope.
);var cnt=list.length; ---> var  <--- cnt2=currentTargetList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=currentTargetList.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] Try to use a single 'var' statement per scope.
currentTargetList[i]);}for( ---> var  <--- i=cnt-1;i>=0;

[WARNING] The variable i has already been declared in the same scope...
[i]);}for(var  ---> i <--- =cnt-1;i>=0;i

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- cnt2=tmpTargetList.length;for(var j

[WARNING] The variable cnt2 has already been declared in the same scope...
i>=0;i--){var  ---> cnt2 <--- =tmpTargetList.length;for(var j=

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=tmpTargetList.length;for( ---> var  <--- j=cnt2-1;j>=0;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- instance=form.getInstance();instance[

[WARNING] Try to use a single 'var' statement per scope.
.A2_zimbraAutoProvAccountTargetPool]=new Array(); ---> var  <--- currentTargetList=instance[ZaDomain.A2_zimbraAutoProvAccountTargetPool]?instance

[WARNING] Try to use a single 'var' statement per scope.
.parent.handleManualProvDlg.getObject(); ---> var  <--- instance=this.getInstance();var acctlist

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- acctlist=this.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstanceValue(instance,ZaDomain.A2_zimbraAutoProvAccountTargetPool); ---> var  <--- soapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror","continue");for( ---> var  <--- i=0;i<acctlist.length;

[WARNING] Try to use a single 'var' statement per scope.
<acctlist.length;i++){ ---> var  <--- autoProvDoc=soapDoc.set("AutoProvAccountRequest",null,

[WARNING] Try to use a single 'var' statement per scope.
null,null,ZaZimbraAdmin.URN); ---> var  <--- attr=soapDoc.set("domain",instance.

[WARNING] Try to use a single 'var' statement per scope.
.setAttribute("by","dn");} ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
[1].onChange=null;} ---> var  <--- visibleBoxes=this.getInheritedProperty("visibleBoxes");if

[WARNING] Try to use a single 'var' statement per scope.
[1].visibleBoxes=visibleBoxes;} ---> var  <--- dataFetcherMethod=this.getInheritedProperty("dataFetcherMethod");if

[WARNING] Try to use a single 'var' statement per scope.
[0].dataFetcherMethod=dataFetcherMethod;} ---> var  <--- toolTipContent=this.getInheritedProperty("toolTipContent");if

[WARNING] Try to use a single 'var' statement per scope.
[1].onChange=null;} ---> var  <--- visibleBoxes=this.getInheritedProperty("visibleBoxes");if

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
account,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
else{if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
(parent){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
mbx,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;var progressBar

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._headerList.length; ---> var  <--- progressBar=null;var progressCssClass=null;var 

[WARNING] Try to use a single 'var' statement per scope.
_headerList.length;var progressBar=null; ---> var  <--- progressCssClass=null;var wholeCssClass=null;var 

[WARNING] Try to use a single 'var' statement per scope.
progressBar=null;var progressCssClass=null; ---> var  <--- wholeCssClass=null;var percent=null;var 

[WARNING] Try to use a single 'var' statement per scope.
progressCssClass=null;var wholeCssClass=null; ---> var  <--- percent=null;var percentInt=null;for

[WARNING] Try to use a single 'var' statement per scope.
wholeCssClass=null;var percent=null; ---> var  <--- percentInt=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
null;var percentInt=null;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
var sortAscending=bSortAsc?1:0; ---> var  <--- sortBy=columnItem._sortField;var xform=this

[WARNING] Try to use a single 'var' statement per scope.
0;var sortBy=columnItem._sortField; ---> var  <--- xform=this.parent;var domainName=this

[WARNING] Try to use a single 'var' statement per scope.
_sortField;var xform=this.parent; ---> var  <--- domainName=this._domainName?this._domainName:

[WARNING] Try to use a single 'var' statement per scope.
._domainName?this._domainName:""; ---> var  <--- params={};params.domainName=domainName

[WARNING] Try to use a single 'var' statement per scope.
=sortBy;params.sortAscending=sortAscending; ---> var  <--- updateCallback=new AjxCallback(xform,ZaDomainXFormView.updateUserQuota

[WARNING] Try to use a single 'var' statement per scope.
){var offset=params.offset; ---> var  <--- domainName=this._domainName?this._domainName:

[WARNING] Try to use a single 'var' statement per scope.
._domainName?this._domainName:""; ---> var  <--- sortBy=this._sortBy?this._sortBy:

[WARNING] Try to use a single 'var' statement per scope.
._sortBy?this._sortBy:null; ---> var  <--- sortAscending=this._sortAscending?this._sortAscending:

[WARNING] Try to use a single 'var' statement per scope.
._sortAscending?this._sortAscending:null; ---> var  <--- limit=params.limit;var updateCallback=new 

[WARNING] Try to use a single 'var' statement per scope.
null;var limit=params.limit; ---> var  <--- updateCallback=new AjxCallback(this,this.updateMoreItems

[WARNING] Try to use a single 'var' statement per scope.
){var accounts=resp.account; ---> var  <--- accountArr=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
accountArr=new Array();for( ---> var  <--- i=0;i<accounts.length;

[WARNING] Try to use a single 'var' statement per scope.
(accountInfo){var quotaLimit=0; ---> var  <--- percentage=0;var diskUsed=0;diskUsed

[WARNING] Try to use a single 'var' statement per scope.
quotaLimit=0;var percentage=0; ---> var  <--- diskUsed=0;diskUsed=(accountInfo.used

[WARNING] Try to use a single 'var' statement per scope.
,listType){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;this._listType=

[WARNING] Try to use a single 'var' statement per scope.
.ABSOLUTE_STYLE;this._listType=listType; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
cos,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;var dwtId

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._headerList.length; ---> var  <--- dwtId=Dwt.getNextId();var rowId

[WARNING] Try to use a single 'var' statement per scope.
var dwtId=Dwt.getNextId(); ---> var  <--- rowId=this._listType;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var rowId=this._listType;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- cellWidth=this._getCellWidth(i,{}

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- skins=entry.attrs[ZaCos.A_zimbraAvailableSkin]

[WARNING] Try to use a single 'var' statement per scope.
]=[skins];}else{ ---> var  <--- cnt=skins.length;this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAvailableSkin]=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
[ZaCos.A_zimbraAvailableSkin]=null;} ---> var  <--- skins=ZaApp.getInstance().getInstalledSkins(

[WARNING] The variable skins has already been declared in the same scope...
ZaCos.A_zimbraAvailableSkin]=null;}var  ---> skins <--- =ZaApp.getInstance().getInstalledSkins()

[WARNING] Try to use a single 'var' statement per scope.
{skins=[skins];}} ---> var  <--- skinsChoices=ZaApp.getInstance().getSkinChoices(

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- allZimlets=ZaZimlet.getAll(ZaZimlet.EXCLUDE_EXTENSIONS)

[WARNING] Try to use a single 'var' statement per scope.
allZimlets=allZimlets.getArray();} ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] The variable cnt has already been declared in the same scope...
=allZimlets.getArray();}var  ---> cnt <--- =allZimlets.length;var _tmpZimlets=[]

[WARNING] Try to use a single 'var' statement per scope.
;}var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
var _tmpZimlets=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
).getInstance().id); ---> var  <--- resultGlobal=ZaRetentionPolicy.getRetentionPolicies();if(

[WARNING] Try to use a single 'var' statement per scope.
.popdown();}var selected; ---> var  <--- all;if(action==1){selected

[WARNING] Try to use a single 'var' statement per scope.
!selected){return;}for( ---> var  <--- i=0;i<selected.length;

[WARNING] Try to use a single 'var' statement per scope.
(ZaCos.A2_retentionPoliciesKeep));for( ---> var  <--- i=0;i<all.length;

[WARNING] The variable i has already been declared in the same scope...
ZaCos.A2_retentionPoliciesKeep));for(var  ---> i <--- =0;i<all.length;i

[WARNING] Try to use a single 'var' statement per scope.
([],ZaCos.A2_retentionPoliciesKeep); ---> var  <--- resultGlobal=ZaRetentionPolicy.getRetentionPolicies();this.

[WARNING] Try to use a single 'var' statement per scope.
!selected){return;}for( ---> var  <--- i=0;i<selected.length;

[WARNING] The variable i has already been declared in the same scope...
selected){return;}for(var  ---> i <--- =0;i<selected.length;i

[WARNING] Try to use a single 'var' statement per scope.
var obj=form.getInstance(); ---> var  <--- all;if(obj[ZaRetentionPolicy.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
var obj=form.getInstance(); ---> var  <--- all;if(obj[ZaRetentionPolicy.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
).getInstance().id); ---> var  <--- index=AjxUtil.indexOf(all,obj)

[WARNING] Try to use a single 'var' statement per scope.
{var headerListKeep=new Array(); ---> var  <--- sortable=1;var i=0;headerListKeep

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerListKeep[i++]=

[WARNING] Try to use a single 'var' statement per scope.
null,null,true,true); ---> var  <--- headerListPurge=new Array();i=0

[WARNING] Try to use a single 'var' statement per scope.
this.tabChoices=new Array(); ---> var  <--- _tab1=++this.TAB_INDEX;var _tab2,

[WARNING] Try to use a single 'var' statement per scope.
;var _tab1=++this.TAB_INDEX; ---> var  <--- _tab2,_tab3,_tab4,_tab5,_tab6,

[WARNING] Try to use a single 'var' statement per scope.
,_tab5,_tab6,_tab7,_tab8; ---> var  <--- headerItems=[{type:_AJX_IMAGE_,src:

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_LOCALE].join("");} ---> var  <--- allZimlets=ZaZimlet.getAll(ZaZimlet.EXCLUDE_EXTENSIONS)

[WARNING] Try to use a single 'var' statement per scope.
DEFAULT_LOCALE].join("");} ---> var  <--- cases=[];var case1={type

[WARNING] Try to use a single 'var' statement per scope.
);}var cases=[]; ---> var  <--- case1={type:_ZATABCASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
width:"98%",cellpadding:2}; ---> var  <--- case1Items=[{type:_ZA_TOP_GROUPER_,label:

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_ZATABCASE_,caseKey:_tab2

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:2,id:"cos_form_features_tab"}; ---> var  <--- case2Items=[{type:_ZA_TOP_GROUPER_,label:

[WARNING] Try to use a single 'var' statement per scope.
case2);}if(_tab3){ ---> var  <--- case3={type:_ZATABCASE_,caseKey:_tab3

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:2,numCols:1}; ---> var  <--- case3Items=[{type:_ZA_TOP_GROUPER_,id:

[WARNING] Try to use a single 'var' statement per scope.
case3);}if(_tab4){ ---> var  <--- case4={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
numCols:1,caseKey:_tab4}; ---> var  <--- case4Items=[{type:_SPACER_},{

[WARNING] Try to use a single 'var' statement per scope.
case4);}if(_tab5){ ---> var  <--- case5={type:_ZATABCASE_,caseKey:_tab5

[WARNING] Try to use a single 'var' statement per scope.
type:_ZATABCASE_,caseKey:_tab5}; ---> var  <--- case5Items=[{type:_ZAGROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
case5);}if(_tab6){ ---> var  <--- case6={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
numCols:1,caseKey:_tab6}; ---> var  <--- case6Items=[{type:_ZAGROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
case6);}if(_tab7){ ---> var  <--- case7={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:2,id:"cos_form_advanced_tab"}; ---> var  <--- case7Items=[{type:_DWT_ALERT_,style:

[WARNING] Try to use a single 'var' statement per scope.
case7);}if(_tab8){ ---> var  <--- case8={type:_SUPER_TABCASE_,caseKey:_tab8

[WARNING] Try to use a single 'var' statement per scope.
function(){var isAll=true; ---> var  <--- domainList=ZaCosXFormView._domainList;if(!domainList

[WARNING] Try to use a single 'var' statement per scope.
domainList){returnisAll;}for( ---> var  <--- i=0;i<domainList.length&&

[WARNING] Try to use a single 'var' statement per scope.
.length&&isAll;i++){ ---> var  <--- dom=domainList[i];if(dom

[WARNING] Try to use a single 'var' statement per scope.
);this.setInstanceValue(value); ---> var  <--- prefPollingInterval=instance.attrs[ZaCos.A_zimbraPrefMailPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaCos.A_zimbraPrefMailPollingInterval]; ---> var  <--- minPollingInterval=instance.attrs[ZaCos.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaCos.A_zimbraMailMinPollingInterval]; ---> var  <--- prefPollingIntervalItem=form.getItemsById(ZaCos.A_zimbraPrefMailPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraPrefMailPollingInterval)[0];try{ ---> var  <--- prefPollingInNum=parseInt(ZaUtil.getLifeTimeInSeconds(prefPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
(ZaUtil.getLifeTimeInSeconds(prefPollingInterval)); ---> var  <--- minPollingInNum=parseInt(ZaUtil.getLifeTimeInSeconds(minPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_domainName]=domainName; ---> var  <--- domain=ZaItem.create(newDomain,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- skins=entry.attrs[ZaCos.A_zimbraAvailableSkin]

[WARNING] Try to use a single 'var' statement per scope.
]=[skins];}else{ ---> var  <--- cnt=skins.length;this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
.A_zimbraAvailableSkin]=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
[ZaCos.A_zimbraAvailableSkin]=null;} ---> var  <--- skins=ZaApp.getInstance().getInstalledSkins(

[WARNING] The variable skins has already been declared in the same scope...
ZaCos.A_zimbraAvailableSkin]=null;}var  ---> skins <--- =ZaApp.getInstance().getInstalledSkins()

[WARNING] Try to use a single 'var' statement per scope.
{skins=[skins];}} ---> var  <--- skinsChoices=ZaApp.getInstance().getSkinChoices(

[WARNING] Try to use a single 'var' statement per scope.
]||entry.getAttrs.all){ ---> var  <--- allZimlets=ZaZimlet.getAll(ZaZimlet.EXCLUDE_EXTENSIONS)

[WARNING] Try to use a single 'var' statement per scope.
allZimlets=allZimlets.getArray();} ---> var  <--- cnt=allZimlets.length;var _tmpZimlets=[

[WARNING] The variable cnt has already been declared in the same scope...
=allZimlets.getArray();}var  ---> cnt <--- =allZimlets.length;var _tmpZimlets=[]

[WARNING] Try to use a single 'var' statement per scope.
;}var cnt=allZimlets.length; ---> var  <--- _tmpZimlets=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var _tmpZimlets=[];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
var _tmpZimlets=[];for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- zimlet=allZimlets[i];_tmpZimlets.push

[WARNING] Try to use a single 'var' statement per scope.
;var _tab1=++this.TAB_INDEX; ---> var  <--- _tab2,_tab3,_tab4,_tab5,_tab6,

[WARNING] Try to use a single 'var' statement per scope.
,_tab4,_tab5,_tab6,_tab7; ---> var  <--- headerItems=[{type:_AJX_IMAGE_,src:

[WARNING] Try to use a single 'var' statement per scope.
label:ZaMsg.TABT_Themes});} ---> var  <--- allZimlets=ZaZimlet.getAll(ZaZimlet.EXCLUDE_EXTENSIONS)

[WARNING] Try to use a single 'var' statement per scope.
label:ZaMsg.TABT_Advanced});} ---> var  <--- cases=[];var case1={type

[WARNING] Try to use a single 'var' statement per scope.
);}var cases=[]; ---> var  <--- case1={type:_CASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
width:"100%",cellpadding:0}; ---> var  <--- case1Items=[{type:_ZAWIZ_TOP_GROUPER_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_CASE_,caseKey:_tab2

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:0,id:"cos_form_features_tab"}; ---> var  <--- case2Items=[{type:_ZAWIZ_TOP_GROUPER_,label:

[WARNING] Try to use a single 'var' statement per scope.
case2);}if(_tab3){ ---> var  <--- case3={type:_CASE_,caseKey:_tab3

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:0,numCols:1}; ---> var  <--- case3Items=[{type:_ZAWIZ_TOP_GROUPER_,id:

[WARNING] Try to use a single 'var' statement per scope.
case3);}if(_tab4){ ---> var  <--- case4={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
numCols:1,caseKey:_tab4}; ---> var  <--- case4Items=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
case4);}if(_tab5){ ---> var  <--- case5={type:_CASE_,caseKey:_tab5

[WARNING] Try to use a single 'var' statement per scope.
type:_CASE_,caseKey:_tab5}; ---> var  <--- case5Items=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
case5);}if(_tab6){ ---> var  <--- case6={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
numCols:1,caseKey:_tab6}; ---> var  <--- case6Items=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
case6);}if(_tab7){ ---> var  <--- case7={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
cellpadding:0,id:"cos_form_advanced_tab"}; ---> var  <--- case7Items=[{type:_DWT_ALERT_,style:

[WARNING] Try to use a single 'var' statement per scope.
function(){var isAll=true; ---> var  <--- domainList=ZaNewCosXWizard._domainList;if(!domainList

[WARNING] Try to use a single 'var' statement per scope.
domainList){returnisAll;}for( ---> var  <--- i=0;i<domainList.length&&

[WARNING] Try to use a single 'var' statement per scope.
.length&&isAll;i++){ ---> var  <--- dom=domainList[i];if(dom

[WARNING] Try to use a single 'var' statement per scope.
);this.setInstanceValue(value); ---> var  <--- prefPollingInterval=instance.attrs[ZaCos.A_zimbraPrefMailPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaCos.A_zimbraPrefMailPollingInterval]; ---> var  <--- minPollingInterval=instance.attrs[ZaCos.A_zimbraMailMinPollingInterval]

[WARNING] Try to use a single 'var' statement per scope.
instance.attrs[ZaCos.A_zimbraMailMinPollingInterval]; ---> var  <--- prefPollingIntervalItem=form.getItemsById(ZaCos.A_zimbraPrefMailPollingInterval)

[WARNING] Try to use a single 'var' statement per scope.
split(" "));return;} ---> var  <--- params={};var isAdvanced=ZaApp.

[WARNING] Try to use a single 'var' statement per scope.
return;}var params={}; ---> var  <--- isAdvanced=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
split(" "));return;} ---> var  <--- params={};var sb_controller=ZaApp.

[WARNING] Try to use a single 'var' statement per scope.
return;}var params={}; ---> var  <--- sb_controller=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- isAdvanced=sb_controller.isAdvancedSearch(query);var 

[WARNING] Try to use a single 'var' statement per scope.
isAdvanced=sb_controller.isAdvancedSearch(query); ---> var  <--- searchListController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
!ldapQuery){ldapQuery="";} ---> var  <--- searchListController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getSearchBuilderController(); ---> var  <--- query=this.getSearchFieldElement().value;

[WARNING] Try to use a single 'var' statement per scope.
=this.getSearchFieldElement().value; ---> var  <--- isAdvancedSearch=sb_controller.isAdvancedSearch(query);var 

[WARNING] Try to use a single 'var' statement per scope.
isAdvancedSearch=sb_controller.isAdvancedSearch(query); ---> var  <--- objList=new Array();if(isAdvancedSearch

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- value=fieldObj.getSearchFieldElement().value;

[WARNING] Try to use a single 'var' statement per scope.
value||value.length<3){ ---> var  <--- searchItem=this.getParentItem().getItems(

[WARNING] Try to use a single 'var' statement per scope.
AjxMsg.stringTooShort,3));} ---> var  <--- currentController=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
}fieldObj.setCurrentSavedSearch({}); ---> var  <--- overviewController=ZaZimbraAdmin.getInstance().getOverviewPanelController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getOverviewPanelController(); ---> var  <--- tree=overviewController.getOverviewPanel().getFolderTree(

[WARNING] Try to use a single 'var' statement per scope.
.getOverviewPanel().getFolderTree(); ---> var  <--- newPath=overviewController.getSearchItemPath();overviewController.

[WARNING] Try to use a single 'var' statement per scope.
helpQuery&&helpQuery.length>0){ ---> var  <--- url="http://support.zimbra.com/help/index.php";var args=[];

[WARNING] Try to use a single 'var' statement per scope.
>0){var url="http://support.zimbra.com/help/index.php"; ---> var  <--- args=[];args.push("query="

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- searchField=form.parent;var query=form

[WARNING] Try to use a single 'var' statement per scope.
);var searchField=form.parent; ---> var  <--- query=form.getItemsById(ZaSearch.A_query)

[WARNING] Try to use a single 'var' statement per scope.
(ZaSearch.A_query)[0]; ---> var  <--- displayId=queryXFormItem.getId()+"_display";

[WARNING] Try to use a single 'var' statement per scope.
=queryXFormItem.getId()+"_display"; ---> var  <--- inputEl=document.getElementById(displayId);return

[WARNING] Try to use a single 'var' statement per scope.
queryString=ZaSearch.parseSavedSearchQuery(query); ---> var  <--- slController=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
);if(slController._uiContainer){ ---> var  <--- params={type:3,unique:true

[WARNING] Try to use a single 'var' statement per scope.
._queryFieldElement=this.getSearchFieldElement(); ---> var  <--- b=Dwt.getBounds(this._queryFieldElement)

[WARNING] Try to use a single 'var' statement per scope.
ZaId.MENU_DROP)});for( ---> var  <--- i=0;i<ZaSearch.SAVED_SEARCHES.

[WARNING] Try to use a single 'var' statement per scope.
.SAVED_SEARCHES.length;i++){ ---> var  <--- n=ZaSearch.SAVED_SEARCHES[i].name

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.SAVED_SEARCHES[i].name; ---> var  <--- q=ZaSearch.SAVED_SEARCHES[i].query

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.SAVED_SEARCHES[i].query; ---> var  <--- mItem=new DwtMenuItem({parent:this.

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- sb_controller=ZaApp.getInstance().getSearchBuilderController(

[WARNING] Try to use a single 'var' statement per scope.
)[0].getItems(); ---> var  <--- cnt=items.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=items.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
ZaSearchField.searchChoices.setChoices(newMenuOpList); ---> var  <--- numCols=3;var colSizes;if(ZaSettings

[WARNING] Try to use a single 'var' statement per scope.
(newMenuOpList);var numCols=3; ---> var  <--- colSizes;if(ZaSettings.ENABLED_UI_COMPONENTS[ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
colSizes.push("110");}} ---> var  <--- xFormObject;numCols=4;colSizes=["46"

[WARNING] Try to use a single 'var' statement per scope.
"46","3","*","28"]; ---> var  <--- entryKeyCallback=new AjxCallback(this,ZaSearchField.entryKeyHandler

[WARNING] Try to use a single 'var' statement per scope.
var currentSearch=this.getCurrentSavedSearch(); ---> var  <--- dialog=this.getSaveAndEditSeachDialog();var isCreated

[WARNING] Try to use a single 'var' statement per scope.
var dialog=this.getSaveAndEditSeachDialog(); ---> var  <--- isCreated=currentSearch.name?false:true;

[WARNING] Try to use a single 'var' statement per scope.
=currentSearch.name?false:true; ---> var  <--- name=this.getDefaultSearchName(currentSearch.name)

[WARNING] Try to use a single 'var' statement per scope.
(){var savedSearchArr=[]; ---> var  <--- nameValue=AjxStringUtil.htmlEncode(this._nameInput.

[WARNING] Try to use a single 'var' statement per scope.
htmlEncode(this._nameInput.value); ---> var  <--- queryValue=this._queryInput.value;if(

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.getSavedSearches());for( ---> var  <--- i=0;i<this.savedSearchArr.

[WARNING] Try to use a single 'var' statement per scope.
.savedSearchArr.length;i++){ ---> var  <--- searchName=this.savedSearchArr[i].name

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.SAVED_SEARCHES&&searchName){for( ---> var  <--- j=0;j<ZaSearch.SAVED_SEARCHES.

[WARNING] Try to use a single 'var' statement per scope.
(parent){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
account,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- IEWidth=this._headerList[i]._width

[WARNING] Try to use a single 'var' statement per scope.
_headerList[i]._width+4; ---> var  <--- dwtId=Dwt.getNextId();var rowId

[WARNING] Try to use a single 'var' statement per scope.
var dwtId=Dwt.getNextId(); ---> var  <--- rowId=ZaId.TAB_SEARCH_MANAGE;if(field==

[WARNING] Try to use a single 'var' statement per scope.
;}break;caseZaItem.DOMAIN: ---> var  <--- partialClassName="Domain";var domainType=account.attrs

[WARNING] Try to use a single 'var' statement per scope.
ZaItem.DOMAIN:var partialClassName="Domain"; ---> var  <--- domainType=account.attrs[ZaDomain.A_domainType]

[WARNING] Try to use a single 'var' statement per scope.
[i]._width)+"><nobr>"; ---> var  <--- status="";if(account.type==

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- sortable=1;var i=0;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerList[i++]=

[WARNING] Try to use a single 'var' statement per scope.
)._uiContainer.isEnableForSearch()){ ---> var  <--- currentQueryType=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
()._uiContainer.getSearchTypeFormBubbles(); ---> var  <--- searchField=ZaApp.getInstance().getSearchListController(

[WARNING] Try to use a single 'var' statement per scope.
._bubbleList.size();for( ---> var  <--- i=len-1;i>=0;

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- bubble=this._bubbleList.getBubble(i)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- formParentElement=this.getForm().parent.

[WARNING] Try to use a single 'var' statement per scope.
().parent.getHtmlElement(); ---> var  <--- totalHeight=parseInt(formParentElement.style.height)

[WARNING] Try to use a single 'var' statement per scope.
formParentElement.clientHeight:formParentElement.offsetHeight;} ---> var  <--- formHeaders=form.getItemsById("xform_header");var 

[WARNING] Try to use a single 'var' statement per scope.
formHeaders=form.getItemsById("xform_header"); ---> var  <--- headerHeight=0;if(formHeaders){var 

[WARNING] Try to use a single 'var' statement per scope.
headerHeight=0;if(formHeaders){ ---> var  <--- formHeader=formHeaders[0];if(formHeader

[WARNING] Try to use a single 'var' statement per scope.
().parent.getHtmlElement(); ---> var  <--- totalWidth=parseInt(formParentElement.style.width)

[WARNING] Try to use a single 'var' statement per scope.
WIDTH;var height=ZaSearchOptionView.HEIGHT; ---> var  <--- x=parent.getNextOptionX();var y

[WARNING] Try to use a single 'var' statement per scope.
var x=parent.getNextOptionX(); ---> var  <--- y=0;this.setBounds(x,

[WARNING] Try to use a single 'var' statement per scope.
"COS");}}}}}} ---> var  <--- tb_items=[];tb_items.push(this

[WARNING] Try to use a single 'var' statement per scope.
function(){var query=""; ---> var  <--- num=0;this._filterQuery={}

[WARNING] Try to use a single 'var' statement per scope.
this._filterQuery={};for( ---> var  <--- i=0;i<this._bubbleList.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- currentBubble=this._bubbleList.get(i)

[WARNING] Try to use a single 'var' statement per scope.
this._bubbleList.get(i); ---> var  <--- filter=currentBubble.query;if(filter!=

[WARNING] Try to use a single 'var' statement per scope.
+=filter;}num++;}} ---> var  <--- filterQueryResult;var filterNum;for(var optionType in 

[WARNING] Try to use a single 'var' statement per scope.
}num++;}}var filterQueryResult; ---> var  <--- filterNum;for(var optionType in this._filterQuery

[WARNING] Try to use a single 'var' statement per scope.
}var filterQueryResult;var filterNum;for( ---> var  <--- optionType in this._filterQuery){filterQueryResult=""

[WARNING] Try to use a single 'var' statement per scope.
="";filterNum=0;for( ---> var  <--- i=0;i<this._filterQuery[

[WARNING] The variable i has already been declared in the same scope...
"";filterNum=0;for(var  ---> i <--- =0;i<this._filterQuery[optionType

[WARNING] Try to use a single 'var' statement per scope.
){var ret=false;for( ---> var  <--- i=0;i<this._bubbleList.

[WARNING] Try to use a single 'var' statement per scope.
{var searchTypeList=new Array(); ---> var  <--- key=new Array();var data=

[WARNING] Try to use a single 'var' statement per scope.
;var key=new Array(); ---> var  <--- data={};var num=0;

[WARNING] Try to use a single 'var' statement per scope.
();var data={}; ---> var  <--- num=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
};var num=0;for( ---> var  <--- i=0;i<this._bubbleList.

[WARNING] Try to use a single 'var' statement per scope.
.size();i++){ ---> var  <--- searchType=this._bubbleList.get(i)

[WARNING] Try to use a single 'var' statement per scope.
.isEmpty(searchType)){for( ---> var  <--- j=0;j<searchType.length;

[WARNING] Try to use a single 'var' statement per scope.
}}num++;}}for( ---> var  <--- i=0;i<key.length;

[WARNING] The variable i has already been declared in the same scope...
}num++;}}for(var  ---> i <--- =0;i<key.length;i

[WARNING] Try to use a single 'var' statement per scope.
var el=this.getHtmlElement(); ---> var  <--- removeLinkId=this.id+"_remove";var removeLink

[WARNING] Try to use a single 'var' statement per scope.
var removeLinkId=this.id+"_remove"; ---> var  <--- removeLink='ZaSearchXFormView.removeBubble("'+this.id+'","'+

[WARNING] Try to use a single 'var' statement per scope.
+'","'+this.parentId+'");'; ---> var  <--- style="display:inline-block;cursor:pointer;";var closeText=AjxImg.getImageHtml

[WARNING] Try to use a single 'var' statement per scope.
parentId+'");';var style="display:inline-block;cursor:pointer;"; ---> var  <--- closeText=AjxImg.getImageHtml("BubbleDelete",style,

[WARNING] Try to use a single 'var' statement per scope.
removeLinkId+"' onclick='"+removeLink+"'"); ---> var  <--- displayName=this.displayName&&this.displayName.

[WARNING] Try to use a single 'var' statement per scope.
&&this.displayName.toString(); ---> var  <--- html="<span id='"+this.id+"_displayName'>"+

[WARNING] Try to use a single 'var' statement per scope.
;}var className=clsName||"ZaServicesListView"; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
"ZaServicesListView";var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");this

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;div[DwtListView._STYLE_CLASS]

[WARNING] Try to use a single 'var' statement per scope.
item.serviceMap!=null){for( ---> var  <--- i in item.serviceMap){idx=ZaServicesListView

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
ev=DwtUiEvent.getEvent(event); ---> var  <--- htmlEl=DwtUiEvent.getTarget(ev);var 

[WARNING] Try to use a single 'var' statement per scope.
htmlEl=DwtUiEvent.getTarget(ev); ---> var  <--- table=htmlEl;while(table!=null)

[WARNING] Try to use a single 'var' statement per scope.
;}table=table.parentNode;} ---> var  <--- sibling=table.nextSibling;var collapse=true

[WARNING] Try to use a single 'var' statement per scope.
;}var sibling=table.nextSibling; ---> var  <--- collapse=true;if(sibling!=null)

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("service","mta"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.asyncMode=false; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_ALL_SERVER}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
params,reqMgrParams).Body.GetAllServersResponse; ---> var  <--- allServersInfo=resp.server;returnallServersInfo;}

[WARNING] Try to use a single 'var' statement per scope.
(!allServersInfo){returnnull;} ---> var  <--- oneServerDetailInfo=null;var oneServerBriefInfo={};

[WARNING] Try to use a single 'var' statement per scope.
returnnull;}var oneServerDetailInfo=null; ---> var  <--- oneServerBriefInfo={};var i=0;

[WARNING] Try to use a single 'var' statement per scope.
=null;var oneServerBriefInfo={}; ---> var  <--- i=0;var j=0;var 

[WARNING] Try to use a single 'var' statement per scope.
={};var i=0; ---> var  <--- j=0;var isEnabled=false;var 

[WARNING] Try to use a single 'var' statement per scope.
i=0;var j=0; ---> var  <--- isEnabled=false;var isInstalled=false;var 

[WARNING] Try to use a single 'var' statement per scope.
j=0;var isEnabled=false; ---> var  <--- isInstalled=false;var allServersMtaServiceEnableStatus=[];

[WARNING] Try to use a single 'var' statement per scope.
isEnabled=false;var isInstalled=false; ---> var  <--- allServersMtaServiceEnableStatus=[];for(i=0

[WARNING] Try to use a single 'var' statement per scope.
name=allServersInfo[i].name; ---> var  <--- oneService;for(j=0,isEnabled=

[WARNING] Try to use a single 'var' statement per scope.
{isInstalled=true;}}}} ---> var  <--- isMtaEnable=(isEnabled&&isInstalled);allServersMtaServiceEnableStatus[

[WARNING] Try to use a single 'var' statement per scope.
(!allServersMtaServiceEnableStatus){returntrue;} ---> var  <--- i=0;for(i in allServersMtaServiceEnableStatus)

[WARNING] Try to use a single 'var' statement per scope.
.extTabObjects.length;i++){ ---> var  <--- tabObj=ZaGlobalStatsView.extTabObjects[i];if

[WARNING] Try to use a single 'var' statement per scope.
(tabObj.memthod)=="function"){ ---> var  <--- tabPage=null;if(!tabObj.tabKey

[WARNING] Try to use a single 'var' statement per scope.
=this._tabBar.getSize(); ---> var  <--- titleCellSize=Dwt.getSize(this.titleCell)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this.titleCell); ---> var  <--- tabBarHeight=tabBarSize.y||this._tabBar.

[WARNING] Try to use a single 'var' statement per scope.
._tabBar.getHtmlElement().clientHeight; ---> var  <--- titleCellHeight=titleCellSize.y||this.titleCell.

[WARNING] Try to use a single 'var' statement per scope.
.y||this.titleCell.clientHeight; ---> var  <--- tabWidth=width;var newHeight=(height-

[WARNING] Try to use a single 'var' statement per scope.
titleCell.clientHeight;var tabWidth=width; ---> var  <--- newHeight=(height-tabBarHeight-titleCellHeight);

[WARNING] Try to use a single 'var' statement per scope.
=(height-tabBarHeight-titleCellHeight); ---> var  <--- tabHeight=(newHeight>50)?newHeight:

[WARNING] Try to use a single 'var' statement per scope.
this._tabs.length){for( ---> var  <--- curTabKey in this._tabs){if(this

[WARNING] Try to use a single 'var' statement per scope.
this._table,htmlEl.firstChild); ---> var  <--- row1;var row2;var col2;row1=

[WARNING] Try to use a single 'var' statement per scope.
,htmlEl.firstChild);var row1; ---> var  <--- row2;var col2;row1=this._table

[WARNING] Try to use a single 'var' statement per scope.
firstChild);var row1;var row2; ---> var  <--- col2;row1=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
(ZaMsg.TABT_Spam_Activity);}for( ---> var  <--- i=0;i<ZaGlobalStatsView.extTabObjects.

[WARNING] Try to use a single 'var' statement per scope.
.extTabObjects.length;i++){ ---> var  <--- tabObj=ZaGlobalStatsView.extTabObjects[i];if

[WARNING] Try to use a single 'var' statement per scope.
push(tabObj.title);}} ---> var  <--- tabChoices=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var tabChoices=[];for( ---> var  <--- i=1;i<=innerTabs.length;

[WARNING] The variable i has already been declared in the same scope...
var tabChoices=[];for(var  ---> i <--- =1;i<=innerTabs.length;i

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
(this);var idx=0; ---> var  <--- html=new Array(50);html[

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
(this);var idx=0; ---> var  <--- html=new Array(50);html[

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
(this);var idx=0; ---> var  <--- html=new Array(50);html[

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
);this._chartHtmlShown=true;} ---> var  <--- controller=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
(e){var hasFlash=false; ---> var  <--- version=YAHOO.deconcept.SWFObjectUtil.getPlayerVersion(

[WARNING] Try to use a single 'var' statement per scope.
{e.style.display="block"; ---> var  <--- msg=ZaMsg.NAD_AdvStatsFlashRequired;if(version.

[WARNING] Try to use a single 'var' statement per scope.
version.rev]);}for( ---> var  <--- i=e.childNodes.length;i>

[WARNING] Try to use a single 'var' statement per scope.
item(i-1));} ---> var  <--- a=document.createElement("a");ZaGlobalAdvancedStatsPage

[WARNING] Try to use a single 'var' statement per scope.
setText(chartdiv,ZaMsg.NAD_AdvStatsLoadingDataLabel); ---> var  <--- soapRequest=AjxSoapDoc.create("GetLoggerStatsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"endTime",{"!time":end}); ---> var  <--- counters=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var counters=[];for( ---> var  <--- i=0;i<columns.length;

[WARNING] Try to use a single 'var' statement per scope.
:columns[i]});} ---> var  <--- statsdata={"!name":group,"!limit":"true"

[WARNING] Try to use a single 'var' statement per scope.
{stat:[]};for( ---> var  <--- i=0;i<counters.length;

[WARNING] The variable i has already been declared in the same scope...
stat:[]};for(var  ---> i <--- =0;i<counters.length;i

[WARNING] Try to use a single 'var' statement per scope.
soapRequest.set("stats",statsdata); ---> var  <--- cb=function(response){if(response

[WARNING] Try to use a single 'var' statement per scope.
.hostname[0].stats){ ---> var  <--- e=document.getElementById("loggerchart"+id)

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.NAD_AdvStatsNoDataLabel);return;} ---> var  <--- data={};var hostname=soapResponse.

[WARNING] Try to use a single 'var' statement per scope.
return;}var data={}; ---> var  <--- hostname=soapResponse.hostname;if(hostname[

[WARNING] Try to use a single 'var' statement per scope.
.stats[0].values){ ---> var  <--- timeStamp=hostname[0].stats[0

[WARNING] Try to use a single 'var' statement per scope.
].stats[0].values; ---> var  <--- timeStampLength=timeStamp.length;var hostNameLen=hostname

[WARNING] Try to use a single 'var' statement per scope.
values;var timeStampLength=timeStamp.length; ---> var  <--- hostNameLen=hostname.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var hostNameLen=hostname.length;for( ---> var  <--- i=0;i<timeStampLength;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<timeStampLength;i++){ ---> var  <--- valuesSumAtTs=0;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
){var valuesSumAtTs=0;for( ---> var  <--- j=0;j<hostNameLen;j++

[WARNING] Try to use a single 'var' statement per scope.
[0].value);}} ---> var  <--- averageValueAtTs=valuesSumAtTs/hostNameLen;if(!data

[WARNING] Try to use a single 'var' statement per scope.
].name]=averageValueAtTs;}} ---> var  <--- newData=[];var period=0;

[WARNING] Try to use a single 'var' statement per scope.
;}}var newData=[]; ---> var  <--- period=0;var tsArr=Object.keys

[WARNING] Try to use a single 'var' statement per scope.
=[];var period=0; ---> var  <--- tsArr=Object.keys(data);if

[WARNING] Try to use a single 'var' statement per scope.
-tsArr[0];}for( ---> var  <--- i in data){record={timestamp:

[WARNING] The variable i has already been declared in the same scope...
tsArr[0];}for(var  ---> i <---  in data){record={timestamp:new 

[WARNING] Try to use a single 'var' statement per scope.
(i*1000)};for( ---> var  <--- j in data[i]){record[

[WARNING] The variable j has already been declared in the same scope...
i*1000)};for(var  ---> j <---  in data[i]){record[j

[WARNING] Try to use a single 'var' statement per scope.
i][j];}for( ---> var  <--- j=0;j<columns.length;

[WARNING] The variable j has already been declared in the same scope...
][j];}for(var  ---> j <--- =0;j<columns.length;j

[WARNING] Try to use a single 'var' statement per scope.
if(newData.length<1){ ---> var  <--- e=document.getElementById("loggerchart"+id)

[WARNING] The variable e has already been declared in the same scope...
(newData.length<1){var  ---> e <--- =document.getElementById("loggerchart"+id);

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.NAD_AdvStatsNoDataLabel);return;} ---> var  <--- colDef=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var colDef=[];for( ---> var  <--- i=0;i<columns.length;

[WARNING] The variable i has already been declared in the same scope...
var colDef=[];for(var  ---> i <--- =0;i<columns.length;i

[WARNING] Try to use a single 'var' statement per scope.
<columns.length;i++){ ---> var  <--- legend=columns[i];if(column_units

[WARNING] Try to use a single 'var' statement per scope.
:columns[i]});} ---> var  <--- fields=["timestamp"];for(var i

[WARNING] Try to use a single 'var' statement per scope.
var fields=["timestamp"];for( ---> var  <--- i=0;i<columns.length;

[WARNING] The variable i has already been declared in the same scope...
fields=["timestamp"];for(var  ---> i <--- =0;i<columns.length;i

[WARNING] Try to use a single 'var' statement per scope.
fields,colDef,newData);}; ---> var  <--- csfeParams={soapDoc:soapRequest,asyncMode:true

[WARNING] Try to use a single 'var' statement per scope.
callback:new AjxCallback(cb)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
setText(chartdiv,ZaMsg.NAD_AdvStatsLoadingDataLabel); ---> var  <--- soapRequest=AjxSoapDoc.create("GetLoggerStatsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"endTime",{"!time":end}); ---> var  <--- counters=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var counters=[];for( ---> var  <--- i=0;i<columns.length;

[WARNING] Try to use a single 'var' statement per scope.
:columns[i]});} ---> var  <--- statsdata={"!name":group,"!limit":"true"

[WARNING] Try to use a single 'var' statement per scope.
{stat:[]};for( ---> var  <--- i=0;i<counters.length;

[WARNING] The variable i has already been declared in the same scope...
stat:[]};for(var  ---> i <--- =0;i<counters.length;i

[WARNING] Try to use a single 'var' statement per scope.
soapRequest.set("stats",statsdata); ---> var  <--- cb=function(response){if(response

[WARNING] Try to use a single 'var' statement per scope.
.hostname[0].stats){ ---> var  <--- e=document.getElementById("loggerchart"+id)

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.NAD_AdvStatsNoDataLabel);return;} ---> var  <--- values=soapResponse.hostname[0].stats

[WARNING] Try to use a single 'var' statement per scope.
.values;if(!values){ ---> var  <--- e=document.getElementById("loggerchart"+id)

[WARNING] The variable e has already been declared in the same scope...
values;if(!values){var  ---> e <--- =document.getElementById("loggerchart"+id);

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.NAD_AdvStatsNoDataLabel);return;} ---> var  <--- newData=[];var period=0;

[WARNING] Try to use a single 'var' statement per scope.
return;}var newData=[]; ---> var  <--- period=0;var fixedColumns=new Array(

[WARNING] Try to use a single 'var' statement per scope.
=[];var period=0; ---> var  <--- fixedColumns=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
fixedColumns=new Array();for( ---> var  <--- i=0;i<columns.length;

[WARNING] Try to use a single 'var' statement per scope.
/[\/%:]/g,"_"));}for( ---> var  <--- i=0;i<values.length;

[WARNING] The variable i has already been declared in the same scope...
,"_"));}for(var  ---> i <--- =0;i<values.length;i

[WARNING] Try to use a single 'var' statement per scope.
-values[i].t;} ---> var  <--- ts=new Date(values[i].

[WARNING] Try to use a single 'var' statement per scope.
[i].t*1000); ---> var  <--- record={timestamp:ts};for(

[WARNING] Try to use a single 'var' statement per scope.
={timestamp:ts};for( ---> var  <--- j=0;j<values[i]

[WARNING] Try to use a single 'var' statement per scope.
j].value;}}for( ---> var  <--- j=0;j<fixedColumns.length;

[WARNING] The variable j has already been declared in the same scope...
].value;}}for(var  ---> j <--- =0;j<fixedColumns.length;j

[WARNING] Try to use a single 'var' statement per scope.
if(newData.length<1){ ---> var  <--- e=document.getElementById("loggerchart"+id)

[WARNING] The variable e has already been declared in the same scope...
(newData.length<1){var  ---> e <--- =document.getElementById("loggerchart"+id);

[WARNING] Try to use a single 'var' statement per scope.
,ZaMsg.NAD_AdvStatsNoDataLabel);return;} ---> var  <--- colDef=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var colDef=[];for( ---> var  <--- i=0;i<columns.length;

[WARNING] The variable i has already been declared in the same scope...
var colDef=[];for(var  ---> i <--- =0;i<columns.length;i

[WARNING] Try to use a single 'var' statement per scope.
<columns.length;i++){ ---> var  <--- legend=columns[i];if(column_units

[WARNING] Try to use a single 'var' statement per scope.
:fixedColumns[i]});} ---> var  <--- fields=["timestamp"];for(var i

[WARNING] Try to use a single 'var' statement per scope.
var fields=["timestamp"];for( ---> var  <--- i=0;i<fixedColumns.length;

[WARNING] The variable i has already been declared in the same scope...
fields=["timestamp"];for(var  ---> i <--- =0;i<fixedColumns.length;i

[WARNING] Try to use a single 'var' statement per scope.
fields,colDef,newData);}; ---> var  <--- csfeParams={soapDoc:soapRequest,asyncMode:true

[WARNING] Try to use a single 'var' statement per scope.
callback:new AjxCallback(cb)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
new YAHOO.widget.NumericAxis(); ---> var  <--- max=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var max=0;for( ---> var  <--- i=0;i<colDef.length;

[WARNING] Try to use a single 'var' statement per scope.
,lineSize:1};}for( ---> var  <--- i=0;i<newData.length;

[WARNING] The variable i has already been declared in the same scope...
lineSize:1};}for(var  ---> i <--- =0;i<newData.length;i

[WARNING] Try to use a single 'var' statement per scope.
.length;i++){for( ---> var  <--- j=0;j<colDef.length;

[WARNING] Try to use a single 'var' statement per scope.
;yAxis.labelFunction=ZaGlobalAdvancedStatsPage.formatLabel; ---> var  <--- timeAxis=new YAHOO.widget.TimeAxis()

[WARNING] Try to use a single 'var' statement per scope.
if(newData.length>1){ ---> var  <--- dx=newData[1].timestamp.getTime

[WARNING] Try to use a single 'var' statement per scope.
0].timestamp.getTime(); ---> var  <--- ts1=newData[newData.length-1]

[WARNING] Try to use a single 'var' statement per scope.
1].timestamp.getTime(); ---> var  <--- delta=(ts1-ts0)/1000;

[WARNING] Try to use a single 'var' statement per scope.
=(ts1-ts0)/1000; ---> var  <--- formatter;if(delta>2*24*

[WARNING] Try to use a single 'var' statement per scope.
minimum=newData[0].timestamp; ---> var  <--- seriesDef=colDef;var data_source=new YAHOO.

[WARNING] Try to use a single 'var' statement per scope.
].timestamp;var seriesDef=colDef; ---> var  <--- data_source=new YAHOO.util.DataSource(newData

[WARNING] Try to use a single 'var' statement per scope.
.responseSchema={fields:fields}; ---> var  <--- div=document.getElementById("loggerchart"+id)

[WARNING] Try to use a single 'var' statement per scope.
select=ZaGlobalAdvancedStatsPage.getTarget(evt); ---> var  <--- hostname=select[select.selectedIndex].value

[WARNING] Try to use a single 'var' statement per scope.
select[select.selectedIndex].value; ---> var  <--- soapRequest=AjxSoapDoc.create("GetLoggerStatsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"hostname",{"!hn":hostname}); ---> var  <--- cb=function(response){var soapResponse=

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.GetLoggerStatsResponse; ---> var  <--- groupSelect=document.getElementById("select-group"+id)

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById("select-group"+id); ---> var  <--- statGroups=soapResponse.hostname[0].stats

[WARNING] Try to use a single 'var' statement per scope.
ZaGlobalAdvancedStatsPage.clearSelect(groupSelect);for( ---> var  <--- i=0,j=statGroups.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<j;i++){ ---> var  <--- option=document.createElement("option");if

[WARNING] Try to use a single 'var' statement per scope.
:groupSelect},id);}; ---> var  <--- csfeParams={soapDoc:soapRequest,asyncMode:true

[WARNING] Try to use a single 'var' statement per scope.
callback:new AjxCallback(cb)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
node.getElementsByTagName("option");for( ---> var  <--- i=node.childNodes.length;i>

[WARNING] Try to use a single 'var' statement per scope.
select=ZaGlobalAdvancedStatsPage.getTarget(evt); ---> var  <--- serverSelect=document.getElementById("select-servers"+id)

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById("select-servers"+id); ---> var  <--- hostname=serverSelect[serverSelect.selectedIndex].value

[WARNING] Try to use a single 'var' statement per scope.
serverSelect[serverSelect.selectedIndex].value; ---> var  <--- group=select[select.selectedIndex].value

[WARNING] Try to use a single 'var' statement per scope.
select[select.selectedIndex].value; ---> var  <--- counterSelect=document.getElementById("select-counter"+id)

[WARNING] Try to use a single 'var' statement per scope.
"hostname",{"!hn":hostname}); ---> var  <--- child=soapRequest.set("stats",{"!name"

[WARNING] Try to use a single 'var' statement per scope.
set(null,"get-counters",child); ---> var  <--- cb=function(response){var soapResponse=

[WARNING] Try to use a single 'var' statement per scope.
.getResponse().Body.GetLoggerStatsResponse; ---> var  <--- statCounters=soapResponse.hostname[0].stats

[WARNING] Try to use a single 'var' statement per scope.
stat;if(statCounters){for( ---> var  <--- i=0,j=statCounters.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<j;i++){ ---> var  <--- option=document.createElement("option");option

[WARNING] Try to use a single 'var' statement per scope.
appendChild(option);}}}; ---> var  <--- csfeParams={soapDoc:soapRequest,asyncMode:true

[WARNING] Try to use a single 'var' statement per scope.
callback:new AjxCallback(cb)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
}var hosts=new Array(); ---> var  <--- serverList=ZaApp.getInstance().getServerList(

[WARNING] Try to use a single 'var' statement per scope.
getServerList();if(serverList){ ---> var  <--- ary=serverList.getArray();var cnt

[WARNING] Try to use a single 'var' statement per scope.
var ary=serverList.getArray(); ---> var  <--- cnt=ary.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=ary.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- crtServer=ary[i];var isInstalled=

[WARNING] Try to use a single 'var' statement per scope.
{var crtServer=ary[i]; ---> var  <--- isInstalled=false;var isEnabled=false;if

[WARNING] Try to use a single 'var' statement per scope.
[i];var isInstalled=false; ---> var  <--- isEnabled=false;if(crtServer.attrs)

[WARNING] Try to use a single 'var' statement per scope.
false;if(crtServer.attrs){ ---> var  <--- EnabledServiceList=crtServer.attrs[ZaServer.A_zimbraServiceEnabled]

[WARNING] Try to use a single 'var' statement per scope.
crtServer.attrs[ZaServer.A_zimbraServiceEnabled]; ---> var  <--- InstalledServiceList=crtServer.attrs[ZaServer.A_zimbraServiceEnabled]

[WARNING] Try to use a single 'var' statement per scope.
crtServer.attrs[ZaServer.A_zimbraServiceEnabled]; ---> var  <--- j;for(j in EnabledServiceList){if

[WARNING] Try to use a single 'var' statement per scope.
var cnt=divs.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- chartdiv=document.getElementById("loggerchart"+divs[

[WARNING] Try to use a single 'var' statement per scope.
"hostname",{"!hn":hostname}); ---> var  <--- child=soapRequest.set("stats",{"!name"

[WARNING] Try to use a single 'var' statement per scope.
set(null,"get-counters",child); ---> var  <--- csfeParams={soapDoc:soapRequest};var reqMgrParams

[WARNING] Try to use a single 'var' statement per scope.
var csfeParams={soapDoc:soapRequest}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.PQ_LOADING}; ---> var  <--- soapResponse=ZaRequestMgr.invoke(csfeParams,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
.values[0].stat){ ---> var  <--- statCounters=soapResponse.hostname[0].stats

[WARNING] Try to use a single 'var' statement per scope.
].values[0].stat; ---> var  <--- counters=[];if(statCounters){

[WARNING] Try to use a single 'var' statement per scope.
];if(statCounters){for( ---> var  <--- i=0,j=statCounters.length;

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(select)){return;} ---> var  <--- chartdiv=document.getElementById("loggerchart"+id)

[WARNING] Try to use a single 'var' statement per scope.
setText(chartdiv,ZaMsg.NAD_AdvStatsLoadingDataLabel); ---> var  <--- serverSelect=document.getElementById("select-servers"+id)

[WARNING] Try to use a single 'var' statement per scope.
selectedIndex].value){return;} ---> var  <--- hostname=serverSelect[serverSelect.selectedIndex].value

[WARNING] Try to use a single 'var' statement per scope.
serverSelect[serverSelect.selectedIndex].value; ---> var  <--- groupSelect=document.getElementById("select-group"+id)

[WARNING] Try to use a single 'var' statement per scope.
selectedIndex].value){return;} ---> var  <--- group=groupSelect[groupSelect.selectedIndex].value

[WARNING] Try to use a single 'var' statement per scope.
groupSelect[groupSelect.selectedIndex].value; ---> var  <--- selected=[];var units=[]

[WARNING] Try to use a single 'var' statement per scope.
.value;var selected=[]; ---> var  <--- units=[];var index=0;

[WARNING] Try to use a single 'var' statement per scope.
[];var units=[]; ---> var  <--- index=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
];var index=0;for( ---> var  <--- i=0;i<select.options.

[WARNING] Try to use a single 'var' statement per scope.
.length==0){return;} ---> var  <--- startTime=document.getElementById("input-start-time"+id)

[WARNING] Try to use a single 'var' statement per scope.
getElementById("input-start-time"+id).value; ---> var  <--- endTime=document.getElementById("input-end-time"+id)

[WARNING] Try to use a single 'var' statement per scope.
var id=Math.random(); ---> var  <--- form=document.createElement("form");form

[WARNING] Try to use a single 'var' statement per scope.
="return false;";form.action="#"; ---> var  <--- table=document.createElement("table");table

[WARNING] Try to use a single 'var' statement per scope.
"table");table.className="ChartSettings"; ---> var  <--- tbody=document.createElement("tbody");table

[WARNING] Try to use a single 'var' statement per scope.
table.style.width="96%";} ---> var  <--- label;var tr;var td;var select

[WARNING] Try to use a single 'var' statement per scope.
.width="96%";}var label; ---> var  <--- tr;var td;var select;tr=

[WARNING] Try to use a single 'var' statement per scope.
"96%";}var label;var tr; ---> var  <--- td;var select;tr=document.createElement

[WARNING] Try to use a single 'var' statement per scope.
var label;var tr;var td; ---> var  <--- select;tr=document.createElement("tr")

[WARNING] Try to use a single 'var' statement per scope.
);tbody.appendChild(tr); ---> var  <--- input;tr=document.createElement("tr")

[WARNING] Try to use a single 'var' statement per scope.
);form.appendChild(table); ---> var  <--- a;var span;a=document.createElement

[WARNING] Try to use a single 'var' statement per scope.
.appendChild(table);var a; ---> var  <--- span;a=document.createElement("a")

[WARNING] Try to use a single 'var' statement per scope.
ZaGlobalAdvancedStatsPage.showhide("loggertable"+id); ---> var  <--- target=ZaGlobalAdvancedStatsPage.getTarget(evt);ZaGlobalAdvancedStatsPage

[WARNING] Try to use a single 'var' statement per scope.
);form.appendChild(a); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
);element.appendChild(div); ---> var  <--- serversSelect=document.getElementById("select-servers"+id)

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById("select-servers"+id); ---> var  <--- soapRequest=AjxSoapDoc.create("GetLoggerStatsRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
"GetLoggerStatsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- cb=function(response){var soapResponse=

[WARNING] Try to use a single 'var' statement per scope.
if(soapResponse.hostname){for( ---> var  <--- i=0,j=soapResponse.hostname.

[WARNING] Try to use a single 'var' statement per scope.
;i<j;i++){ ---> var  <--- option=document.createElement("option");if

[WARNING] Try to use a single 'var' statement per scope.
serversSelect},id);}}; ---> var  <--- csfeParams={soapDoc:soapRequest,asyncMode:true

[WARNING] Try to use a single 'var' statement per scope.
callback:new AjxCallback(cb)}; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
var element=this.getHtmlElement(); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
;div.style.padding="5px 10px"; ---> var  <--- a=document.createElement("a");ZaGlobalAdvancedStatsPage

[WARNING] Try to use a single 'var' statement per scope.
=this._tabBar.getSize(); ---> var  <--- titleCellSize=Dwt.getSize(this.titleCell)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this.titleCell); ---> var  <--- tabBarHeight=tabBarSize.y||this._tabBar.

[WARNING] Try to use a single 'var' statement per scope.
._tabBar.getHtmlElement().clientHeight; ---> var  <--- titleCellHeight=titleCellSize.y||this.titleCell.

[WARNING] Try to use a single 'var' statement per scope.
.y||this.titleCell.clientHeight; ---> var  <--- tabWidth=width;var newHeight=(height-

[WARNING] Try to use a single 'var' statement per scope.
titleCell.clientHeight;var tabWidth=width; ---> var  <--- newHeight=(height-tabBarHeight-titleCellHeight);

[WARNING] Try to use a single 'var' statement per scope.
=(height-tabBarHeight-titleCellHeight); ---> var  <--- tabHeight=(newHeight>50)?newHeight:

[WARNING] Try to use a single 'var' statement per scope.
this._tabs.length){for( ---> var  <--- curTabKey in this._tabs){if(this

[WARNING] Try to use a single 'var' statement per scope.
this._table,htmlEl.firstChild); ---> var  <--- row1;var row2;var col2;row1=

[WARNING] Try to use a single 'var' statement per scope.
,htmlEl.firstChild);var row1; ---> var  <--- row2;var col2;row1=this._table

[WARNING] Try to use a single 'var' statement per scope.
firstChild);var row1;var row2; ---> var  <--- col2;row1=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
ZaMsg.TABT_Disk,ZaMsg.TABT_Session]; ---> var  <--- entry=this._containedObject;if(ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
.push(ZaMsg.TABT_Spam_Activity);} ---> var  <--- tabChoices=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var tabChoices=[];for( ---> var  <--- i=1;i<=innerTabs.length;

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._currentObject){ ---> var  <--- item=this._currentObject;var serverId=this

[WARNING] Try to use a single 'var' statement per scope.
){var item=this._currentObject; ---> var  <--- serverId=this.serverId;var charts=document

[WARNING] Try to use a single 'var' statement per scope.
_currentObject;var serverId=this.serverId; ---> var  <--- charts=document.getElementById("loggerchartservermv-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
;charts.style.display="block"; ---> var  <--- divIds=["servermv-no-mta-"+serverId,"server-message-volume-48hours-"+serverId

[WARNING] Try to use a single 'var' statement per scope.
];ZaGlobalAdvancedStatsPage.hideDIVs(divIds); ---> var  <--- hosts=ZaGlobalAdvancedStatsPage.getMTAHosts();if(

[WARNING] Try to use a single 'var' statement per scope.
.getElementById("loggerchartservermv-flashdetect-"+serverId)); ---> var  <--- startTimes=[null,"now-48h","now-30d","now-60d"

[WARNING] Try to use a single 'var' statement per scope.
"now-30d","now-60d","now-1y"];for( ---> var  <--- i=1;i<divIds.length;

[WARNING] Try to use a single 'var' statement per scope.
:1});}}else{ ---> var  <--- nomta=document.getElementById("loggerchartservermv-no-mta-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
(this);var idx=0; ---> var  <--- html=new Array(50);var serverId

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- serverId=this.serverId;html[idx++

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._currentObject){ ---> var  <--- item=this._currentObject;var serverId=this

[WARNING] Try to use a single 'var' statement per scope.
){var item=this._currentObject; ---> var  <--- serverId=this.serverId;var charts=document

[WARNING] Try to use a single 'var' statement per scope.
_currentObject;var serverId=this.serverId; ---> var  <--- charts=document.getElementById("loggerchartservermc-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
;charts.style.display="block"; ---> var  <--- divIds=["servermc-no-mta-"+serverId,"server-message-count-48hours-"+serverId

[WARNING] Try to use a single 'var' statement per scope.
];ZaGlobalAdvancedStatsPage.hideDIVs(divIds); ---> var  <--- hosts=ZaGlobalAdvancedStatsPage.getMTAHosts();if(

[WARNING] Try to use a single 'var' statement per scope.
.getElementById("loggerchartservermc-flashdetect-"+serverId)); ---> var  <--- startTimes=[null,"now-48h","now-30d","now-60d"

[WARNING] Try to use a single 'var' statement per scope.
"now-30d","now-60d","now-1y"];for( ---> var  <--- i=1;i<divIds.length;

[WARNING] Try to use a single 'var' statement per scope.
:1});}}else{ ---> var  <--- nomta=document.getElementById("loggerchartservermc-no-mta-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
function(){var idx=0; ---> var  <--- html=new Array(50);var serverId

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- serverId=this.serverId;DwtTabViewPage.prototype.

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._currentObject){ ---> var  <--- item=this._currentObject;var serverId=this

[WARNING] Try to use a single 'var' statement per scope.
){var item=this._currentObject; ---> var  <--- serverId=this.serverId;var charts=document

[WARNING] Try to use a single 'var' statement per scope.
_currentObject;var serverId=this.serverId; ---> var  <--- charts=document.getElementById("loggerchartserverasav-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
;charts.style.display="block"; ---> var  <--- divIds=["serverasav-no-mta-"+serverId,"server-message-asav-48hours-"+serverId

[WARNING] Try to use a single 'var' statement per scope.
];ZaGlobalAdvancedStatsPage.hideDIVs(divIds); ---> var  <--- hosts=ZaGlobalAdvancedStatsPage.getMTAHosts();if(

[WARNING] Try to use a single 'var' statement per scope.
.getElementById("loggerchartserverasav-flashdetect-"+serverId)); ---> var  <--- startTimes=[null,"now-48h","now-30d","now-60d"

[WARNING] Try to use a single 'var' statement per scope.
"now-30d","now-60d","now-1y"];for( ---> var  <--- i=1;i<divIds.length;

[WARNING] Try to use a single 'var' statement per scope.
:1});}}else{ ---> var  <--- nomta=document.getElementById("loggerchartserverasav-no-mta-"+serverId)

[WARNING] Try to use a single 'var' statement per scope.
(this);var idx=0; ---> var  <--- html=new Array(50);var serverId

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- serverId=this.serverId;html[idx++

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._currentObject){ ---> var  <--- item=this._currentObject;var serverId=this

[WARNING] Try to use a single 'var' statement per scope.
){var item=this._currentObject; ---> var  <--- serverId=this.serverId;ZaGlobalAdvancedStatsPage.detectFlash(

[WARNING] Try to use a single 'var' statement per scope.
;if(!this._disks){ ---> var  <--- counters=ZaGlobalAdvancedStatsPage.getCounters(item.name,

[WARNING] Try to use a single 'var' statement per scope.
getCounters(item.name,"df.csv"); ---> var  <--- diskKeys={};for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var diskKeys={};for( ---> var  <--- i=0;i<counters.length;

[WARNING] Try to use a single 'var' statement per scope.
<counters.length;i++){ ---> var  <--- disk=counters[i].split("::"

[WARNING] Try to use a single 'var' statement per scope.
disk[0]]=1;} ---> var  <--- disks=[];for(var i in 

[WARNING] Try to use a single 'var' statement per scope.
}var disks=[];for( ---> var  <--- i in diskKeys){disks.push(i

[WARNING] The variable i has already been declared in the same scope...
var disks=[];for(var  ---> i <---  in diskKeys){disks.push(i)

[WARNING] Try to use a single 'var' statement per scope.
;}this._disks=disks;} ---> var  <--- columns=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var columns=[];for( ---> var  <--- i=0;i<this._disks.

[WARNING] The variable i has already been declared in the same scope...
var columns=[];for(var  ---> i <--- =0;i<this._disks.length

[WARNING] Try to use a single 'var' statement per scope.
_disks[i]+"::disk_pct_used");} ---> var  <--- divIds=["server-disk-stat-48hours-"+serverId,"server-disk-stat-30days-"+serverId

[WARNING] Try to use a single 'var' statement per scope.
"server-disk-stat-60days-"+serverId,"server-disk-stat-year-"+serverId]; ---> var  <--- startTimes=["now-48h","now-30d","now-60d","now-1y"

[WARNING] Try to use a single 'var' statement per scope.
"now-30d","now-60d","now-1y"];for( ---> var  <--- i=0;i<divIds.length;

[WARNING] The variable i has already been declared in the same scope...
,"now-60d","now-1y"];for(var  ---> i <--- =0;i<divIds.length;i

[WARNING] Try to use a single 'var' statement per scope.
function(){var idx=0; ---> var  <--- html=new Array(50);DwtTabViewPage.

[WARNING] Try to use a single 'var' statement per scope.
prototype._createHtml.call(this); ---> var  <--- serverId=this.serverId;html[idx++

[WARNING] Try to use a single 'var' statement per scope.
"getMbxPool",getterScope:_MODEL_}]}; ---> var  <--- model=new XModel(modelData);var instance

[WARNING] Try to use a single 'var' statement per scope.
var model=new XModel(modelData); ---> var  <--- instance=new Array();this._view

[WARNING] Try to use a single 'var' statement per scope.
,mbxes:new Array()}; ---> var  <--- soapDoc=AjxSoapDoc.create("GetQuotaUsageRequest",ZaZimbraAdmin.

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("refresh","1"); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.targetServer=targetServer; ---> var  <--- isAsyncMode=callback?true:false;if(

[WARNING] Try to use a single 'var' statement per scope.
true;params.callback=callback;} ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
),busyMsg:ZaMsg.BUSY_GET_QUOTA}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
{result.hasMore=resp.more; ---> var  <--- totalMbxes=resp.searchTotal;result.totalPage=

[WARNING] Try to use a single 'var' statement per scope.
=offset/ZaServerMBXStatsPage.MBX_DISPLAY_LIMIT+1; ---> var  <--- accounts=resp.account;var quotaLimit=0

[WARNING] Try to use a single 'var' statement per scope.
1;var accounts=resp.account; ---> var  <--- quotaLimit=0;var percentage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
resp.account;var quotaLimit=0; ---> var  <--- percentage=0;var diskUsed=0;var 

[WARNING] Try to use a single 'var' statement per scope.
quotaLimit=0;var percentage=0; ---> var  <--- diskUsed=0;var _1MB=1048576;var 

[WARNING] Try to use a single 'var' statement per scope.
percentage=0;var diskUsed=0; ---> var  <--- _1MB=1048576;var accountArr=new Array(

[WARNING] Try to use a single 'var' statement per scope.
diskUsed=0;var _1MB=1048576; ---> var  <--- accountArr=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
accountArr=new Array();for( ---> var  <--- i=0;i<accounts.length;

[WARNING] Try to use a single 'var' statement per scope.
._xform;}var sortable=1; ---> var  <--- sourceHeaderList=new Array();var defaultColumnSortable=

[WARNING] Try to use a single 'var' statement per scope.
;var sourceHeaderList=new Array(); ---> var  <--- defaultColumnSortable=1;sourceHeaderList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
ZaServerMBXStatsPage.XFORM_ITEM_QUOTAUSAGE,false,true); ---> var  <--- ffTableStyle="width:100%;overflow:visible;";var tableStyle=AjxEnv.isIE

[WARNING] Try to use a single 'var' statement per scope.
,true);var ffTableStyle="width:100%;overflow:visible;"; ---> var  <--- tableStyle=AjxEnv.isIE?ffTableStyle+"height:100%;":

[WARNING] Try to use a single 'var' statement per scope.
parent;if(page._rendered){ ---> var  <--- bounds=page.getBounds();returnbounds

[WARNING] Try to use a single 'var' statement per scope.
parent;if(page._rendered){ ---> var  <--- bounds=page.getBounds();returnbounds

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
.getHtmlElement().style.width; ---> var  <--- instance=null;if(!this._initialized

[WARNING] Try to use a single 'var' statement per scope.
(!this._initialized||refresh){ ---> var  <--- serverAttrs=this._server.attrs;var mbxesObj

[WARNING] Try to use a single 'var' statement per scope.
var serverAttrs=this._server.attrs; ---> var  <--- mbxesObj={};if(serverAttrs&&(

[WARNING] Try to use a single 'var' statement per scope.
totalPage,mbxPool:mbxesObj.mbxes}; ---> var  <--- xform=this._view;xform.setInstance(

[WARNING] Try to use a single 'var' statement per scope.
;if(!this._initialized){ ---> var  <--- parentBounds=this.parent.getBounds();

[WARNING] Try to use a single 'var' statement per scope.
totalPage,mbxPool:mbxesObj.mbxes}; ---> var  <--- xform=this._view;xform.parent.

[WARNING] Try to use a single 'var' statement per scope.
try{if(controller instanceof ZaServerStatsController){ ---> var  <--- toolBar=controller.getToolBar();if(

[WARNING] The variable posStyle has already been declared in the same scope...
,className,posStyle,headerList){var  ---> posStyle <--- =DwtControl.ABSOLUTE_STYLE;ZaListView.call(this

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
mbx,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;var progressBar

[WARNING] Try to use a single 'var' statement per scope.
var cnt=this._headerList.length; ---> var  <--- progressBar=null;var progressCssClass=null;var 

[WARNING] Try to use a single 'var' statement per scope.
_headerList.length;var progressBar=null; ---> var  <--- progressCssClass=null;var wholeCssClass=null;var 

[WARNING] Try to use a single 'var' statement per scope.
progressBar=null;var progressCssClass=null; ---> var  <--- wholeCssClass=null;var percent=null;var 

[WARNING] Try to use a single 'var' statement per scope.
progressCssClass=null;var wholeCssClass=null; ---> var  <--- percent=null;var percentInt=null;for

[WARNING] Try to use a single 'var' statement per scope.
wholeCssClass=null;var percent=null; ---> var  <--- percentInt=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
null;var percentInt=null;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
var sortAscending=bSortAsc?1:0; ---> var  <--- sortBy=columnItem._sortField;var xform=this

[WARNING] Try to use a single 'var' statement per scope.
0;var sortBy=columnItem._sortField; ---> var  <--- xform=this.parent;var curInst=xform

[WARNING] Try to use a single 'var' statement per scope.
_sortField;var xform=this.parent; ---> var  <--- curInst=xform.getInstance();var mbxPage

[WARNING] Try to use a single 'var' statement per scope.
var curInst=xform.getInstance(); ---> var  <--- mbxPage=xform.parent;mbxPage.updateMbxLists(

[WARNING] Try to use a single 'var' statement per scope.
){var offset=params.offset; ---> var  <--- instance=this.parent.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
=this.parent.getInstance(); ---> var  <--- server=instance.serverid;var sortBy=instance

[WARNING] Try to use a single 'var' statement per scope.
);var server=instance.serverid; ---> var  <--- sortBy=instance.sortBy;var sortAscending=instance

[WARNING] Try to use a single 'var' statement per scope.
serverid;var sortBy=instance.sortBy; ---> var  <--- sortAscending=instance.sortAscending;var limit=params

[WARNING] Try to use a single 'var' statement per scope.
sortBy;var sortAscending=instance.sortAscending; ---> var  <--- limit=params.limit;var updateCallback=new 

[WARNING] Try to use a single 'var' statement per scope.
sortAscending;var limit=params.limit; ---> var  <--- updateCallback=new AjxCallback(this,this.updateMoreItems

[WARNING] Try to use a single 'var' statement per scope.
&&resp.searchTotal>0)){ ---> var  <--- hasMore=resp.more;var totalMbxes=resp

[WARNING] Try to use a single 'var' statement per scope.
){var hasMore=resp.more; ---> var  <--- totalMbxes=resp.searchTotal;var accounts=resp

[WARNING] Try to use a single 'var' statement per scope.
more;var totalMbxes=resp.searchTotal; ---> var  <--- accounts=resp.account;var quotaLimit=0

[WARNING] Try to use a single 'var' statement per scope.
searchTotal;var accounts=resp.account; ---> var  <--- quotaLimit=0;var percentage=0;var 

[WARNING] Try to use a single 'var' statement per scope.
resp.account;var quotaLimit=0; ---> var  <--- percentage=0;var diskUsed=0;var 

[WARNING] Try to use a single 'var' statement per scope.
quotaLimit=0;var percentage=0; ---> var  <--- diskUsed=0;var _1MB=1048576;var 

[WARNING] Try to use a single 'var' statement per scope.
percentage=0;var diskUsed=0; ---> var  <--- _1MB=1048576;var accountArr=new Array(

[WARNING] Try to use a single 'var' statement per scope.
diskUsed=0;var _1MB=1048576; ---> var  <--- accountArr=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
accountArr=new Array();for( ---> var  <--- i=0;i<accounts.length;

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- currentTabId=instance[ZaModel.currentTab];if

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- currentTabId=instance[ZaModel.currentTab];if

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
.getHtmlElement().style.width; ---> var  <--- instance={currentTab:ZaServerSessionStatsPage.SOAP_TAB_ID};

[WARNING] Try to use a single 'var' statement per scope.
={currentTab:ZaServerSessionStatsPage.SOAP_TAB_ID}; ---> var  <--- xModelObj=new XModel({id:"currentTab",

[WARNING] Try to use a single 'var' statement per scope.
this._view.draw();} ---> var  <--- params={};if(refresh&&refresh

[WARNING] Try to use a single 'var' statement per scope.
var type=this.getType(); ---> var  <--- params={};var curPage=this.

[WARNING] Try to use a single 'var' statement per scope.
();var params={}; ---> var  <--- curPage=this._pageObj[type]["curPage"

[WARNING] Try to use a single 'var' statement per scope.
._pageObj[type]["curPage"]; ---> var  <--- totalPage=this._pageObj[type]["totalPage"

[WARNING] Try to use a single 'var' statement per scope.
=instance[ZaModel.currentTab];} ---> var  <--- type;if(tabId==ZaServerSessionStatsPage.SOAP_TAB_ID)

[WARNING] Try to use a single 'var' statement per scope.
!this._localXForm){return;} ---> var  <--- instance=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- currentTabId=instance[ZaModel.currentTab];var 

[WARNING] Try to use a single 'var' statement per scope.
currentTabId=instance[ZaModel.currentTab]; ---> var  <--- type=this.getType(currentTabId);var 

[WARNING] Try to use a single 'var' statement per scope.
type=this.getType(currentTabId); ---> var  <--- toolBar=controller.getToolBar();var curPage

[WARNING] Try to use a single 'var' statement per scope.
var toolBar=controller.getToolBar(); ---> var  <--- curPage=this._pageObj[type]["curPage"

[WARNING] Try to use a single 'var' statement per scope.
._pageObj[type]["curPage"]; ---> var  <--- totalPage=this._pageObj[type]["totalPage"

[WARNING] Try to use a single 'var' statement per scope.
"DumpSessionsRequest",ZaZimbraAdmin.URN,null); ---> var  <--- listSession="1";var groupByAccount="1";soapDoc

[WARNING] Try to use a single 'var' statement per scope.
,null);var listSession="1"; ---> var  <--- groupByAccount="1";soapDoc.getMethod().

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("groupByAccount",groupByAccount); ---> var  <--- dumpSessCmd=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var dumpSessCmd=new ZmCsfeCommand(); ---> var  <--- params={};params.soapDoc=soapDoc

[WARNING] Try to use a single 'var' statement per scope.
params){params={};} ---> var  <--- instance=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
=this._localXForm.getInstance(); ---> var  <--- currentTabId=instance[ZaModel.currentTab];if

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("sortBy",params.sortBy); ---> var  <--- getSessCmd=new ZmCsfeCommand();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=resp._data.Body.GetSessionsResponse; ---> var  <--- instance=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
type+"_total"]=sessionStats.total; ---> var  <--- sessionList=new AjxVector();if(sessionStats

[WARNING] Try to use a single 'var' statement per scope.
type].join=ZaServerSessionStatsPage._objArrJoin; ---> var  <--- tabBar=this._localXForm.getItemsById("xform_tabbar")

[WARNING] Try to use a single 'var' statement per scope.
.getItemsById("xform_tabbar")[0]; ---> var  <--- dwtTabBar=tabBar.getWidget();if(

[WARNING] Try to use a single 'var' statement per scope.
[reqParams.type+"_total"]); ---> var  <--- currentTabId=instance[ZaModel.currentTab];if

[WARNING] Try to use a single 'var' statement per scope.
){var type=params.type; ---> var  <--- start=params.offset;this._pageObj[

[WARNING] Try to use a single 'var' statement per scope.
{var arr=[];for( ---> var  <--- i=0;i<this.length;

[WARNING] Try to use a single 'var' statement per scope.
<sessResp.length;i++){ ---> var  <--- cSessions=sessResp[i];sessList.add

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._localXForm){ ---> var  <--- instance=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
.zid.length;i++){ ---> var  <--- cAccount=sessResp.zid[i];var 

[WARNING] Try to use a single 'var' statement per scope.
cAccount=sessResp.zid[i]; ---> var  <--- cSessions=cAccount.s;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var cSessions=cAccount.s;for( ---> var  <--- j=0;j<cSessions.length;

[WARNING] Try to use a single 'var' statement per scope.
{var output=new AjxBuffer(); ---> var  <--- instance=this._localXForm.getInstance();

[WARNING] Try to use a single 'var' statement per scope.
if(itemType==ZaServerSession.A_activeSessions){ ---> var  <--- totalSessions=instance.soap_total+instance.admin_total+

[WARNING] Try to use a single 'var' statement per scope.
var headerList1=ZaServerSessionListView._getHeaderList(); ---> var  <--- headerList2=ZaServerSessionListView._getHeaderList();var headerList3

[WARNING] Try to use a single 'var' statement per scope.
var headerList2=ZaServerSessionListView._getHeaderList(); ---> var  <--- headerList3=ZaServerSessionListView._getHeaderList();this.

[WARNING] Try to use a single 'var' statement per scope.
parent._app;var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;ZaListView.call(

[WARNING] The variable posStyle has already been declared in the same scope...
._app;var className=null;var  ---> posStyle <--- =DwtControl.ABSOLUTE_STYLE;ZaListView.call(this

[WARNING] Try to use a single 'var' statement per scope.
{var headerList=new Array(); ---> var  <--- idx=0;var sortable=1;headerList

[WARNING] Try to use a single 'var' statement per scope.
Array();var idx=0; ---> var  <--- sortable=1;headerList[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
;div.style.height="20"; ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
bSortAsc?"Asc":"Desc");try{ ---> var  <--- controller=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
.getInstance().getCurrentController(); ---> var  <--- sessStatsPage=controller._contentView._sessionPage;sessStatsPage.

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
_headerList[i]._width+">"; ---> var  <--- time=item[ZaRetentionPolicy.A2_lifetime];var 

[WARNING] Try to use a single 'var' statement per scope.
time=item[ZaRetentionPolicy.A2_lifetime]; ---> var  <--- number=time.substr(0,time.

[WARNING] Try to use a single 'var' statement per scope.
0,time.length-1); ---> var  <--- unit=time.substr(time.length-

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaGlobalConfig.A_zimbraMtaBlockedExtension); ---> var  <--- selectedExtArray=this.getInstanceValue(ZaGlobalConfig.A2_blocked_extension_selection)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaGlobalConfig.A2_blocked_extension_selection); ---> var  <--- newBlockedExtArray=AjxUtil.arraySubtract(blockedExtArray,selectedExtArray)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaGlobalConfig.A_zimbraMtaBlockedExtension); ---> var  <--- newExtArr=this.getInstanceValue(ZaGlobalConfig.A2_common_extension_selection)

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaGlobalConfig.A_zimbraMtaBlockedExtension); ---> var  <--- newExtArr=this.getInstanceValue(ZaGlobalConfig.A_zimbraMtaCommonBlockedExtension)

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(extStr)){return;} ---> var  <--- commonExtArr=this.getInstanceValue(ZaGlobalConfig.A_zimbraMtaBlockedExtension)

[WARNING] Try to use a single 'var' statement per scope.
(commonExtArr)?[]:commonExtArr; ---> var  <--- newExtArr=extStr.split(/[\s,;]+/);if

[WARNING] Try to use a single 'var' statement per scope.
).getInstanceValue(ZaGlobalConfig.A2_retentionPoliciesKeep_Selection); ---> var  <--- all=this.getForm().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
!selected){return;}for( ---> var  <--- i=0;i<selected.length;

[WARNING] Try to use a single 'var' statement per scope.
var obj=form.getInstance(); ---> var  <--- all;if(obj[ZaRetentionPolicy.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
var obj=form.getInstance(); ---> var  <--- all;if(obj[ZaRetentionPolicy.A2_type]

[WARNING] Try to use a single 'var' statement per scope.
();obj.modifyPolicy(); ---> var  <--- index=AjxUtil.indexOf(all,obj)

[WARNING] Try to use a single 'var' statement per scope.
var methods=ZaTabView.XFormSetObjectMethods.GlobalConfigXFormView; ---> var  <--- cnt=methods.length;var containedObj=this

[WARNING] Try to use a single 'var' statement per scope.
GlobalConfigXFormView;var cnt=methods.length; ---> var  <--- containedObj=this._containedObject;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var containedObj=this._containedObject;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
{var headerListKeep=new Array(); ---> var  <--- sortable=1;var i=0;headerListKeep

[WARNING] Try to use a single 'var' statement per scope.
Array();var sortable=1; ---> var  <--- i=0;headerListKeep[i++]=

[WARNING] Try to use a single 'var' statement per scope.
null,null,true,true); ---> var  <--- headerListPurge=new Array();i=0

[WARNING] Try to use a single 'var' statement per scope.
true);xFormObject.tableCssStyle="width:100%;overflow:auto;"; ---> var  <--- _tab1,_tab2,_tab3,_tab4,_tab5,

[WARNING] Try to use a single 'var' statement per scope.
,_tab8,_tab9,_tab10,_tab11; ---> var  <--- tabBarChoices=[];var switchItems=[]

[WARNING] Try to use a single 'var' statement per scope.
,_tab11;var tabBarChoices=[]; ---> var  <--- switchItems=[];this.helpMap={

[WARNING] Try to use a single 'var' statement per scope.
.DEFAULT_LOCALE].join(""); ---> var  <--- case1={type:_ZATABCASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_Attachments}); ---> var  <--- case2={type:_ZATABCASE_,caseKey:_tab2

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_MTA}); ---> var  <--- case3={type:_ZATABCASE_,caseKey:_tab3

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_IMAP}); ---> var  <--- case4={type:_ZATABCASE_,caseKey:_tab4

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_POP}); ---> var  <--- case5={type:_ZATABCASE_,caseKey:_tab5

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_ASAV}); ---> var  <--- case6={type:_ZATABCASE_,caseKey:_tab6

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Interop}); ---> var  <--- case7={type:_ZATABCASE_,caseKey:_tab7

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_Themes}); ---> var  <--- case8={type:_ZATABCASE_,caseKey:_tab8

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.Domain_Tab_Advanced}); ---> var  <--- case9={type:_ZATABCASE_,caseKey:_tab9

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.NAD_Tab_AUTH}); ---> var  <--- case10={type:_ZATABCASE_,caseKey:_tab10

[WARNING] Try to use a single 'var' statement per scope.
,label:ZaMsg.TABT_RetentionPolicy}); ---> var  <--- case11={type:_SUPER_TABCASE_,caseKey:_tab11

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
account,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
else{if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
this._headerList[i]._field; ---> var  <--- imgName=null;if(field!=null)

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
null;}var memberHashToRemove={}; ---> var  <--- i;for(i=0;i<

[WARNING] Try to use a single 'var' statement per scope.
<memberListToRemove.length;i++){ ---> var  <--- toRemove=memberListToRemove[i];var name=

[WARNING] Try to use a single 'var' statement per scope.
{var toRemove=memberListToRemove[i]; ---> var  <--- name=toRemove[ZaAccount.A_name];if

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_memPagenum)||1);} ---> var  <--- allMemberPages=form.getInstanceValue(ZaDistributionList.A2_allMemberPages)

[WARNING] Try to use a single 'var' statement per scope.
allMemberPages[pageNum]=[];} ---> var  <--- allMembers=form.getInstanceValue(ZaDistributionList.A2_allMemberHash)

[WARNING] Try to use a single 'var' statement per scope.
(ZaDistributionList.A2_allMemberHash)||{}; ---> var  <--- oriPage=allMemberPages[pageNum];var newPage=

[WARNING] Try to use a single 'var' statement per scope.
;var oriPage=allMemberPages[pageNum]; ---> var  <--- newPage=[];for(i=0

[WARNING] Try to use a single 'var' statement per scope.
<oriPage.length;i++){ ---> var  <--- toRemove=oriPage[i];var name=

[WARNING] The variable toRemove has already been declared in the same scope...
oriPage.length;i++){var  ---> toRemove <--- =oriPage[i];var name=toRemove

[WARNING] Try to use a single 'var' statement per scope.
{var toRemove=oriPage[i]; ---> var  <--- name=toRemove[ZaAccount.A_name];if

[WARNING] The variable name has already been declared in the same scope...
var toRemove=oriPage[i];var  ---> name <--- =toRemove[ZaAccount.A_name];if(

[WARNING] Try to use a single 'var' statement per scope.
memberListToRemove.sort(ZaDistributionList.compareTwoMembers); ---> var  <--- newRemoveList=[];var i=0,

[WARNING] Try to use a single 'var' statement per scope.
compareTwoMembers);var newRemoveList=[]; ---> var  <--- i=0,j=0;var newAddList

[WARNING] Try to use a single 'var' statement per scope.
var i=0,j=0; ---> var  <--- newAddList=[];while(i<oriAddList

[WARNING] Try to use a single 'var' statement per scope.
length&&j<memberListToRemove.length){ ---> var  <--- toAdd=oriAddList[i];var toRemove=

[WARNING] Try to use a single 'var' statement per scope.
{var toAdd=oriAddList[i]; ---> var  <--- toRemove=memberListToRemove[j];var name=

[WARNING] Try to use a single 'var' statement per scope.
;var toRemove=memberListToRemove[j]; ---> var  <--- name=toRemove[ZaAccount.A_name];var 

[WARNING] Try to use a single 'var' statement per scope.
name=toRemove[ZaAccount.A_name]; ---> var  <--- cmp=ZaDistributionList.compareTwoMembers(toAdd,toRemove)

[WARNING] Try to use a single 'var' statement per scope.
push(memberListToRemove[j]);} ---> var  <--- oriRemoveList=form.getInstanceValue(ZaDistributionList.A2_removeList)

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newRemoveList,ZaDistributionList.A2_removeList); ---> var  <--- oriPageMembers=form.getInstanceValue(ZaDistributionList.A2_memberList)

[WARNING] Try to use a single 'var' statement per scope.
form.getInstanceValue(ZaDistributionList.A2_memberList); ---> var  <--- newPageMembers=ZaDLXFormView.removeMemberListFromPage(form,memberListToRemove)

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newPageMembers,ZaDistributionList.A2_memberList); ---> var  <--- numMembers=form.getInstanceValue(ZaDistributionList.A2_numMembers)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selected=form.getInstanceValue(ZaDistributionList.A2_membersSelected)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- curPageMembers=form.getInstanceValue(ZaDistributionList.A2_memberList)

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- currentPageNum=this.getInstanceValue(ZaDistributionList.A2_poolPagenum)

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- currentPageNum=this.getInstanceValue(ZaDistributionList.A2_poolPagenum)

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(currentPageNum,ZaDistributionList.A2_memPagenum); ---> var  <--- currentObj=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
currentObj[ZaDistributionList.A2_memPagenum]=currentPageNum; ---> var  <--- memberList=currentObj[ZaDistributionList.A2_allMemberPages][currentPageNum

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(currentPageNum,ZaDistributionList.A2_memPagenum); ---> var  <--- currentObj=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
currentObj[ZaDistributionList.A2_memPagenum]=currentPageNum; ---> var  <--- memberList=currentObj[ZaDistributionList.A2_allMemberPages][currentPageNum

[WARNING] Try to use a single 'var' statement per scope.
(ZaDistributionList.A2_members)[0]; ---> var  <--- membersSelection=null;if(memberItem){var 

[WARNING] Try to use a single 'var' statement per scope.
membersSelection=null;if(memberItem){ ---> var  <--- membersSelection=memberItem.getSelection();}if

[WARNING] The variable membersSelection has already been declared in the same scope...
=null;if(memberItem){var  ---> membersSelection <--- =memberItem.getSelection();}if(

[WARNING] Try to use a single 'var' statement per scope.
(ZaDistributionList.A2_memberPool)[0]; ---> var  <--- membersSelection=null;if(memberItem){var 

[WARNING] Try to use a single 'var' statement per scope.
membersSelection=null;if(memberItem){ ---> var  <--- membersSelection=memberItem.getSelection();}if

[WARNING] The variable membersSelection has already been declared in the same scope...
=null;if(memberItem){var  ---> membersSelection <--- =memberItem.getSelection();}if(

[WARNING] Try to use a single 'var' statement per scope.
allMemberPages[pageNum]=[];} ---> var  <--- allMembers=form.getInstanceValue(ZaDistributionList.A2_allMemberHash)

[WARNING] Try to use a single 'var' statement per scope.
(ZaDistributionList.A2_allMemberHash)||{}; ---> var  <--- page=allMemberPages[pageNum];for(var 

[WARNING] Try to use a single 'var' statement per scope.
page=allMemberPages[pageNum];for( ---> var  <--- i=0;i<memberListToAdd.length;

[WARNING] Try to use a single 'var' statement per scope.
<memberListToAdd.length;i++){ ---> var  <--- member=memberListToAdd[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name]){continue;} ---> var  <--- name=member[ZaAccount.A_name];if

[WARNING] Try to use a single 'var' statement per scope.
null;}var nonMembers=[]; ---> var  <--- members=[];var allMembers=form.

[WARNING] Try to use a single 'var' statement per scope.
[];var members=[]; ---> var  <--- allMembers=form.getInstanceValue(ZaDistributionList.A2_allMemberHash)

[WARNING] Try to use a single 'var' statement per scope.
.A2_allMemberHash)||{};for( ---> var  <--- i=0;i<addressList.length;

[WARNING] Try to use a single 'var' statement per scope.
<addressList.length;i++){ ---> var  <--- member=addressList[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name]){continue;} ---> var  <--- name=member[ZaAccount.A_name];if

[WARNING] Try to use a single 'var' statement per scope.
ZaDLXFormView.excludeAddressesInAllMembers(form,newAddresses); ---> var  <--- existedMembers=list[0],memberListToAdd=list

[WARNING] Try to use a single 'var' statement per scope.
if(existedMembers.length>0){ ---> var  <--- existed=existedMembers.join("<br>");var 

[WARNING] Try to use a single 'var' statement per scope.
existed=existedMembers.join("<br>"); ---> var  <--- msg=AjxMessageFormat.format(ZaMsg.DLXV_MsgMemberExisted,

[WARNING] Try to use a single 'var' statement per scope.
if(memberListToAdd.length>0){ ---> var  <--- add=memberListToAdd.join("<br>");msg

[WARNING] Try to use a single 'var' statement per scope.
.length<=0){return;} ---> var  <--- oriPageMembers=form.getInstanceValue(ZaDistributionList.A2_memberList)

[WARNING] Try to use a single 'var' statement per scope.
form.getInstanceValue(ZaDistributionList.A2_memberList); ---> var  <--- newPageMembers=ZaDLXFormView.addMemberListToPage(form,memberListToAdd)

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newPageMembers,ZaDistributionList.A2_memberList); ---> var  <--- oriRemoveList=form.getInstanceValue(ZaDistributionList.A2_removeList)

[WARNING] Try to use a single 'var' statement per scope.
memberListToAdd.sort(ZaDistributionList.compareTwoMembers); ---> var  <--- newAddList=[],newRemoveList=[];

[WARNING] Try to use a single 'var' statement per scope.
=[],newRemoveList=[]; ---> var  <--- i=0,j=0;while(

[WARNING] Try to use a single 'var' statement per scope.
length&&j<memberListToAdd.length){ ---> var  <--- toRemove=oriRemoveList[i];var toAdd=

[WARNING] Try to use a single 'var' statement per scope.
{var toRemove=oriRemoveList[i]; ---> var  <--- toAdd=memberListToAdd[j];var name=

[WARNING] Try to use a single 'var' statement per scope.
;var toAdd=memberListToAdd[j]; ---> var  <--- name=toAdd[ZaAccount.A_name];var 

[WARNING] Try to use a single 'var' statement per scope.
name=toAdd[ZaAccount.A_name]; ---> var  <--- cmp=ZaDistributionList.compareTwoMembers(toRemove,toAdd)

[WARNING] Try to use a single 'var' statement per scope.
push(memberListToAdd[j]);} ---> var  <--- oriAddList=form.getInstanceValue(ZaDistributionList.A2_addList)

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newAddList,ZaDistributionList.A2_addList); ---> var  <--- numMembers=form.getInstanceValue(ZaDistributionList.A2_numMembers)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selectedAddresses=form.getInstanceValue(ZaDistributionList.A2_memberPoolSelected)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- onePageAddresses=form.getInstanceValue(ZaDistributionList.A2_memberPool)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- freeFormAddresses=form.getInstanceValue(ZaDistributionList.A2_optionalAdd)

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(freeFormAddresses)){return;} ---> var  <--- freeFormAddresses=freeFormAddresses.split(/[\r\n,;]+/);var 

[WARNING] The variable freeFormAddresses has already been declared in the same scope...
(freeFormAddresses)){return;}var  ---> freeFormAddresses <--- =freeFormAddresses.split(/[\r\n,;]+/);var goodAddresses

[WARNING] Try to use a single 'var' statement per scope.
freeFormAddresses=freeFormAddresses.split(/[\r\n,;]+/); ---> var  <--- goodAddresses=[];var stdEmailRegEx=/([^\<\;]*)\<([^\>]+)\>/;

[WARNING] Try to use a single 'var' statement per scope.
/[\r\n,;]+/);var goodAddresses=[]; ---> var  <--- stdEmailRegEx=/([^\<\;]*)\<([^\>]+)\>/;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
];var stdEmailRegEx=/([^\<\;]*)\<([^\>]+)\>/;for( ---> var  <--- i=0;i<freeFormAddresses.length;

[WARNING] Try to use a single 'var' statement per scope.
<freeFormAddresses.length;i++){ ---> var  <--- address=AjxStringUtil.trim(freeFormAddresses[i]

[WARNING] Try to use a single 'var' statement per scope.
,true);if(address){ ---> var  <--- result=stdEmailRegEx.exec(address);if

[WARNING] Try to use a single 'var' statement per scope.
!AjxEmailAddress.isValid(address)){ ---> var  <--- msg=AjxMessageFormat.format(ZaMsg.WARNING_DL_INVALID_EMAIL,

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=xform.getModel().getItem(

[WARNING] Try to use a single 'var' statement per scope.
getModel().getItem(a); ---> var  <--- attr=entry.attrs[a];if

[WARNING] Try to use a single 'var' statement per scope.
{var resArr=new Array(); ---> var  <--- tmpArr=resList.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=resList.getArray();for( ---> var  <--- i=0;i<tmpArr.length;

[WARNING] Try to use a single 'var' statement per scope.
){var limit=ZaDistributionList.MEMBER_POOL_PAGE_SIZE; ---> var  <--- startPageNum=this._containedObject[ZaDistributionList.A2_poolPagenum]

[WARNING] Try to use a single 'var' statement per scope.
this._containedObject[ZaDistributionList.A2_poolPagenum]; ---> var  <--- result=ZaDLXFormView.getMatchedAccounts.call(this,

[WARNING] Try to use a single 'var' statement per scope.
function(){var limit=0; ---> var  <--- startPageNum=1;var result=ZaDLXFormView.getMatchedAccounts

[WARNING] Try to use a single 'var' statement per scope.
limit=0;var startPageNum=1; ---> var  <--- result=ZaDLXFormView.getMatchedAccounts.call(this,

[WARNING] Try to use a single 'var' statement per scope.
;var result={};try{ ---> var  <--- types=[ZaSearch.ACCOUNTS,ZaSearch.DLS

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.DLS,ZaSearch.ALIASES]; ---> var  <--- queryString=ZaSearch.getSearchByNameQuery(this._containedObject[

[WARNING] Try to use a single 'var' statement per scope.
.A2_query],types,true); ---> var  <--- myName=this._containedObject[ZaAccount.A_name]

[WARNING] Try to use a single 'var' statement per scope.
ZaDLXFormView.makeQueryStringWithoutSelf(queryString,myName); ---> var  <--- searchQueryHolder=new ZaSearchQuery(queryString,types,false

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_alias_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaDistributionList.A2_alias_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailAlias]){ ---> var  <--- aliasArr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMailAlias];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=aliasArr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=aliasArr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
&&instance.alias_selection_cache[0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_alias_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraMailAlias].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editAliasDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_owners_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaDistributionList.A2_owners_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
&&instance[ZaDistributionList.A2_DLOwners]){ ---> var  <--- aliasArr=instance[ZaDistributionList.A2_DLOwners];for

[WARNING] Try to use a single 'var' statement per scope.
instance[ZaDistributionList.A2_DLOwners];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=aliasArr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=aliasArr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_owners_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_owners_selection_cache][0]; ---> var  <--- cnt=instance[ZaDistributionList.A2_DLOwners].length

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_DLOwners].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editOwnerDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance[ZaDistributionList.A2_DLOwners];if

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name])){return;} ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance[ZaDistributionList.A2_DLOwners];arr

[WARNING] Try to use a single 'var' statement per scope.
{var sourceHeaderList=new Array(); ---> var  <--- sortable=1;sourceHeaderList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_displayname,true,true); ---> var  <--- membersHeaderList=new Array();membersHeaderList[0

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name,true,true); ---> var  <--- directMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT); ---> var  <--- indirectMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT); ---> var  <--- nonMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.NON);

[WARNING] Try to use a single 'var' statement per scope.
);this.helpMap={}; ---> var  <--- _tab1,_tab2,_tab3,_tab4,_tab5,

[WARNING] Try to use a single 'var' statement per scope.
:"inputBorder",containerCssStyle:"width:100%"}}; ---> var  <--- cases=[];var hMsgMemberNum,hMemberList,

[WARNING] Try to use a single 'var' statement per scope.
}};var cases=[]; ---> var  <--- hMsgMemberNum,hMemberList,wMemberList,hMemberPool,wMemberPool,

[WARNING] Try to use a single 'var' statement per scope.
wMemberPool="100%";}wRightPanel="100%"; ---> var  <--- case1={type:_ZATABCASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_ZATABCASE_,caseKey:_tab2

[WARNING] Try to use a single 'var' statement per scope.
case2);}if(_tab3){ ---> var  <--- spaceHeight="7";if(AjxEnv.isIE)

[WARNING] Try to use a single 'var' statement per scope.
.isIE){spaceHeight="3";} ---> var  <--- case3={type:_ZATABCASE_,numCols:2

[WARNING] Try to use a single 'var' statement per scope.
case3);}if(_tab4){ ---> var  <--- addAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- editAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- deleteAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- case4={type:_ZATABCASE_,width:"100%"

[WARNING] Try to use a single 'var' statement per scope.
case4);}if(_tab5){ ---> var  <--- addOwnerButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
width:"100px",onActivate:"ZaDLXFormView.addOwnerButtonListener.call(this);"}; ---> var  <--- editOwnerButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
.isEditOwnerEnabled],onActivate:"ZaDLXFormView.editOwnerButtonListener.call(this);"}; ---> var  <--- deleteOwnerButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
enableDisableChecks:[ZaDLXFormView.isDeleteOwnerEnabled]}; ---> var  <--- case5={type:_ZATABCASE_,width:"100%"

[WARNING] Try to use a single 'var' statement per scope.
case5);}if(_tab6){ ---> var  <--- case6={type:_ZATABCASE_,caseKey:_tab6

[WARNING] Try to use a single 'var' statement per scope.
;cases.push(case6);} ---> var  <--- headerItems=[{type:_AJX_IMAGE_,src:

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- pageNumInPool=form.getInstanceValue(refOfPageNum)||0

[WARNING] Try to use a single 'var' statement per scope.
){var curPageNum=value||1; ---> var  <--- totalPageNum=this.getForm().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
){var curPageNum=value||1; ---> var  <--- totalPagenum=this.getForm().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getMyForm();if(xform){ ---> var  <--- instance=xform.getInstance()||{}

[WARNING] Try to use a single 'var' statement per scope.
entry[ZaDistributionList.A2_numMembers]||0; ---> var  <--- allMemberPages=entry[ZaDistributionList.A2_allMemberPages]||[

[WARNING] Try to use a single 'var' statement per scope.
instance[ZaDistributionList.A2_allMemberPages]=allMemberPages; ---> var  <--- firstPage=(allMemberPages&&allMemberPages.length)?

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_domainName]=domainName; ---> var  <--- domain=ZaItem.create(newDomain,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- tmpCurrentRemoveList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_removeList); ---> var  <--- tmpCurrentMemberList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_memberList); ---> var  <--- tmpCurrentAddList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_addList); ---> var  <--- removeExistedList=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var removeExistedList=[];for( ---> var  <--- i=0;i<tmpCurrentMemberList.length;

[WARNING] Try to use a single 'var' statement per scope.
<tmpCurrentMemberList.length;i++){ ---> var  <--- removedItem=tmpCurrentMemberList[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
removeExistedList.push(removedItem);}} ---> var  <--- newRemoveList=AjxUtil.mergeArrays(tmpCurrentRemoveList,removeExistedList)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- tmpCurrentMemberList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_memberList); ---> var  <--- tmpCurrentAddList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_addList); ---> var  <--- tmpSelectedList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_membersSelected); ---> var  <--- tmpCurrentRemoveList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_removeList); ---> var  <--- tmpOrigList=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_origList); ---> var  <--- newMemberList=AjxUtil.arraySubtract(tmpCurrentMemberList,form.

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newMemberList,ZaDistributionList.A2_memberList); ---> var  <--- newAddList=AjxUtil.arraySubtract(tmpCurrentAddList,form.

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(newAddList,ZaDistributionList.A2_addList); ---> var  <--- removeExistedList=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var removeExistedList=[];for( ---> var  <--- i=0;i<tmpSelectedList.length;

[WARNING] Try to use a single 'var' statement per scope.
<tmpSelectedList.length;i++){ ---> var  <--- removedItem=tmpSelectedList[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
.push(removedItem);}}} ---> var  <--- newRemoveList=AjxUtil.mergeArrays(tmpCurrentRemoveList,removeExistedList)

[WARNING] Try to use a single 'var' statement per scope.
(ZaDistributionList.A2_members)[0]; ---> var  <--- membersSelection=null;if(memberItem){var 

[WARNING] Try to use a single 'var' statement per scope.
membersSelection=null;if(memberItem){ ---> var  <--- membersSelection=memberItem.getSelection();}if

[WARNING] The variable membersSelection has already been declared in the same scope...
=null;if(memberItem){var  ---> membersSelection <--- =memberItem.getSelection();}if(

[WARNING] Try to use a single 'var' statement per scope.
.getItemsById("memberPool")[0]; ---> var  <--- membersSelection=null;if(memberItem){var 

[WARNING] Try to use a single 'var' statement per scope.
membersSelection=null;if(memberItem){ ---> var  <--- membersSelection=memberItem.getSelection();}if

[WARNING] The variable membersSelection has already been declared in the same scope...
=null;if(memberItem){var  ---> membersSelection <--- =memberItem.getSelection();}if(

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selectedAddArray=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_memberPoolSelected); ---> var  <--- newSelectedArray=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var newSelectedArray=[];for( ---> var  <--- i=0;i<selectedAddArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<selectedAddArray.length;i++){ ---> var  <--- selectedItem=selectedAddArray[i];if(selectedItem

[WARNING] Try to use a single 'var' statement per scope.
newSelectedArray.push(selectedItem);}} ---> var  <--- tmpAddArray=AjxUtil.mergeArrays(form.getModel(

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_addList)._version+1; ---> var  <--- tmpMembersArray=AjxUtil.mergeArrays(form.getModel(

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selectedAddArray=form.getModel().getInstanceValue(

[WARNING] Try to use a single 'var' statement per scope.
getInstance(),ZaDistributionList.A2_memberPool); ---> var  <--- newSelectedArray=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var newSelectedArray=[];for( ---> var  <--- i=0;i<selectedAddArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<selectedAddArray.length;i++){ ---> var  <--- selectedItem=selectedAddArray[i];if(selectedItem

[WARNING] Try to use a single 'var' statement per scope.
newSelectedArray.push(selectedItem);}} ---> var  <--- tmpAddArray=AjxUtil.mergeArrays(form.getModel(

[WARNING] Try to use a single 'var' statement per scope.
ZaDistributionList.A2_addList)._version+1; ---> var  <--- tmpMembersArray=AjxUtil.mergeArrays(form.getModel(

[WARNING] Try to use a single 'var' statement per scope.
entry[ZaDistributionList.A2_memberList];for( ---> var  <--- i=0;i<memberList.length;

[WARNING] Try to use a single 'var' statement per scope.
[i]);}}for( ---> var  <--- a in entry.attrs){var modelItem=

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
{var resArr=new Array(); ---> var  <--- tmpArr=resList.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=resList.getArray();for( ---> var  <--- i=0;i<tmpArr.length;

[WARNING] Try to use a single 'var' statement per scope.
ZaSearch.DLS,ZaSearch.ALIASES]; ---> var  <--- searchQueryHolder=new ZaSearchQuery(ZaSearch.getSearchByNameQuery(this

[WARNING] Try to use a single 'var' statement per scope.
false,"",null,10); ---> var  <--- result=ZaSearch.searchByQueryHolder(searchQueryHolder,this.

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_alias_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaDistributionList.A2_alias_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaAccount.A_zimbraMailAlias]){ ---> var  <--- aliasArr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaAccount.A_zimbraMailAlias];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=aliasArr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=aliasArr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
&&instance.alias_selection_cache[0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaDistributionList.A2_alias_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_zimbraMailAlias].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editAliasDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaAccount.A_zimbraMailAlias]

[WARNING] Try to use a single 'var' statement per scope.
{var sourceHeaderList=new Array(); ---> var  <--- sortable=1;sourceHeaderList[0]=new 

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_displayname,true,true); ---> var  <--- membersHeaderList=new Array();membersHeaderList[0

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name,true,true); ---> var  <--- directMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.DIRECT); ---> var  <--- indirectMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT);

[WARNING] Try to use a single 'var' statement per scope.
=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.INDIRECT); ---> var  <--- nonMemberOfHeaderList=new ZaAccountMemberOfsourceHeaderList(ZaAccountMemberOfsourceHeaderList.NON);

[WARNING] Try to use a single 'var' statement per scope.
0;this.stepChoices=[]; ---> var  <--- _tab1,_tab2,_tab3,_tab4,_tab5,

[WARNING] Try to use a single 'var' statement per scope.
:"inputBorder",containerCssStyle:"width:95%"}}; ---> var  <--- cases=[];var hMsgMemberNum,hMemberList,

[WARNING] Try to use a single 'var' statement per scope.
}};var cases=[]; ---> var  <--- hMsgMemberNum,hMemberList,wMemberList,hMemberPool,wMemberPool,

[WARNING] Try to use a single 'var' statement per scope.
;wMemberPool="98%";wRightPanel="100%"; ---> var  <--- case1={type:_CASE_,caseKey:_tab1

[WARNING] Try to use a single 'var' statement per scope.
(case1);if(_tab2){ ---> var  <--- case2={type:_CASE_,caseKey:_tab2

[WARNING] Try to use a single 'var' statement per scope.
case2);}if(_tab3){ ---> var  <--- case3={type:_CASE_,caseKey:_tab3

[WARNING] Try to use a single 'var' statement per scope.
case3);}if(_tab4){ ---> var  <--- addAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- editAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- deleteAliasButton={type:_DWT_BUTTON_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
hasWritePermission,ZaAccount.A_zimbraMailAlias]];} ---> var  <--- case4={type:_CASE_,caseKey:_tab4

[WARNING] Try to use a single 'var' statement per scope.
case4);}if(_tab5){ ---> var  <--- case5={type:_CASE_,caseKey:_tab5

[WARNING] Try to use a single 'var' statement per scope.
case5);}if(_tab6){ ---> var  <--- case6={type:_CASE_,caseKey:_tab6

[WARNING] Try to use a single 'var' statement per scope.
;cases.push(case6);} ---> var  <--- headerItems=[{type:_AJX_IMAGE_,src:

[WARNING] Try to use a single 'var' statement per scope.
(var a in entry.attrs){ ---> var  <--- modelItem=this._localXForm.getModel().

[WARNING] Try to use a single 'var' statement per scope.
.setAttrs[ZaResource.A_COSId]){ ---> var  <--- cos=ZaCos.getCosById(this._containedObject.

[WARNING] Try to use a single 'var' statement per scope.
[ZaResource.A2_calFwdAddr_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaResource.A2_calFwdAddr_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
.attrs[ZaResource.A_zimbraPrefCalendarForwardInvitesTo]){ ---> var  <--- arr=instance.attrs[ZaResource.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaResource.A_zimbraPrefCalendarForwardInvitesTo];for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=arr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=arr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
ZaResource.A2_calFwdAddr_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
[ZaAccount.A2_calFwdAddr_selection_cache][0]; ---> var  <--- cnt=instance.attrs[ZaResource.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
ZaResource.A_zimbraPrefCalendarForwardInvitesTo].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
.parent.editCalFwdAddrDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance.attrs[ZaResource.A_zimbraPrefCalendarForwardInvitesTo]

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj={};obj[ZaAccount.A_name

[WARNING] Try to use a single 'var' statement per scope.
.A_name].length>1){ ---> var  <--- arr=this.getInstance().attrs[

[WARNING] Try to use a single 'var' statement per scope.
ZaResource.A2_signature_selection_cache][0]){ ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj=ZaUtil.deepCloneObject(instance[ZaResource.

[WARNING] Try to use a single 'var' statement per scope.
.parent.editSignatureDlg.getObject(); ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance[ZaResource.A2_signatureList];var 

[WARNING] Try to use a single 'var' statement per scope.
arr=instance[ZaResource.A2_signatureList]; ---> var  <--- index=ZaUtil.findValueInObjArrByPropertyName(arr,obj[

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- formPage=this.getForm().parent;

[WARNING] Try to use a single 'var' statement per scope.
.getForm(),null);} ---> var  <--- obj=new ZaSignature();formPage.addSignatureDlg

[WARNING] Try to use a single 'var' statement per scope.
.A2_name].length>0){ ---> var  <--- instance=this.getInstance();var arr

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- arr=instance[ZaResource.A2_signatureList];var 

[WARNING] Try to use a single 'var' statement per scope.
arr=instance[ZaResource.A2_signatureList]; ---> var  <--- index=ZaUtil.findValueInObjArrByPropertyName(arr,obj[

[WARNING] Try to use a single 'var' statement per scope.
A2_signature_selection_cache,[]);}else{ ---> var  <--- warningMsg=AjxMessageFormat.format(ZaMsg.SignatureExist,

[WARNING] Try to use a single 'var' statement per scope.
[ZaResource.A2_signature_selection_cache]!=null){ ---> var  <--- cnt=instance[ZaResource.A2_signature_selection_cache].length

[WARNING] Try to use a single 'var' statement per scope.
&&instance[ZaResource.A2_signatureList]){ ---> var  <--- i;var isUsed=false;var warningMsg;

[WARNING] Try to use a single 'var' statement per scope.
ZaResource.A2_signatureList]){var i; ---> var  <--- isUsed=false;var warningMsg;for(i

[WARNING] Try to use a single 'var' statement per scope.
{var i;var isUsed=false; ---> var  <--- warningMsg;for(i=0;i<

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- currentId=instance[ZaResource.A2_signature_selection_cache][i

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!isUsed){ ---> var  <--- arr=instance[ZaResource.A2_signatureList];for

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- cnt2=arr.length-1;for(

[WARNING] Try to use a single 'var' statement per scope.
=arr.length-1;for( ---> var  <--- k=cnt2;k>=0;k--

[WARNING] Try to use a single 'var' statement per scope.
var domainName;domainName=ZaSettings.myDomainName; ---> var  <--- imgChoices=[{value:ZaResource.RESOURCE_TYPE_LOCATION,

[WARNING] Try to use a single 'var' statement per scope.
.RESOURCE_TYPE_EQUIPMENT,label:"Resource_32"}]; ---> var  <--- headerItems=[{type:_AJX_IMAGE_,ref:

[WARNING] Try to use a single 'var' statement per scope.
this.tabChoices=new Array(); ---> var  <--- _tab2;var _tab1=++this.TAB_INDEX;

[WARNING] Try to use a single 'var' statement per scope.
=new Array();var _tab2; ---> var  <--- _tab1=++this.TAB_INDEX;this.tabChoices

[WARNING] Try to use a single 'var' statement per scope.
label:ZaMsg.TABT_ResLocationContact});} ---> var  <--- cases=[];var nameGroup={type

[WARNING] Try to use a single 'var' statement per scope.
);}var cases=[]; ---> var  <--- nameGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
,visibilityChecks:[]}]}; ---> var  <--- setupGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
:_LEFT_,cssClass:"admin_xform_number_input"}); ---> var  <--- fwdInvitesGrpr={type:_GROUP_,id:"resource_form_forwarding_group"

[WARNING] Try to use a single 'var' statement per scope.
setupGroup.items.push(fwdInvitesGrpr); ---> var  <--- passwordGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
,enableDisableChecks:[]}]}; ---> var  <--- signatureGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- instance=this.getInstance();var tempChoice

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- tempChoice=ZaSignature.getSignatureChoices(instance[ZaResource.

[WARNING] Try to use a single 'var' statement per scope.
choices:this.signatureChoices}]}; ---> var  <--- notesGroup={type:_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
NAD_Notes,labelLocation:_LEFT_}]}; ---> var  <--- case1={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case1); ---> var  <--- defaultWidth=200;if(_tab2){this

[WARNING] Try to use a single 'var' statement per scope.
.DEFAULT_LOCALE].join(""); ---> var  <--- case2={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
attrs[ZaDomain.A_domainName]=domainName; ---> var  <--- domain=ZaItem.create(newDomain,ZaDomain,

[WARNING] Try to use a single 'var' statement per scope.
.ACCOUNTS,ZaSearch.RESOURCES]}; ---> var  <--- resp=ZaSearch.searchDirectory(params).Body

[WARNING] Try to use a single 'var' statement per scope.
searchDirectory(params).Body.SearchDirectoryResponse; ---> var  <--- list=new ZaItemList();list.loadFromJS

[WARNING] Try to use a single 'var' statement per scope.
list.size()>0){ ---> var  <--- acc=list.getArray()[0]

[WARNING] Try to use a single 'var' statement per scope.
;this.signatureChoices.dirtyChoices(); ---> var  <--- domainName;if(!domainName){try{

[WARNING] Try to use a single 'var' statement per scope.
var domainName;domainName=ZaSettings.myDomainName; ---> var  <--- emptyAlias="@"+domainName;var cases=new 

[WARNING] Try to use a single 'var' statement per scope.
myDomainName;var emptyAlias="@"+domainName; ---> var  <--- cases=new Array();this.cosChoices

[WARNING] Try to use a single 'var' statement per scope.
XFormChoices.OBJECT_LIST,"id","name"); ---> var  <--- nameGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
this.getInstanceValue(ZaResource.A_name); ---> var  <--- regEx=/[^a-zA-Z0-9_\-\.]/g;var newName=elementValue.replace

[WARNING] Try to use a single 'var' statement per scope.
.A_name);var regEx=/[^a-zA-Z0-9_\-\.]/g; ---> var  <--- newName=elementValue.replace(regEx,"")

[WARNING] Try to use a single 'var' statement per scope.
,enableDisableChecks:[]}]}; ---> var  <--- setupGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
).getItems()[0]; ---> var  <--- form=this.getForm();if(

[WARNING] Try to use a single 'var' statement per scope.
enableDisableChecks:[]}]}); ---> var  <--- passwordGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
_LEFT_,cssClass:"admin_xform_name_input"}]}; ---> var  <--- notesGroup={type:_ZAWIZ_TOP_GROUPER_,label:ZaMsg

[WARNING] Try to use a single 'var' statement per scope.
NAD_Notes,labelLocation:_LEFT_}]}; ---> var  <--- case1={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case1); ---> var  <--- defaultWidth=250;var case2={type:

[WARNING] Try to use a single 'var' statement per scope.
(case1);var defaultWidth=250; ---> var  <--- case2={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
};cases.push(case2); ---> var  <--- signatureGroup={type:_ZAWIZGROUP_,id:"account_wiz_signature_group"

[WARNING] Try to use a single 'var' statement per scope.
=this.getForm().parent; ---> var  <--- instance=this.getInstance();var tempChoice

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- tempChoice=ZaSignature.getNewSignatureChoices(instance[ZaResource.

[WARNING] Try to use a single 'var' statement per scope.
choices:this.signatureChoices}]}; ---> var  <--- case3={type:_CASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
var obj=this.getObject(); ---> var  <--- isEnabledOk=(!AjxUtil.isEmpty(obj[

[WARNING] Try to use a single 'var' statement per scope.
"ClearCookieRequest",ZaZimbraAdmin.URN,null); ---> var  <--- cookieBy=soapDoc.set("cookie");cookieBy

[WARNING] Try to use a single 'var' statement per scope.
setAttribute("name",ZaZimbraAdmin._COOKIE_NAME); ---> var  <--- clearCookieCommand=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var clearCookieCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
"GetDomainInfoRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("domain",location.

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by","virtualHostname"); ---> var  <--- command=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var command=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- resp;var isResend=false;try{resp

[WARNING] Try to use a single 'var' statement per scope.
params.noAuthToken=true;var resp; ---> var  <--- isResend=false;try{resp=command.

[WARNING] Try to use a single 'var' statement per scope.
.GetDomainInfoResponse;}if(resp){ ---> var  <--- obj={};ZaItem.prototype.initFromJS

[WARNING] Try to use a single 'var' statement per scope.
=obj.attrs.zimbraSkinLogoURL;}} ---> var  <--- appCtxt=new ZaAppCtxt();var userShell=

[WARNING] Try to use a single 'var' statement per scope.
}var appCtxt=new ZaAppCtxt(); ---> var  <--- userShell=window.document.getElementById(ZaSettings.

[WARNING] Try to use a single 'var' statement per scope.
.get(ZaSettings.SKIN_SHELL_ID)); ---> var  <--- shell=new DwtShell({userShell:userShell}

[WARNING] Try to use a single 'var' statement per scope.
setTabGroup(appCtxt.getRootTabGroup()); ---> var  <--- lm=new ZaZimbraAdmin(appCtxt);};

[WARNING] Try to use a single 'var' statement per scope.
);shell.setBusy(true); ---> var  <--- locationStr=location.protocol+"//"+location.

[WARNING] Try to use a single 'var' statement per scope.
else{locationStr=locationStr+"?logoff=1";} ---> var  <--- act=new AjxTimedAction(null,ZaZimbraAdmin.redir

[WARNING] Try to use a single 'var' statement per scope.
LOCALE_QS].join("")); ---> var  <--- callback=new AjxCallback(ZaZimbraAdmin.reinit_func);

[WARNING] Try to use a single 'var' statement per scope.
GetInfoResponse.name;if(adminName){ ---> var  <--- emailChunks=adminName.split("@");if

[WARNING] Try to use a single 'var' statement per scope.
GetInfoResponse.attrs.attr instanceof Array){ ---> var  <--- attrsArr=resp.Body.GetInfoResponse.attrs.

[WARNING] Try to use a single 'var' statement per scope.
.GetInfoResponse.attrs.attr;for( ---> var  <--- i=0;i<attrsArr.length;

[WARNING] Try to use a single 'var' statement per scope.
[i].name=="displayName"){ ---> var  <--- v=attrsArr[i]._content;if

[WARNING] Try to use a single 'var' statement per scope.
.attrs._attrs)=="object"){ ---> var  <--- attrsArr=resp.Body.GetInfoResponse.attrs.

[WARNING] The variable attrsArr has already been declared in the same scope...
attrs._attrs)=="object"){var  ---> attrsArr <--- =resp.Body.GetInfoResponse.attrs._attrs

[WARNING] Try to use a single 'var' statement per scope.
resp.Body.GetInfoResponse.prefs){ ---> var  <--- prefs=resp.Body.GetInfoResponse.prefs.

[WARNING] Try to use a single 'var' statement per scope.
if(!refreshContainer){return;} ---> var  <--- refreshLabel=new DwtComposite(this._shell,"RefreshContainer"

[WARNING] Try to use a single 'var' statement per scope.
_shell,"RefreshContainer",Dwt.RELATIVE_STYLE); ---> var  <--- refreshEl=refreshLabel.getHtmlElement();refreshLabel.

[WARNING] Try to use a single 'var' statement per scope.
if(!previousContainer){return;} ---> var  <--- previousLabel=this._previousContainer=new DwtComposite(this

[WARNING] Try to use a single 'var' statement per scope.
_shell,"PreviousContainer",Dwt.RELATIVE_STYLE); ---> var  <--- previousEl=previousLabel.getHtmlElement();previousLabel.

[WARNING] Try to use a single 'var' statement per scope.
if(!nextContainer){return;} ---> var  <--- nextLabel=this._nextContainer=new DwtComposite(this

[WARNING] Try to use a single 'var' statement per scope.
_shell,"NextContainer",Dwt.RELATIVE_STYLE); ---> var  <--- nextEl=nextLabel.getHtmlElement();nextLabel.

[WARNING] Try to use a single 'var' statement per scope.
=this._historyMgr.isPrevious(); ---> var  <--- isNext=this._historyMgr.isNext();

[WARNING] Try to use a single 'var' statement per scope.
curController,ZaHelpViewController)){return;} ---> var  <--- tree=ZaZimbraAdmin.getInstance().getOverviewPanelController(

[WARNING] Try to use a single 'var' statement per scope.
isEmpty(tree)){return;} ---> var  <--- curItems=tree.getCurrentSelectedItems().getArray(

[WARNING] Try to use a single 'var' statement per scope.
[0])){return;} ---> var  <--- curItem=curItems[0];var curPath=

[WARNING] Try to use a single 'var' statement per scope.
}var curItem=curItems[0]; ---> var  <--- curPath=tree.getABPath(curItem.getData(

[WARNING] Try to use a single 'var' statement per scope.
if(!helpSkinContainer){return;} ---> var  <--- dwButton=new DwtBorderlessButton(this._shell,""

[WARNING] Try to use a single 'var' statement per scope.
dwButton.reparentHtmlElement(ZaSettings.SKIN_HELP_DOM_ID); ---> var  <--- helpMenuOpList=new Array();var menu=

[WARNING] Try to use a single 'var' statement per scope.
;var helpMenuOpList=new Array(); ---> var  <--- menu=new ZaPopupMenu(dwButton,"ZaHelpDropdown",null

[WARNING] Try to use a single 'var' statement per scope.
"ZaHelpDropdown",null,helpMenuOpList,"ZA_HELP"); ---> var  <--- mItem=new DwtMenuItem({parent:menu,

[WARNING] Try to use a single 'var' statement per scope.
_shell,"ZaHelpDropdownSearch",Dwt.RELATIVE_STYLE); ---> var  <--- helpSearchBox=new DwtComposite(helpSearch,"SearchPanel",Dwt

[WARNING] Try to use a single 'var' statement per scope.
helpSearch,"SearchPanel",Dwt.RELATIVE_STYLE); ---> var  <--- searchIcon=new DwtComposite({parent:helpSearchBox,

[WARNING] Try to use a single 'var' statement per scope.
().onclick=this._openSupportSite; ---> var  <--- searchInputField=new DwtInputField({parent:helpSearchBox,

[WARNING] Try to use a single 'var' statement per scope.
(!helpHomePageItem){returnnull;} ---> var  <--- itemW=helpHomePageItem.getW()-20;

[WARNING] Try to use a single 'var' statement per scope.
=helpHomePageItem.getW()-20; ---> var  <--- maxNumberOfLetters=Math.floor((itemW-30

[WARNING] Try to use a single 'var' statement per scope.
(itemW-30)/5.5); ---> var  <--- text=ZaApp.getInstance().getCurrentController(

[WARNING] Try to use a single 'var' statement per scope.
if(!helpSkinContainer){return;} ---> var  <--- helpLabel=new DwtComposite(this._shell,"HelpContainer"

[WARNING] Try to use a single 'var' statement per scope.
_shell,"HelpContainer",Dwt.RELATIVE_STYLE); ---> var  <--- helpEl=helpLabel.getHtmlElement();helpLabel.

[WARNING] Try to use a single 'var' statement per scope.
);helpLabel.setCursor("pointer"); ---> var  <--- iconName="";if(ZaSettings.isYahooSmbPADomainAdmin)

[WARNING] Try to use a single 'var' statement per scope.
,skin.skin_container_help_max_str_length);}else{ ---> var  <--- listener=new AjxListener(this,this._helpListener

[WARNING] Try to use a single 'var' statement per scope.
AjxListener(this,this._helpListener); ---> var  <--- adminObj=this;helpLabel.getHtmlElement().

[WARNING] Try to use a single 'var' statement per scope.
if(!downloadsContainer){return;} ---> var  <--- dwLabel=new DwtComposite(this._shell,"DWContainer"

[WARNING] Try to use a single 'var' statement per scope.
_shell,"DWContainer",Dwt.RELATIVE_STYLE); ---> var  <--- listener=new AjxListener(this,this._dwListener

[WARNING] Try to use a single 'var' statement per scope.
AjxListener(this,this._dwListener); ---> var  <--- adminObj=this;dwLabel.getHtmlElement().

[WARNING] Try to use a single 'var' statement per scope.
!ZaZimbraAdmin.currentUserName){return;} ---> var  <--- dwLabel=new DwtLabel(this._shell,""

[WARNING] Try to use a single 'var' statement per scope.
"","",Dwt.RELATIVE_STYLE); ---> var  <--- tmpName=AjxStringUtil.htmlEncode(ZaZimbraAdmin.currentUserName)

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.htmlEncode(ZaZimbraAdmin.currentUserName); ---> var  <--- innerContent="<div class='skin_container_username_div'>"+tmpName+"</div>";dwLabel.

[WARNING] Try to use a single 'var' statement per scope.
!ZaZimbraAdmin.currentUserName){return;} ---> var  <--- dwButton=new DwtBorderlessButton(this._shell,""

[WARNING] Try to use a single 'var' statement per scope.
"","",Dwt.RELATIVE_STYLE); ---> var  <--- tmpName=AjxStringUtil.htmlEncode(ZaZimbraAdmin.currentUserName)

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.htmlEncode(ZaZimbraAdmin.currentUserName); ---> var  <--- innerContent="<div class='skin_container_username_div'>"+tmpName+"</div>";dwButton.

[WARNING] Try to use a single 'var' statement per scope.
dwButton.reparentHtmlElement(ZaSettings.SKIN_USERNAME_DOM_ID); ---> var  <--- userNameMenuOpList=new Array();userNameMenuOpList.push

[WARNING] Try to use a single 'var' statement per scope.
window,ZaZimbraAdmin.logOff))); ---> var  <--- menu=new ZaPopupMenu(dwButton,null,null

[WARNING] Try to use a single 'var' statement per scope.
){var acctName=ZaZimbraAdmin.currentUserLogin; ---> var  <--- domainName=acctName.split("@")[1

[WARNING] Try to use a single 'var' statement per scope.
.split("@")[1]; ---> var  <--- domain=ZaDomain.getDomainByName(domainName);var 

[WARNING] Try to use a single 'var' statement per scope.
domain=ZaDomain.getDomainByName(domainName); ---> var  <--- curAcct=ZaZimbraAdmin.currentAdminAccount;if(curAcct&&

[WARNING] Try to use a single 'var' statement per scope.
currentAdminAccount;if(curAcct&&domain){ ---> var  <--- url=null;if(curAcct.attrs[

[WARNING] Try to use a single 'var' statement per scope.
open(url);return;}} ---> var  <--- helpButton=skin&&skin.hints&&skin.

[WARNING] Try to use a single 'var' statement per scope.
if(helpButton&&helpButton.url){ ---> var  <--- sep=helpButton.url.match(/\?/)

[WARNING] Try to use a single 'var' statement per scope.
match(/\?/)?"&":"?"; ---> var  <--- url=[helpButton.url,sep,"locid="

[WARNING] The variable url has already been declared in the same scope...
(/\?/)?"&":"?";var  ---> url <--- =[helpButton.url,sep,"locid=",

[WARNING] Try to use a single 'var' statement per scope.
if(!logoContainer){return;} ---> var  <--- banner=new DwtComposite(this._shell,"LogoContainer"

[WARNING] Try to use a single 'var' statement per scope.
_shell,"LogoContainer",Dwt.ABSOLUTE_STYLE); ---> var  <--- html=new Array();var i=

[WARNING] Try to use a single 'var' statement per scope.
;var html=new Array(); ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
;}else{logoffMethod="ZaZimbraAdmin.logOff();";} ---> var  <--- logoff=document.getElementById(ZaSettings.SKIN_LOGOFF_DOM_ID)

[WARNING] Try to use a single 'var' statement per scope.
true);}if(loginMsg){ ---> var  <--- loginMsgEl=new DwtAlert(this._loginMsgPanel,null

[WARNING] Try to use a single 'var' statement per scope.
);loginMsgEl.setContent(loginMsg); ---> var  <--- dismissBt=new DwtButton({parent:this.

[WARNING] Try to use a single 'var' statement per scope.
loginMsgPanelId);skin.hideLoginMsg(); ---> var  <--- appViewMgr=ZaApp.getInstance().getAppViewMgr(

[WARNING] Try to use a single 'var' statement per scope.
max_lbl_length){var html=[]; ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
null&&lbl.length>max_lbl_length){ ---> var  <--- title=lbl;lbl=lbl.substring(

[WARNING] Try to use a single 'var' statement per scope.
itemArray=AjxUtil.toArray(items); ---> var  <--- refresh=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var refresh=false;for( ---> var  <--- i=0;i<itemArray.length;

[WARNING] Try to use a single 'var' statement per scope.
<itemArray.length;i++){ ---> var  <--- itemName=itemArray[i].name;var 

[WARNING] Try to use a single 'var' statement per scope.
itemName=itemArray[i].name; ---> var  <--- historys=this._historyMgr.findHistoryByName(itemName)

[WARNING] Try to use a single 'var' statement per scope.
_historyMgr.findHistoryByName(itemName);for( ---> var  <--- j=0;j<historys.size(

[WARNING] Try to use a single 'var' statement per scope.
"NoOpRequest",ZaZimbraAdmin.URN,null); ---> var  <--- noOpCommand=new ZmCsfeCommand();var params=

[WARNING] Try to use a single 'var' statement per scope.
;var noOpCommand=new ZmCsfeCommand(); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
){var msg=ZaMsg.appExitWarning; ---> var  <--- tabTitles=ZaAppTabGroup.getDirtyTabTitles();if(

[WARNING] Try to use a single 'var' statement per scope.
setOnbeforeunload(ZaZimbraAdmin._confirmExitMethod);}; ---> var  <--- t=new AjxTimedAction(null,f);

[WARNING] Try to use a single 'var' statement per scope.
1,cssClass:"helpSeparator"}];} ---> var  <--- helpItems=xFormObject.items[0].items

[WARNING] Try to use a single 'var' statement per scope.
items[0].items;for( ---> var  <--- i=0;i<helpItems.length;

[WARNING] Try to use a single 'var' statement per scope.
&&!ZaSettings.isOctopus()){ ---> var  <--- zwcUserGuideItem=[{type:_GROUP_,numCols:

[WARNING] Try to use a single 'var' statement per scope.
:1,cssClass:"helpSeparator"}]; ---> var  <--- helpItems=xFormObject.items[0].items

[WARNING] The variable helpItems has already been declared in the same scope...
1,cssClass:"helpSeparator"}];var  ---> helpItems <--- =xFormObject.items[0].items[

[WARNING] Try to use a single 'var' statement per scope.
items[0].items;for( ---> var  <--- i=0;i<helpItems.length;

[WARNING] The variable i has already been declared in the same scope...
[0].items;for(var  ---> i <--- =0;i<helpItems.length;i

[WARNING] Try to use a single 'var' statement per scope.
function(){var descCSSStyle=""; ---> var  <--- bulletImgItem={type:_OUTPUT_,cssStyle:"font-size: 8px; margin-left: 20px;"

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
item,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");buffer

[WARNING] Try to use a single 'var' statement per scope.
(parent){var className=null; ---> var  <--- posStyle=DwtControl.ABSOLUTE_STYLE;var headerList=this

[WARNING] Try to use a single 'var' statement per scope.
null;var posStyle=DwtControl.ABSOLUTE_STYLE; ---> var  <--- headerList=this._getHeaderList();ZaListView.

[WARNING] Try to use a single 'var' statement per scope.
);var list=this._list; ---> var  <--- len=list.size();for(

[WARNING] Try to use a single 'var' statement per scope.
=list.size();for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- mta=list.get(i);var 

[WARNING] Try to use a single 'var' statement per scope.
mta=list.get(i); ---> var  <--- itemId=this._getItemId(mta);this

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
mta,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- itemId=this._getItemId(mta);var 

[WARNING] Try to use a single 'var' statement per scope.
itemId=this._getItemId(mta); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="<tr>"; ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- refParts=this.getRef().split(

[WARNING] Try to use a single 'var' statement per scope.
getRef().split("/"); ---> var  <--- filterName=refParts[1];var qName=

[WARNING] Try to use a single 'var' statement per scope.
;var filterName=refParts[1]; ---> var  <--- qName=refParts[0];if(!

[WARNING] Try to use a single 'var' statement per scope.
ZaMTA.A_selection_cache]={};} ---> var  <--- arr=this.widget.getSelection();

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- refParts=this.getRef().split(

[WARNING] Try to use a single 'var' statement per scope.
getRef().split("/"); ---> var  <--- qName=refParts[0];if(!

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- qName=this.getRef();instance.

[WARNING] Try to use a single 'var' statement per scope.
;instance=this.getInstance(); ---> var  <--- obj=new Object();obj[ZaMTAActionDialog

[WARNING] Try to use a single 'var' statement per scope.
]=ZaMsg.PQ_Q_RELEASE_MESSAGES;break;} ---> var  <--- view=form.parent;view.selectActionDialog=

[WARNING] Try to use a single 'var' statement per scope.
=this.selectActionDialog.getObject(); ---> var  <--- removeList;if(obj[ZaMTAActionDialog.ANSWER]

[WARNING] Try to use a single 'var' statement per scope.
.FLTRED_SET){removeList={}; ---> var  <--- field;if(obj[ZaMTAActionDialog.FLTR_ITEMS]

[WARNING] Try to use a single 'var' statement per scope.
[ZaMTAActionDialog.FLTR_ITEMS]){for( ---> var  <--- key in obj[ZaMTAActionDialog.FLTR_ITEMS]){

[WARNING] Try to use a single 'var' statement per scope.
PQ_Q_RELEASE_MESSAGES2;break;}dlgMsg+="<br><ul>"; ---> var  <--- i=0;for(var key in removelist

[WARNING] Try to use a single 'var' statement per scope.
"<br><ul>";var i=0;for( ---> var  <--- key in removelist){if(removelist[key

[WARNING] Try to use a single 'var' statement per scope.
{if(removelist[key]){ ---> var  <--- cnt=removelist[key].length;dlgMsg

[WARNING] Try to use a single 'var' statement per scope.
+=key;dlgMsg+="<ul>";for( ---> var  <--- j=0;j<cnt;j++

[WARNING] Try to use a single 'var' statement per scope.
removeList;if(this.xFormItem){ ---> var  <--- refParts=this.xFormItem.getRef().

[WARNING] Try to use a single 'var' statement per scope.
field=refParts[1];}} ---> var  <--- view=this.xFormItem.getForm().

[WARNING] Try to use a single 'var' statement per scope.
if(field==ZaMTA.A_messages){ ---> var  <--- removeList=new Array();if(this

[WARNING] The variable removeList has already been declared in the same scope...
(field==ZaMTA.A_messages){var  ---> removeList <--- =new Array();if(this.

[WARNING] Try to use a single 'var' statement per scope.
.getSelection();}}else{ ---> var  <--- removeList={};removeList[field]=

[WARNING] The variable removeList has already been declared in the same scope...
getSelection();}}else{var  ---> removeList <--- ={};removeList[field]=new 

[WARNING] Try to use a single 'var' statement per scope.
;qName=args.qName;for( ---> var  <--- key in removelist){arr.push(removelist

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- qName=this.getRef();var currentPage

[WARNING] Try to use a single 'var' statement per scope.
var qName=this.getRef(); ---> var  <--- currentPage=this.getInstanceValue(this.getRef(

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- qName=this.getRef();var currentPage

[WARNING] Try to use a single 'var' statement per scope.
var qName=this.getRef(); ---> var  <--- currentPage=this.getInstanceValue(this.getRef(

[WARNING] Try to use a single 'var' statement per scope.
getRef().split("/"); ---> var  <--- filterName=refParts[1];var qName=

[WARNING] Try to use a single 'var' statement per scope.
;var filterName=refParts[1]; ---> var  <--- qName=refParts[0];ZaMTAXFormView.clearFilter

[WARNING] Try to use a single 'var' statement per scope.
getRef().split("/"); ---> var  <--- qName=refParts[0];if(qName

[WARNING] Try to use a single 'var' statement per scope.
false,null,true,true); ---> var  <--- msgHeaderList=new Array();msgHeaderList[0

[WARNING] Try to use a single 'var' statement per scope.
isEnabled=true;if(isEnabled){ ---> var  <--- myEnabledDisabledChecks=this.getInheritedProperty("enableDisableChecks");if

[WARNING] Try to use a single 'var' statement per scope.
if(myEnabledDisabledChecks&&myEnabledDisabledChecks instanceof Array){ ---> var  <--- cnt=myEnabledDisabledChecks.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=myEnabledDisabledChecks.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(myEnabledDisabledChecks[i] instanceof Array){ ---> var  <--- func=myEnabledDisabledChecks[i].shift()

[WARNING] Try to use a single 'var' statement per scope.
isVisible=true;if(isVisible){ ---> var  <--- myVisibilityChecks=this.getInheritedProperty("visibilityChecks");if

[WARNING] Try to use a single 'var' statement per scope.
if(myVisibilityChecks&&myVisibilityChecks instanceof Array){ ---> var  <--- cnt=myVisibilityChecks.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=myVisibilityChecks.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(myVisibilityChecks[i] instanceof Array){ ---> var  <--- func=myVisibilityChecks[i].shift()

[WARNING] Try to use a single 'var' statement per scope.
{if(typeofmyVisibilityChecks==="string"){ ---> var  <--- instance=this.getInstance();isVisible=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
=this.getInstance();isVisible= ---> eval <--- (myVisibilityChecks[i]);if(!

[WARNING] Try to use a single 'var' statement per scope.
(itemVal){var retVal=""; ---> var  <--- _temp=[];if(itemVal){

[WARNING] Try to use a single 'var' statement per scope.
];if(itemVal){for( ---> var  <--- key in itemVal){if(itemVal[key

[WARNING] Try to use a single 'var' statement per scope.
{if(itemVal[key]){ ---> var  <--- _temp2=[];var cnt=itemVal[

[WARNING] Try to use a single 'var' statement per scope.
]){var _temp2=[]; ---> var  <--- cnt=itemVal[key].length;for

[WARNING] Try to use a single 'var' statement per scope.
itemVal[key].length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
isEnabled=true;if(isEnabled){ ---> var  <--- myEnabledDisabledChecks=this.getInheritedProperty("enableDisableChecks");if

[WARNING] Try to use a single 'var' statement per scope.
if(myEnabledDisabledChecks&&myEnabledDisabledChecks instanceof Array){ ---> var  <--- cnt=myEnabledDisabledChecks.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=myEnabledDisabledChecks.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(myEnabledDisabledChecks[i] instanceof Array){ ---> var  <--- func=myEnabledDisabledChecks[i].shift()

[WARNING] Try to use a single 'var' statement per scope.
isVisible=true;if(isVisible){ ---> var  <--- myVisibilityChecks=this.getInheritedProperty("visibilityChecks");if

[WARNING] Try to use a single 'var' statement per scope.
if(myVisibilityChecks&&myVisibilityChecks instanceof Array){ ---> var  <--- cnt=myVisibilityChecks.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=myVisibilityChecks.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
(myVisibilityChecks[i] instanceof Array){ ---> var  <--- func=myVisibilityChecks[i].shift()

[WARNING] Try to use a single 'var' statement per scope.
{if(typeofmyVisibilityChecks==="string"){ ---> var  <--- instance=this.getInstance();isVisible=

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
=this.getInstance();isVisible= ---> eval <--- (myVisibilityChecks[i]);if(!

[WARNING] Try to use a single 'var' statement per scope.
resp){var directML=[]; ---> var  <--- indirectML=[];var nonML=[]

[WARNING] Try to use a single 'var' statement per scope.
[];var indirectML=[]; ---> var  <--- nonML=[];if(resp.dl

[WARNING] Try to use a single 'var' statement per scope.
(resp.dl instanceof Array)){ ---> var  <--- dls=resp.dl;var n=resp

[WARNING] Try to use a single 'var' statement per scope.
){var dls=resp.dl; ---> var  <--- n=resp.dl.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=resp.dl.length;for( ---> var  <--- i=0,d=0,m=

[WARNING] Try to use a single 'var' statement per scope.
:dls[m].id}; ---> var  <--- attrs=ZaItem.initAttrsFromJS(dls[m]

[WARNING] Try to use a single 'var' statement per scope.
by){var directML=[]; ---> var  <--- indirectML=[];var nonML=[]

[WARNING] Try to use a single 'var' statement per scope.
[];var indirectML=[]; ---> var  <--- nonML=[];try{soapDoc=AjxSoapDoc

[WARNING] Try to use a single 'var' statement per scope.
"GetAccountMembershipRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("account",val)

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by",by); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
=soapDoc;params.noAuthToken=true; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
(resp.dl instanceof Array)){ ---> var  <--- dls=resp.dl;var n=resp

[WARNING] Try to use a single 'var' statement per scope.
){var dls=resp.dl; ---> var  <--- n=resp.dl.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=resp.dl.length;for( ---> var  <--- i=0,d=0,m=

[WARNING] Try to use a single 'var' statement per scope.
:dls[m].id}; ---> var  <--- attrs=ZaItem.initAttrsFromJS(dls[m]

[WARNING] Try to use a single 'var' statement per scope.
,"ZaAccountMemberOfListView.getAccountMemberShip",null,false);} ---> var  <--- memberOf={directMemberList:directML,indirectMemberList:indirectML

[WARNING] Try to use a single 'var' statement per scope.
by){var directML=[]; ---> var  <--- indirectML=[];var nonML=[]

[WARNING] Try to use a single 'var' statement per scope.
[];var indirectML=[]; ---> var  <--- nonML=[];try{soapDoc=AjxSoapDoc

[WARNING] Try to use a single 'var' statement per scope.
"GetDistributionListMembershipRequest",ZaZimbraAdmin.URN,null); ---> var  <--- elBy=soapDoc.set("dl",val)

[WARNING] Try to use a single 'var' statement per scope.
elBy.setAttribute("by",by); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
();params.soapDoc=soapDoc; ---> var  <--- reqMgrParams={controller:ZaApp.getInstance()

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- resp=ZaRequestMgr.invoke(params,reqMgrParams)

[WARNING] Try to use a single 'var' statement per scope.
(resp.dl instanceof Array)){ ---> var  <--- dls=resp.dl;var n=resp

[WARNING] Try to use a single 'var' statement per scope.
){var dls=resp.dl; ---> var  <--- n=resp.dl.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=resp.dl.length;for( ---> var  <--- i=0,d=0,m=

[WARNING] Try to use a single 'var' statement per scope.
,"ZaAccountMemberOfListView.getDlMemberShip",null,false);} ---> var  <--- memberOf={directMemberList:directML,indirectMemberList:indirectML

[WARNING] Try to use a single 'var' statement per scope.
{var memberOf={};for( ---> var  <--- p in src[ZaAccount.A2_memberOf]){

[WARNING] Try to use a single 'var' statement per scope.
[p]=[];for( ---> var  <--- i=0;i<src[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
p].length;i++){ ---> var  <--- v=src[ZaAccount.A2_memberOf][p

[WARNING] Try to use a single 'var' statement per scope.
];if(v instanceof Object){ ---> var  <--- newV={};for(var p2 in 

[WARNING] Try to use a single 'var' statement per scope.
{var newV={};for( ---> var  <--- p2 in v){newV[p2]=

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- allSelections=ZaAccountMemberOfListView._getAllInList(form,listId)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selections=ZaAccountMemberOfListView._getSelections(form,listId)

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- directMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_directMemberList]; ---> var  <--- indirectMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_indirectMemberList]; ---> var  <--- nonMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_nonMemberList]; ---> var  <--- j=-1;var dlName=null;

[WARNING] Try to use a single 'var' statement per scope.
A2_nonMemberList];var j=-1; ---> var  <--- dlName=null;var indirectArrFound=null;for

[WARNING] Try to use a single 'var' statement per scope.
=-1;var dlName=null; ---> var  <--- indirectArrFound=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
null;var indirectArrFound=null;for( ---> var  <--- i=0;i<listArr.length;

[WARNING] Try to use a single 'var' statement per scope.
if(indirectArrFound.length>0){ ---> var  <--- indirectDls=indirectArrFound.join("<br />");msg

[WARNING] Try to use a single 'var' statement per scope.
Q_REMOVE_INDIRECT_GROUP,[dlName,indirectDls]); ---> var  <--- confirmMessageDialog=new ZaMsgDialog(form.shell,null

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- directMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_directMemberList]; ---> var  <--- indirectMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_indirectMemberList]; ---> var  <--- nonMemberList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_nonMemberList]; ---> var  <--- j=-1;var m=-1

[WARNING] Try to use a single 'var' statement per scope.
A2_nonMemberList];var j=-1; ---> var  <--- m=-1;j=ZaUtil.findValueInObjArrByPropertyName

[WARNING] Try to use a single 'var' statement per scope.
(j,1);}for( ---> var  <--- i=0;i<indirectDlsNameArr.length;

[WARNING] Try to use a single 'var' statement per scope.
;}if(arr){for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- selections=ZaAccountMemberOfListView._getSelections(form,listId)

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- allSelections=ZaAccountMemberOfListView._getAllInList(form,listId)

[WARNING] Try to use a single 'var' statement per scope.
var instance=form.getInstance(); ---> var  <--- memberOf=instance[ZaAccount.A2_memberOf];var 

[WARNING] Try to use a single 'var' statement per scope.
memberOf=instance[ZaAccount.A2_memberOf]; ---> var  <--- nonDupArr=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var nonDupArr=[];for( ---> var  <--- i=0;i<listArr.length;

[WARNING] Try to use a single 'var' statement per scope.
<listArr.length;i++){ ---> var  <--- j=ZaUtil.findValueInObjArrByPropertyName(instance[ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
(listId)[0].widget; ---> var  <--- allListArr=dwtListItem.getList().getArray(

[WARNING] Try to use a single 'var' statement per scope.
A2_memberOf][ZaAccount.A2_directMemberList]){ ---> var  <--- newDirectMember=tmpObj[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
newDirectMember=[newDirectMember];}for( ---> var  <--- i=0;i<newDirectMember.length;

[WARNING] Try to use a single 'var' statement per scope.
<newDirectMember.length;i++){ ---> var  <--- dlName=newDirectMember[i].name;addList

[WARNING] Try to use a single 'var' statement per scope.
return;}var addList=[]; ---> var  <--- removeList=[];var currentDirectMember=this[

[WARNING] Try to use a single 'var' statement per scope.
[];var removeList=[]; ---> var  <--- currentDirectMember=this[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_directMemberList]; ---> var  <--- newDirectMember=tmpObj[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
][ZaAccount.A2_directMemberList];for( ---> var  <--- i=0;i<newDirectMember.length;

[WARNING] Try to use a single 'var' statement per scope.
<newDirectMember.length;i++){ ---> var  <--- dlName=newDirectMember[i].name;var 

[WARNING] Try to use a single 'var' statement per scope.
dlName=newDirectMember[i].name; ---> var  <--- j=ZaUtil.findValueInObjArrByPropertyName(currentDirectMember,dlName,

[WARNING] Try to use a single 'var' statement per scope.
[i]);}}for( ---> var  <--- m=0;m<currentDirectMember.length;

[WARNING] Try to use a single 'var' statement per scope.
<currentDirectMember.length;m++){ ---> var  <--- dlName=currentDirectMember[m].name;var 

[WARNING] The variable dlName has already been declared in the same scope...
currentDirectMember.length;m++){var  ---> dlName <--- =currentDirectMember[m].name;var j

[WARNING] Try to use a single 'var' statement per scope.
dlName=currentDirectMember[m].name; ---> var  <--- j=ZaUtil.findValueInObjArrByPropertyName(newDirectMember,dlName,

[WARNING] The variable j has already been declared in the same scope...
=currentDirectMember[m].name;var  ---> j <--- =ZaUtil.findValueInObjArrByPropertyName(newDirectMember,dlName,ZaAccountMemberOfListView

[WARNING] Try to use a single 'var' statement per scope.
){var len=addArray.length; ---> var  <--- addMemberSoapDoc,r,addMemberSoapDoc;var command=new 

[WARNING] The variable addMemberSoapDoc has already been declared in the same scope...
addArray.length;var addMemberSoapDoc,r, ---> addMemberSoapDoc <--- ;var command=new ZmCsfeCommand();for

[WARNING] Try to use a single 'var' statement per scope.
length;var addMemberSoapDoc,r,addMemberSoapDoc; ---> var  <--- command=new ZmCsfeCommand();for(var 

[WARNING] Try to use a single 'var' statement per scope.
command=new ZmCsfeCommand();for( ---> var  <--- i=0;i<len;++i

[WARNING] Try to use a single 'var' statement per scope.
set("dlm",account.name); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
){var len=removeArray.length; ---> var  <--- addMemberSoapDoc,r,removeMemberSoapDoc;var command=new 

[WARNING] Try to use a single 'var' statement per scope.
length;var addMemberSoapDoc,r,removeMemberSoapDoc; ---> var  <--- command=new ZmCsfeCommand();for(var 

[WARNING] Try to use a single 'var' statement per scope.
command=new ZmCsfeCommand();for( ---> var  <--- i=0;i<len;++i

[WARNING] Try to use a single 'var' statement per scope.
set("account",account.id); ---> var  <--- params=new Object();params.soapDoc

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- currentOffset=this.getInstanceValue(listItemId+"_offset")

[WARNING] Try to use a single 'var' statement per scope.
==null){currentOffset=0;} ---> var  <--- nextOffset=0;if(listItemId==ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(1,listItemId+"_more"); ---> var  <--- directMemberOfList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_directMemberList]; ---> var  <--- indirectMemberOfList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
var instance=this.getInstance(); ---> var  <--- currentOffset=this.getInstanceValue(listItemId+"_offset")

[WARNING] Try to use a single 'var' statement per scope.
==null){currentOffset=0;} ---> var  <--- nextOffset=0;if(listItemId==ZaAccount.

[WARNING] Try to use a single 'var' statement per scope.
setInstanceValue(nextOffset,listItemId+"_offset"); ---> var  <--- directMemberOfList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf][ZaAccount.A2_directMemberList]; ---> var  <--- indirectMemberOfList=instance[ZaAccount.A2_memberOf][ZaAccount

[WARNING] Try to use a single 'var' statement per scope.
offset){var arr=[]; ---> var  <--- xform=item.getForm();if(

[WARNING] Try to use a single 'var' statement per scope.
getForm();if(xform){ ---> var  <--- curInstance=xform.getInstance();if(

[WARNING] Try to use a single 'var' statement per scope.
!offset){offset=0;} ---> var  <--- memberOfObj=curInstance[ZaAccount.A2_memberOf];try

[WARNING] Try to use a single 'var' statement per scope.
curInstance[ZaAccount.A2_memberOf];try{ ---> var  <--- sortby=ZaAccount.A_name;var searchByDomain=(

[WARNING] Try to use a single 'var' statement per scope.
try{var sortby=ZaAccount.A_name; ---> var  <--- searchByDomain=(memberOfObj[ZaAccount.A2_showSameDomain]&&

[WARNING] Try to use a single 'var' statement per scope.
=="TRUE"))?true:false; ---> var  <--- domainName=null;if(searchByDomain){try

[WARNING] Try to use a single 'var' statement per scope.
null;if(searchByDomain){try{ ---> var  <--- emailChunks=curInstance[ZaAccount.A_name].split

[WARNING] Try to use a single 'var' statement per scope.
;}catch(ex){}} ---> var  <--- attrs=[ZaAccount.A_name,ZaItem.A_zimbraId

[WARNING] Try to use a single 'var' statement per scope.
ZaAccount.A_name,ZaItem.A_zimbraId]; ---> var  <--- valStr=curInstance[ZaSearch.A_query];var 

[WARNING] Try to use a single 'var' statement per scope.
valStr=curInstance[ZaSearch.A_query]; ---> var  <--- queryTypes=[ZaSearch.DLS];var query

[WARNING] Try to use a single 'var' statement per scope.
var queryTypes=[ZaSearch.DLS]; ---> var  <--- query=ZaSearch.getSearchByNameQuery(valStr,queryTypes)

[WARNING] Try to use a single 'var' statement per scope.
query=ZaAccountMemberOfListView.makeQueryStringWithoutNonACLGroup(query); ---> var  <--- params={query:query,sortBy:sortby

[WARNING] Try to use a single 'var' statement per scope.
getInstance().getCurrentController()}; ---> var  <--- result=ZaSearch.searchDirectory(params).Body

[WARNING] Try to use a single 'var' statement per scope.
),ZaAccount.A2_nonMemberList+"_more"); ---> var  <--- list=new ZaItemList(ZaDistributionList,null);

[WARNING] Try to use a single 'var' statement per scope.
;arr=list.getArray(); ---> var  <--- nonMemberList=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
nonMemberList=new Array();for( ---> var  <--- i=0;i<arr.length;

[WARNING] Try to use a single 'var' statement per scope.
{var result=[];for( ---> var  <--- i=0;i<memberListArr.length;

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- div=document.createElement("div");div

[WARNING] Try to use a single 'var' statement per scope.
group,div,DwtListView.TYPE_LIST_ITEM); ---> var  <--- idx=0;html[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
"<tr>";if(this._headerList){ ---> var  <--- cnt=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<cnt;i++){ ---> var  <--- field=this._headerList[i]._field

[WARNING] Try to use a single 'var' statement per scope.
{var buffer=new AjxBuffer(); ---> var  <--- div=document.createElement("div");var 

[WARNING] Try to use a single 'var' statement per scope.
div=document.createElement("div"); ---> var  <--- msg="";if(this.getCurrentListId(

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A2_indirectMemberList)>=0){ ---> var  <--- instance=this.parent&&this.parent.

[WARNING] Try to use a single 'var' statement per scope.
(ZaAccount.A2_directMemberList)>=0){ ---> var  <--- instance=this.parent&&this.parent.

[WARNING] The variable instance has already been declared in the same scope...
ZaAccount.A2_directMemberList)>=0){var  ---> instance <--- =this.parent&&this.parent.getInstance

[WARNING] Try to use a single 'var' statement per scope.
=this.widget.getList(); ---> var  <--- existingArr=[];var tmpArr=new Array

[WARNING] Try to use a single 'var' statement per scope.
();var existingArr=[]; ---> var  <--- tmpArr=new Array();if(list

[WARNING] Try to use a single 'var' statement per scope.
;}tmpArr=new Array(); ---> var  <--- instance=this.getForm().getInstance(

[WARNING] Try to use a single 'var' statement per scope.
.getForm().getInstance(); ---> var  <--- isGroupOnlyCkbAction=instance[ZaAccount.A2_memberOf]?instance

[WARNING] Try to use a single 'var' statement per scope.
.A2_memberOf]["showGroupOnlyAction"]:false; ---> var  <--- isGroupOnly=instance[ZaAccount.A2_memberOf]?instance

[WARNING] Try to use a single 'var' statement per scope.
itemArray&&itemArray.length>0){ ---> var  <--- offset=0;var more=0;var 

[WARNING] Try to use a single 'var' statement per scope.
>0){var offset=0; ---> var  <--- more=0;var len=itemArray.length

[WARNING] Try to use a single 'var' statement per scope.
offset=0;var more=0; ---> var  <--- len=itemArray.length;if(this.

[WARNING] Try to use a single 'var' statement per scope.
offset+ZaAccountMemberOfListView.SEARCH_LIMIT;}}} ---> var  <--- filteredItemArray=new Array();var j=

[WARNING] Try to use a single 'var' statement per scope.
}var filteredItemArray=new Array(); ---> var  <--- j=-1;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var j=-1;for( ---> var  <--- i=offset;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
!=ZaAccountMemberOfListView.join(existingArr)){ ---> var  <--- preserveSelection=this.getInheritedProperty("preserveSelection");var 

[WARNING] Try to use a single 'var' statement per scope.
preserveSelection=this.getInheritedProperty("preserveSelection"); ---> var  <--- selection=null;if(preserveSelection){selection

[WARNING] Try to use a single 'var' statement per scope.
this.widget.getSelection();} ---> var  <--- cnt=filteredItemArray.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt=filteredItemArray.length;for( ---> var  <--- i=0;i<cnt;i++

[WARNING] The variable i has already been declared in the same scope...
cnt=filteredItemArray.length;for(var  ---> i <--- =0;i<cnt;i++)

[WARNING] Try to use a single 'var' statement per scope.
if(selectedItem.type==1){ ---> var  <--- cacheName=selectedItem.cacheName;var myConstructor=selectedItem

[WARNING] Try to use a single 'var' statement per scope.
){var cacheName=selectedItem.cacheName; ---> var  <--- myConstructor=selectedItem.viewForPopup;var entry=selectedItem

[WARNING] Try to use a single 'var' statement per scope.
cacheName;var myConstructor=selectedItem.viewForPopup; ---> var  <--- entry=selectedItem.data;if(selectedItem.

[WARNING] Try to use a single 'var' statement per scope.
if(arr&&arr.length){ ---> var  <--- selectedItem=arr[0];var dialog=

[WARNING] Try to use a single 'var' statement per scope.
{var selectedItem=arr[0]; ---> var  <--- dialog=ZaTaskContentView._getDialog(selectedItem);dialog

[WARNING] Try to use a single 'var' statement per scope.
selectedItem);dialog.popup(); ---> var  <--- position=selectedItem.position;dialog.setBounds(

[WARNING] Try to use a single 'var' statement per scope.
entry){var cases=[]; ---> var  <--- case1={type:_ZATABCASE_,numCols:1

[WARNING] Try to use a single 'var' statement per scope.
getInstanceValue(ZaTask.A2_isRTExpanded)||false; ---> var  <--- notificationCount=this.getInstanceValue(ZaTask.A2_notificationCount)

[WARNING] Try to use a single 'var' statement per scope.
:callback,applyConfig:1}); ---> var  <--- val="";if(this.getParentItem(

[WARNING] Try to use a single 'var' statement per scope.
AjxEmailAddress.customEmailValidateEegex={};for( ---> var  <--- i=0;data&&i<data.

[WARNING] Try to use a single 'var' statement per scope.
val=itemVal;if(val){ ---> var  <--- emailChunks=val.split("@");if

[WARNING] Try to use a single 'var' statement per scope.
val=null;if(itemVal){ ---> var  <--- emailChunks=itemVal.split("@");if

[WARNING] Try to use a single 'var' statement per scope.
,instanceValue,event){var val; ---> var  <--- oldDomainPart=this.getParentItem()._domainPart;

[WARNING] Try to use a single 'var' statement per scope.
+domainPart;}if(domainPart){ ---> var  <--- el=this.getDisplayElement();if(

[WARNING] Try to use a single 'var' statement per scope.
getParentItem()._inputDomainPart=domainPart;} ---> var  <--- regList=AjxEmailAddress.customEmailValidateEegex[domainPart];if

[WARNING] Try to use a single 'var' statement per scope.
var form=this.getForm(); ---> var  <--- event=new DwtXFormsEvent(form,this,""

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Found an undeclared symbol: Dwt
(){var itemPrefix="ZaItem";return ---> Dwt <--- .getNextId(itemPrefix);};}if

[WARNING] Found an undeclared symbol: DBG
ex){}if(appDevMode||( ---> DBG <--- .getDebugLevel()>AjxDebug.NONE)||

[WARNING] Found an undeclared symbol: nul
()._handleException(ex,"ZaAppViewMgr.prototype._stickToGrid", ---> nul <--- ,false);}this._contBounds[cid

[WARNING] Found an undeclared symbol: a
||typeofnewValue=="object"){for( ---> a <---  in newValue){if(typeofnewValue[a

[WARNING] Found an undeclared symbol: val
if(itemVal&&itemVal.name){ ---> val <--- =itemVal.name;}else{val=

[WARNING] Found an undeclared symbol: obj
.push(srv.id);} ---> obj <--- ={statusMessage:null,flushZimlet:true,

[WARNING] Found an undeclared symbol: ev
){returnc.handleKeyAction(actionCode, ---> ev <--- );}}else{returnfalse;}

[WARNING] Found an undeclared symbol: msg
indirectDls=indirectArrFound.join("<br />"); ---> msg <--- =AjxMessageFormat.format(ZaMsg.Q_REMOVE_INDIRECT_GROUP,[

[WARNING] The symbol currentSettingObj is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaItem.clearInteropSettings=function(){var  ---> currentSettingObj <--- =this.getForm().getInstance()

[WARNING] The symbol temp is declared but is apparently never used.
This code can probably be written in a more compact way.
}this._removeFromHidden(viewId);var  ---> temp <--- =this._lastView;this._lastView=this

[WARNING] The symbol nul is declared but is apparently never used.
This code can probably be written in a more compact way.
()._handleException(ex,"ZaAppViewMgr.prototype._stickToGrid", ---> nul <--- ,false);}this._contBounds[cid

[WARNING] The symbol xFormViewController is declared but is apparently never used.
This code can probably be written in a more compact way.
.call(this,realParams);var  ---> xFormViewController <--- =paramList[1];};}else

[WARNING] The symbol realParams is declared but is apparently never used.
This code can probably be written in a more compact way.
.func=function(paramList){var  ---> realParams <--- =paramList[0];var xFormViewController=paramList

[WARNING] The symbol squery is declared but is apparently never used.
This code can probably be written in a more compact way.
,null,ZaZimbraAdmin.URN);var  ---> squery <--- =soapDoc.set("query",paramList[i

[WARNING] The symbol limit is declared but is apparently never used.
This code can probably be written in a more compact way.
this._searchTotal=response.searchTotal;var  ---> limit <--- =params.limit?params.limit:this

[WARNING] The symbol squery is declared but is apparently never used.
This code can probably be written in a more compact way.
,null,ZaZimbraAdmin.URN);var  ---> squery <--- =soapDoc.set("query",paramList[i

[WARNING] The symbol elRight is declared but is apparently never used.
This code can probably be written in a more compact way.
.setAttribute("by",targetBy);var  ---> elRight <--- =soapDoc.set("right",right);

[WARNING] The symbol resArray is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaServer);if(tmpArray){var  ---> resArray <--- =new Array();var cnt=tmpArray

[WARNING] The symbol tab is declared but is apparently never used.
This code can probably be written in a more compact way.
:selected,onOpen:onOpen};var  ---> tab <--- =new ZaAppTab(tabGroup,params);}

[WARNING] The symbol found is declared but is apparently never used.
This code can probably be written in a more compact way.
);var newValues=[];var  ---> found <--- =false;for(var i=0;

[WARNING] The symbol radio is declared but is apparently never used.
This code can probably be written in a more compact way.
j].join("");var  ---> radio <--- =this.getElement(id);var tdEl

[WARNING] The symbol txtBoxLabelCssStyle is declared but is apparently never used.
This code can probably be written in a more compact way.
=this.getInheritedProperty("txtBoxLabel");var  ---> txtBoxLabelCssStyle <--- =this.getInheritedProperty("txtBoxLabelCssStyle");var textAreaCssClass

[WARNING] The symbol form is declared but is apparently never used.
This code can probably be written in a more compact way.
getCustomWidth=function(){try{var  ---> form <--- =this.getForm();var formParentElement=

[WARNING] The symbol versionInfoReq is declared but is apparently never used.
This code can probably be written in a more compact way.
.setMethodAttribute("onerror","continue");var  ---> versionInfoReq <--- =soapDoc.set("GetVersionInfoRequest",null,null

[WARNING] The symbol app is declared but is apparently never used.
This code can probably be written in a more compact way.
,className,DwtControl.ABSOLUTE_STYLE);var  ---> app <--- =null;try{this.shell.getData

[WARNING] The symbol id is declared but is apparently never used.
This code can probably be written in a more compact way.
.objectWithId(element._acListViewId);var  ---> id <--- =element.id;var key=DwtKeyEvent.

[WARNING] The symbol end is declared but is apparently never used.
This code can probably be written in a more compact way.
}var start=this._start;var  ---> end <--- =hasDelim?this._end+1:this

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
._closeCellMouseDownHdlr=function(ev){var  ---> obj <--- =DwtControl.getTargetControl(ev);};

[WARNING] The symbol x is declared but is apparently never used.
This code can probably be written in a more compact way.
.isClickOnItem=function(ev){var  ---> x <--- =ev.docX;var y=ev.

[WARNING] The symbol y is declared but is apparently never used.
This code can probably be written in a more compact way.
{var x=ev.docX;var  ---> y <--- =ev.docY;var selfBound=Dwt.

[WARNING] The symbol nextTi is declared but is apparently never used.
This code can probably be written in a more compact way.
,isRoot,isHightlightedWhenMouseUp){var ti, ---> nextTi <--- ,key,currentRoot;var clsName;if(

[WARNING] The symbol j is declared but is apparently never used.
This code can probably be written in a more compact way.
[key]);}var i, ---> j <--- ,forceNode;for(i=0;i

[WARNING] The symbol windowSize is declared but is apparently never used.
This code can probably be written in a more compact way.
parentBounds=parent.getBounds();var  ---> windowSize <--- =menu.shell.getSize();var 

[WARNING] The symbol aid is declared but is apparently never used.
This code can probably be written in a more compact way.
4){var response=null;var  ---> aid <--- =null;var status=req.status;

[WARNING] The symbol busyId is declared but is apparently never used.
This code can probably be written in a more compact way.
prototype.searchDomains=function(){var  ---> busyId <--- =Dwt.getNextId();var domainListController=

[WARNING] The symbol defaultCosName is declared but is apparently never used.
This code can probably be written in a more compact way.
,cos,domainName,domain,defaultCos, ---> defaultCosName <--- ,dl,dlName,dlId;for(var 

[WARNING] The symbol dlId is declared but is apparently never used.
This code can probably be written in a more compact way.
,defaultCos,defaultCosName,dl,dlName, ---> dlId <--- ;for(var i=0;i<

[WARNING] The symbol win is declared but is apparently never used.
This code can probably be written in a more compact way.
.trim(mServer,true);var  ---> win <--- =window.open(mServer,"_blank");

[WARNING] The symbol sysResources is declared but is apparently never used.
This code can probably be written in a more compact way.
cnt=this._removeList.length;var  ---> sysResources <--- =[];for(var i=0

[WARNING] The symbol myCos is declared but is apparently never used.
This code can probably be written in a more compact way.
.popup();}else{var  ---> myCos <--- =null;var maxPwdLen=null;var minPwdLen

[WARNING] The symbol offArray is declared but is apparently never used.
This code can probably be written in a more compact way.
this._contentView.getSelectionCount();var  ---> offArray <--- =[];var onArray=[];

[WARNING] The symbol onArray is declared but is apparently never used.
This code can probably be written in a more compact way.
);var offArray=[];var  ---> onArray <--- =[];if(cnt<1)

[WARNING] The symbol now is declared but is apparently never used.
This code can probably be written in a more compact way.
(this.getContentViewId());var  ---> now <--- =new Date();}catch(ex

[WARNING] The symbol isNew is declared but is apparently never used.
This code can probably be written in a more compact way.
this._view.getObject();var  ---> isNew <--- =false;if(tmpObj.attrs==null

[WARNING] The symbol searchTotal is declared but is apparently never used.
This code can probably be written in a more compact way.
[i].name;}}var  ---> searchTotal <--- =response.searchTotal;this.setInstanceValue(domains

[WARNING] The symbol optionId is declared but is apparently never used.
This code can probably be written in a more compact way.
optionViews.length;i++){var  ---> optionId <--- =optionViews[i]._optionId;var instance

[WARNING] The symbol optionId is declared but is apparently never used.
This code can probably be written in a more compact way.
optionViews.length;i++){var  ---> optionId <--- =optionViews[i]._optionId;var instance

[WARNING] The symbol optionViews is declared but is apparently never used.
This code can probably be written in a more compact way.
){this.newHandleSpecialQueries();var  ---> optionViews <--- =this.getFilterDialogArray();this._query

[WARNING] The symbol searchListController is declared but is apparently never used.
This code can probably be written in a more compact way.
);}var entry=null;var  ---> searchListController <--- =ZaApp.getInstance().getSearchListController()

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
true;params.callback=sessionCallback;var  ---> resp <--- =getSessCmd.invoke(params);}catch

[WARNING] The symbol isEx is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaServer.MANAGE_MAIL_QUEUE_RIGHT,server)){var  ---> isEx <--- =false;var queueLengthCallback=new AjxCallback(this

[WARNING] The symbol elId is declared but is apparently never used.
This code can probably be written in a more compact way.
,null,ZaZimbraAdmin.URN);var  ---> elId <--- =soapDoc.set("id",this.attrs

[WARNING] The symbol ret is declared but is apparently never used.
This code can probably be written in a more compact way.
var endIndex=0;var currentEmailAddress;var  ---> ret <--- ;var isThrown=false;value=value.

[WARNING] The symbol p is declared but is apparently never used.
This code can probably be written in a more compact way.
;this.setInstanceValue(value);var  ---> p <--- =form.parent;var newDomainName=ZaAccount.

[WARNING] The symbol cosId is declared but is apparently never used.
This code can probably be written in a more compact way.
getCurrentCos=function(){try{var  ---> cosId <--- =this.attrs[ZaAccount.A_COSId];

[WARNING] The symbol r is declared but is apparently never used.
This code can probably be written in a more compact way.
);}return;}var removeMemberSoapDoc, ---> r <--- ;var command=new ZmCsfeCommand();removeMemberSoapDoc

[WARNING] The symbol r is declared but is apparently never used.
This code can probably be written in a more compact way.
);}return;}var addMemberSoapDoc, ---> r <--- ;var command=new ZmCsfeCommand();addMemberSoapDoc

[WARNING] The symbol tabGroup is declared but is apparently never used.
This code can probably be written in a more compact way.
(dl,modifyList,isAdd){var  ---> tabGroup <--- =ZaApp.getInstance().getTabGroup()

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
,busyMsg:ZaMsg.BUSY_GET_RESOURCE};var  ---> resp <--- =ZaRequestMgr.invoke(params,reqMgrParams).

[WARNING] The symbol defaultDomainCos is declared but is apparently never used.
This code can probably be written in a more compact way.
accountName,isExtVirtualAccount){var defaultCos;var  ---> defaultDomainCos <--- ;if(!accountName){returndefaultCos;

[WARNING] The symbol batchResp is declared but is apparently never used.
This code can probably be written in a more compact way.
lastException=ex;}}else{var  ---> batchResp <--- =respObj.Body.BatchResponse;}}}

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
,busyMsg:ZaMsg.BUSY_CREATE_DOMAIN};var  ---> resp <--- =ZaRequestMgr.invoke(params,reqMgrParams).

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
,busyMsg:ZaMsg.BUSY_MODIFY_DOMAIN};var  ---> resp <--- =ZaRequestMgr.invoke(params,reqMgrParams).

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol marginTop is declared but is apparently never used.
This code can probably be written in a more compact way.
=function(optionId,height){var  ---> marginTop <--- =ZaSearchOptionView.HEADER_HEIGHT+8;var accountStatusChoices=

[WARNING] The symbol pos is declared but is apparently never used.
This code can probably be written in a more compact way.
.iGetNumNetBits=function(mask){var  ---> pos <--- =mask.indexOf("/");var lastPos

[WARNING] The symbol mods is declared but is apparently never used.
This code can probably be written in a more compact way.
("id",this.id);var  ---> mods <--- =new Object();for(var a

[WARNING] The symbol getCurrentVols is declared but is apparently never used.
This code can probably be written in a more compact way.
,null,ZaZimbraAdmin.URN);var  ---> getCurrentVols <--- =soapDoc.set("GetCurrentVolumesRequest",null,null

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
,busyMsg:ZaMsg.BUSY_UNDEPLOY_ZIMLET};var  ---> resp <--- =ZaRequestMgr.invoke(params,reqMgrParams);

[WARNING] The symbol resp is declared but is apparently never used.
This code can probably be written in a more compact way.
,busyMsg:ZaMsg.BUSY_DELETE_RETENTION_POLICIES};var  ---> resp <--- =ZaRequestMgr.invoke(params,reqMgrParams).

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaAccountXFormView.addAliasButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaAccountXFormView.addFwdAddrButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaAccountXFormView.addCalFwdAddrButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaAccountXFormView.addFpButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol app is declared but is apparently never used.
This code can probably be written in a more compact way.
parent.addFpDlg.getObject();var  ---> app <--- =this.parent._app;var currentFps=

[WARNING] The symbol zimbraFeatureMailForwardingEnabledItem is declared but is apparently never used.
This code can probably be written in a more compact way.
cases.push(memberofCase);}var  ---> zimbraFeatureMailForwardingEnabledItem <--- ={ref:ZaAccount.A_zimbraFeatureMailForwardingEnabled,msgName:

[WARNING] The symbol acc is declared but is apparently never used.
This code can probably be written in a more compact way.
=function(evt){try{var  ---> acc <--- =this._containedObject[this._currentIndex];

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
ABORT_BUTTON].setEnabled(false);var  ---> obj <--- =this._localXForm.getInstance();AjxTimedAction

[WARNING] The symbol volArr is declared but is apparently never used.
This code can probably be written in a more compact way.
instance=this.getInstance();var  ---> volArr <--- =[];if(!instance.volume_selection_cache

[WARNING] The symbol _tab4 is declared but is apparently never used.
This code can probably be written in a more compact way.
);var _tab1,_tab2,_tab3, ---> _tab4 <--- ,_tab5,_tab6,_tab7,_tab8,_tab9

[WARNING] The symbol _tab9 is declared but is apparently never used.
This code can probably be written in a more compact way.
,_tab5,_tab6,_tab7,_tab8, ---> _tab9 <--- ;var tabBarChoices=[];this.helpMap

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
.aclSelectionListener=function(ev){var  ---> instance <--- =this.getInstance();var arr=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
var domain=new ZaDomain();var  ---> instance <--- =this.getInstance();domain.attrs

[WARNING] The symbol event is declared but is apparently never used.
This code can probably be written in a more compact way.
{var value=callArgs.value;var  ---> event <--- =callArgs.event;var callback=callArgs.

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
(value,event,form){var  ---> instance <--- =this.getInstance();};ZaSpnegoUACustomDialog

[WARNING] The symbol tmpList is declared but is apparently never used.
This code can probably be written in a more compact way.
.sort(ZaItem.compareNamesDesc);var  ---> tmpList <--- =[];var cnt=list.length

[WARNING] The symbol formParent is declared but is apparently never used.
This code can probably be written in a more compact way.
getForm().getInstance();var  ---> formParent <--- =this.getForm().parent;var 

[WARNING] The symbol tmpList is declared but is apparently never used.
This code can probably be written in a more compact way.
.sort(ZaItem.compareNamesDesc);var  ---> tmpList <--- =[];var cnt=list.length

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
parent.handleManualProvDlg.popdown();var  ---> obj <--- =this.parent.handleManualProvDlg.getObject()

[WARNING] The symbol cellWidth is declared but is apparently never used.
This code can probably be written in a more compact way.
._headerList[i]._field;var  ---> cellWidth <--- =this._getCellWidth(i,{})

[WARNING] The symbol headerItems is declared but is apparently never used.
This code can probably be written in a more compact way.
_tab4,_tab5,_tab6,_tab7;var  ---> headerItems <--- =[{type:_AJX_IMAGE_,src:"COS_32"

[WARNING] The symbol form is declared but is apparently never used.
This code can probably be written in a more compact way.
.advancedButtonHndlr=function(evt){var  ---> form <--- =this.getForm();var sb_controller=

[WARNING] The symbol row2 is declared but is apparently never used.
This code can probably be written in a more compact way.
htmlEl.firstChild);var row1;var  ---> row2 <--- ;var col2;row1=this._table.

[WARNING] The symbol col2 is declared but is apparently never used.
This code can probably be written in a more compact way.
);var row1;var row2;var  ---> col2 <--- ;row1=this._table.insertRow(0

[WARNING] The symbol options is declared but is apparently never used.
This code can probably be written in a more compact way.
.clearSelect=function(node){var  ---> options <--- =node.getElementsByTagName("option");for(

[WARNING] The symbol span is declared but is apparently never used.
This code can probably be written in a more compact way.
appendChild(table);var a;var  ---> span <--- ;a=document.createElement("a");

[WARNING] The symbol row2 is declared but is apparently never used.
This code can probably be written in a more compact way.
htmlEl.firstChild);var row1;var  ---> row2 <--- ;var col2;row1=this._table.

[WARNING] The symbol col2 is declared but is apparently never used.
This code can probably be written in a more compact way.
);var row1;var row2;var  ---> col2 <--- ;row1=this._table.insertRow(0

[WARNING] The symbol limit is declared but is apparently never used.
This code can probably be written in a more compact way.
;var sortAscending=instance.sortAscending;var  ---> limit <--- =params.limit;var updateCallback=new AjxCallback

[WARNING] The symbol numFormatter is declared but is apparently never used.
This code can probably be written in a more compact way.
getResponse().Body.GetQuotaUsageResponse;var  ---> numFormatter <--- =AjxNumberFormat.getInstance();if((

[WARNING] The symbol totalMbxes is declared but is apparently never used.
This code can probably be written in a more compact way.
{var hasMore=resp.more;var  ---> totalMbxes <--- =resp.searchTotal;var accounts=resp.

[WARNING] The symbol totalPage is declared but is apparently never used.
This code can probably be written in a more compact way.
_pageObj[type]["curPage"];var  ---> totalPage <--- =this._pageObj[type]["totalPage"]

[WARNING] The symbol name is declared but is apparently never used.
This code can probably be written in a more compact way.
var toRemove=memberListToRemove[j];var  ---> name <--- =toRemove[ZaAccount.A_name];var cmp

[WARNING] The symbol name is declared but is apparently never used.
This code can probably be written in a more compact way.
var toAdd=memberListToAdd[j];var  ---> name <--- =toAdd[ZaAccount.A_name];var cmp

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaDLXFormView.addAliasButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaNewDLXWizard.addAliasButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaResourceXFormView.addCalFwdAddrButtonListener=function(){var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
addSignatureButtonListener=function(){try{var  ---> instance <--- =this.getInstance();var formPage=

[WARNING] The symbol lm is declared but is apparently never used.
This code can probably be written in a more compact way.
(appCtxt.getRootTabGroup());var  ---> lm <--- =new ZaZimbraAdmin(appCtxt);};ZaZimbraAdmin

[WARNING] The symbol ev is declared but is apparently never used.
This code can probably be written in a more compact way.
){returnc.handleKeyAction(actionCode, ---> ev <--- );}}else{returnfalse;}

[WARNING] The symbol helpEl is declared but is apparently never used.
This code can probably be written in a more compact way.
,"HelpContainer",Dwt.RELATIVE_STYLE);var  ---> helpEl <--- =helpLabel.getHtmlElement();helpLabel.setCursor

[WARNING] The symbol listener is declared but is apparently never used.
This code can probably be written in a more compact way.
skin.skin_container_help_max_str_length);}else{var  ---> listener <--- =new AjxListener(this,this._helpListener)

[WARNING] The symbol listener is declared but is apparently never used.
This code can probably be written in a more compact way.
,"DWContainer",Dwt.RELATIVE_STYLE);var  ---> listener <--- =new AjxListener(this,this._dwListener)

[WARNING] The symbol descCSSStyle is declared but is apparently never used.
This code can probably be written in a more compact way.
ZaHelpView.getAdminXFormItems=function(){var  ---> descCSSStyle <--- ="";var bulletImgItem={type:_OUTPUT_

[WARNING] The symbol field is declared but is apparently never used.
This code can probably be written in a more compact way.
=function(action){var qName, ---> field <--- ,dlgTitle,instance;qName=this.getRef

[WARNING] The symbol arr is declared but is apparently never used.
This code can probably be written in a more compact way.
.actionMsgsByQueryCallback=function(args){var  ---> arr <--- =[],action,removelist,qName,

[WARNING] The symbol filterName is declared but is apparently never used.
This code can probably be written in a more compact way.
().split("/");var  ---> filterName <--- =refParts[1];var qName=refParts

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
if(typeofmyVisibilityChecks==="string"){var  ---> instance <--- =this.getInstance();isVisible=eval

[WARNING] The symbol instance is declared but is apparently never used.
This code can probably be written in a more compact way.
if(typeofmyVisibilityChecks==="string"){var  ---> instance <--- =this.getInstance();isVisible=eval

[WARNING] The symbol m is declared but is apparently never used.
This code can probably be written in a more compact way.
];var j=-1;var  ---> m <--- =-1;j=ZaUtil.findValueInObjArrByPropertyName(

[WARNING] The symbol j is declared but is apparently never used.
This code can probably be written in a more compact way.
(arr,value,foundArr){var  ---> j <--- =-1;if(!foundArr){

[WARNING] The symbol dlName is declared but is apparently never used.
This code can probably be written in a more compact way.
newDirectMember.length;i++){var  ---> dlName <--- =newDirectMember[i].name;addList.

[WARNING] The symbol addMemberSoapDoc is declared but is apparently never used.
This code can probably be written in a more compact way.
{var len=removeArray.length;var  ---> addMemberSoapDoc <--- ,r,removeMemberSoapDoc;var command=new ZmCsfeCommand

[WARNING] The symbol isGroupOnlyCkbAction is declared but is apparently never used.
This code can probably be written in a more compact way.
getForm().getInstance();var  ---> isGroupOnlyCkbAction <--- =instance[ZaAccount.A2_memberOf]?instance[

[WARNING] The symbol isGroupOnly is declared but is apparently never used.
This code can probably be written in a more compact way.
A2_memberOf]["showGroupOnlyAction"]:false;var  ---> isGroupOnly <--- =instance[ZaAccount.A2_memberOf]?instance[
