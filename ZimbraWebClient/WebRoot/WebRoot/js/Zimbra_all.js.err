
[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
._cmds.length;i++){ ---> var  <--- cmd=this._cmds[i];cmd

[WARNING] Try to use a single 'var' statement per scope.
this);this.curId++;} ---> var  <--- params={sensitive:this._sensitive,noAuthToken

[WARNING] Try to use a single 'var' statement per scope.
};if(this._useJson){ ---> var  <--- jsonObj={BatchRequest:{_jsns:"urn:zimbra",

[WARNING] Try to use a single 'var' statement per scope.
,onerror:this._onError}}; ---> var  <--- batchRequest=jsonObj.BatchRequest;var size=this

[WARNING] Try to use a single 'var' statement per scope.
};var batchRequest=jsonObj.BatchRequest; ---> var  <--- size=this.size();if(

[WARNING] Try to use a single 'var' statement per scope.
this._requests.length){for( ---> var  <--- i=0;i<size;i++

[WARNING] The variable i has already been declared in the same scope...
._requests.length){for(var  ---> i <--- =0;i<size;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<size;i++){ ---> var  <--- request=this._requests[i];if

[WARNING] Try to use a single 'var' statement per scope.
request){request.requestId=i; ---> var  <--- methodName=ZmCsfeCommand.getMethodName(request);if

[WARNING] Try to use a single 'var' statement per scope.
._requestBody=jsonObj;}}else{ ---> var  <--- batchSoapDoc=AjxSoapDoc.create("BatchRequest","urn:zimbra")

[WARNING] Try to use a single 'var' statement per scope.
setMethodAttribute("onerror",this._onError); ---> var  <--- size=this.size();if(

[WARNING] The variable size has already been declared in the same scope...
("onerror",this._onError);var  ---> size <--- =this.size();if(size

[WARNING] Try to use a single 'var' statement per scope.
if(size>0){for( ---> var  <--- i=0;i<size;i++

[WARNING] The variable i has already been declared in the same scope...
(size>0){for(var  ---> i <--- =0;i<size;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<size;i++){ ---> var  <--- soapDoc=this._requests[i];var 

[WARNING] Try to use a single 'var' statement per scope.
soapDoc=this._requests[i]; ---> var  <--- reqEl=soapDoc.getMethod();reqEl.

[WARNING] Try to use a single 'var' statement per scope.
reqEl.setAttribute("requestId",i); ---> var  <--- node=batchSoapDoc.adoptNode(reqEl);batchSoapDoc

[WARNING] Try to use a single 'var' statement per scope.
!batchResponse.BatchResponse){return;} ---> var  <--- responses=[];for(var method in 

[WARNING] Try to use a single 'var' statement per scope.
}var responses=[];for( ---> var  <--- method in batchResponse.BatchResponse){if(method

[WARNING] Try to use a single 'var' statement per scope.
match(/^_/)){continue;} ---> var  <--- methodResponses=batchResponse.BatchResponse[method];for

[WARNING] Try to use a single 'var' statement per scope.
batchResponse.BatchResponse[method];for( ---> var  <--- i=0;i<methodResponses.length;

[WARNING] Try to use a single 'var' statement per scope.
:methodResponses[i]};}} ---> var  <--- exceptions=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
}var exceptions=[];for( ---> var  <--- i=0;i<responses.length;

[WARNING] The variable i has already been declared in the same scope...
var exceptions=[];for(var  ---> i <--- =0;i<responses.length;i

[WARNING] Try to use a single 'var' statement per scope.
<responses.length;i++){ ---> var  <--- response=responses[i];try{this

[WARNING] Try to use a single 'var' statement per scope.
requestId;if(method=="Fault"){ ---> var  <--- ex=ZmCsfeCommand.faultToEx(resp,"ZmBatchCommand.prototype.run")

[WARNING] Try to use a single 'var' statement per scope.
(this._errorCallbacks[id]){ ---> var  <--- handled=this._errorCallbacks[id].run

[WARNING] Try to use a single 'var' statement per scope.
(this._respCallbacks[id]){ ---> var  <--- data={};data[method]=

[WARNING] Try to use a single 'var' statement per scope.
};data[method]=resp; ---> var  <--- result=new ZmCsfeResult(data);this.

[WARNING] Try to use a single 'var' statement per scope.
){exp=new Date(); ---> var  <--- lifetime=parseInt(lifetimeMs);exp.setTime

[WARNING] Try to use a single 'var' statement per scope.
.Error.Trace||"")}; ---> var  <--- request;if(params){if(params

[WARNING] Try to use a single 'var' statement per scope.
;if(!methodName){for( ---> var  <--- prop in request){if(/Request|Response$/.test

[WARNING] Try to use a single 'var' statement per scope.
requestStr=ZmCsfeCommand.getRequestStr(params); ---> var  <--- rpcCallback;try{var uri=(params.

[WARNING] Try to use a single 'var' statement per scope.
(params);var rpcCallback;try{ ---> var  <--- uri=(params.serverUri||ZmCsfeCommand.serverUri

[WARNING] Try to use a single 'var' statement per scope.
this._st=new Date(); ---> var  <--- requestHeaders={"Content-Type":"application/soap+xml; charset=utf-8"};if(

[WARNING] Try to use a single 'var' statement per scope.
,requestHeaders,rpcCallback);}else{ ---> var  <--- response=AjxRpc.invoke(requestStr,uri,

[WARNING] Try to use a single 'var' statement per scope.
,rpcCallback,true);}else{ ---> var  <--- response=AjxRpc.invoke(null,params.

[WARNING] Try to use a single 'var' statement per scope.
},Body:params.jsonObj}; ---> var  <--- context=obj.Header.context={_jsns

[WARNING] Try to use a single 'var' statement per scope.
.context={_jsns:"urn:zimbra"}; ---> var  <--- ua_name=["ZimbraWebClient - ",AjxEnv.browser," ("

[WARNING] Try to use a single 'var' statement per scope.
.nosession={};}else{ ---> var  <--- sessionId=ZmCsfeCommand.getSessionId();if(

[WARNING] Try to use a single 'var' statement per scope.
;if(!params.noAuthToken){ ---> var  <--- authToken=params.authToken||ZmCsfeCommand.getAuthToken(

[WARNING] Try to use a single 'var' statement per scope.
params);params.jsonRequestObj=obj; ---> var  <--- requestStr=(params.useStringify1?JSON.stringify1

[WARNING] Try to use a single 'var' statement per scope.
;if(!params.resend){ ---> var  <--- hdr=soapDoc.createHeaderElement();var context

[WARNING] Try to use a single 'var' statement per scope.
var hdr=soapDoc.createHeaderElement(); ---> var  <--- context=soapDoc.set("context",null,

[WARNING] Try to use a single 'var' statement per scope.
"context",null,hdr,"urn:zimbra"); ---> var  <--- ua=soapDoc.set("userAgent",null,

[WARNING] Try to use a single 'var' statement per scope.
set("userAgent",null,context); ---> var  <--- name=["ZimbraWebClient - ",AjxEnv.browser," ("

[WARNING] Try to use a single 'var' statement per scope.
,null,context);}else{ ---> var  <--- sessionId=ZmCsfeCommand.getSessionId();var si

[WARNING] Try to use a single 'var' statement per scope.
var sessionId=ZmCsfeCommand.getSessionId(); ---> var  <--- si=soapDoc.set("session",null,

[WARNING] Try to use a single 'var' statement per scope.
;}if(params.highestNotifySeen){ ---> var  <--- notify=soapDoc.set("notify",null,

[WARNING] Try to use a single 'var' statement per scope.
;}if(params.changeToken){ ---> var  <--- ct=soapDoc.set("change",null,

[WARNING] Try to use a single 'var' statement per scope.
){if(params.accountId){ ---> var  <--- acc=soapDoc.set("account",params.

[WARNING] Try to use a single 'var' statement per scope.
else{if(params.accountName){ ---> var  <--- acc=soapDoc.set("account",params.

[WARNING] The variable acc has already been declared in the same scope...
{if(params.accountName){var  ---> acc <--- =soapDoc.set("account",params.accountName

[WARNING] Try to use a single 'var' statement per scope.
}}if(params.skipExpiredToken){ ---> var  <--- tokenControl=soapDoc.set("authTokenControl",null,

[WARNING] Try to use a single 'var' statement per scope.
}if(!params.useXml){ ---> var  <--- js=soapDoc.set("format",null,

[WARNING] Try to use a single 'var' statement per scope.
;if(!params.noAuthToken){ ---> var  <--- authToken=params.authToken||ZmCsfeCommand.getAuthToken(

[WARNING] Try to use a single 'var' statement per scope.
params.resend==ZmCsfeCommand.REAUTH){ ---> var  <--- nodes=soapDoc.getDoc().getElementsByTagName(

[WARNING] Try to use a single 'var' statement per scope.
;var result=new ZmCsfeResult(); ---> var  <--- xmlResponse=false;var restResponse=Boolean(params

[WARNING] Try to use a single 'var' statement per scope.
ZmCsfeResult();var xmlResponse=false; ---> var  <--- restResponse=Boolean(params.restUri);var 

[WARNING] Try to use a single 'var' statement per scope.
restResponse=Boolean(params.restUri); ---> var  <--- respDoc=null;if(!response.success

[WARNING] Try to use a single 'var' statement per scope.
test(response.text))){ ---> var  <--- ex=new ZmCsfeException(null,ZmCsfeException.CSFE_SVC_ERROR

[WARNING] Try to use a single 'var' statement per scope.
;}}if(!respDoc){ ---> var  <--- ex=new ZmCsfeException(null,ZmCsfeException.SOAP_ERROR

[WARNING] The variable ex has already been declared in the same scope...
}}if(!respDoc){var  ---> ex <--- =new ZmCsfeException(null,ZmCsfeException.SOAP_ERROR,

[WARNING] Try to use a single 'var' statement per scope.
else{throwex;}}}} ---> var  <--- obj=restResponse?response.text:{}

[WARNING] Try to use a single 'var' statement per scope.
);AjxDebug.logSoapMessage(params); ---> var  <--- fault=obj&&obj.Body&&obj.

[WARNING] Try to use a single 'var' statement per scope.
(true,false,true);} ---> var  <--- ex=ZmCsfeCommand.faultToEx(fault,params)

[WARNING] The variable ex has already been declared in the same scope...
true,false,true);}var  ---> ex <--- =ZmCsfeCommand.faultToEx(fault,params);

[WARNING] Try to use a single 'var' statement per scope.
{if(!response.success){ ---> var  <--- ex=new ZmCsfeException(null,ZmCsfeException.CSFE_SVC_ERROR

[WARNING] The variable ex has already been declared in the same scope...
if(!response.success){var  ---> ex <--- =new ZmCsfeException(null,ZmCsfeException.CSFE_SVC_ERROR,

[WARNING] Try to use a single 'var' statement per scope.
.set(obj);}}} ---> var  <--- session=obj.Header&&obj.Header.

[WARNING] Try to use a single 'var' statement per scope.
.data.length;i++){ ---> var  <--- item=params.data[i];var 

[WARNING] Try to use a single 'var' statement per scope.
item=params.data[i]; ---> var  <--- key=item.n;if(!this

[WARNING] Try to use a single 'var' statement per scope.
.style.zIndex=Dwt.Z_SPLASH; ---> var  <--- myTable=document.createElement("table");myTable

[WARNING] Try to use a single 'var' statement per scope.
setSize(myTable,"100%","100%"); ---> var  <--- row=myTable.insertRow(0);var 

[WARNING] Try to use a single 'var' statement per scope.
row=myTable.insertRow(0); ---> var  <--- cell=row.insertCell(0);cell

[WARNING] Try to use a single 'var' statement per scope.
msgs.report,DwtDialog.ALIGN_LEFT); ---> var  <--- detailButton=new DwtDialog_ButtonDescriptor(ZmErrorDialog.DETAIL_BUTTON,msgs

[WARNING] Try to use a single 'var' statement per scope.
_detailStr,showDetails:this._detailsVisible}; ---> var  <--- html=AjxTemplate.expand("zimbra.Widgets#ZmErrorDialogContent",data)

[WARNING] Try to use a single 'var' statement per scope.
(){var strNav=[]; ---> var  <--- idx=0;strNav[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
[idx++]="\n";for( ---> var  <--- i in navigator){if(typeofnavigator[

[WARNING] Try to use a single 'var' statement per scope.
(){var strSubj=[]; ---> var  <--- idx=0;strSubj[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
var currSearch=appCtxt.getCurrentSearch(); ---> var  <--- strPrefs=[];var idx=0;

[WARNING] Try to use a single 'var' statement per scope.
();var strPrefs=[]; ---> var  <--- idx=0;strPrefs[idx++]=

[WARNING] Try to use a single 'var' statement per scope.
idx++]="\n";}for( ---> var  <--- i in ZmSetting.INIT){if(ZmSetting

[WARNING] Try to use a single 'var' statement per scope.
contentDiv.appendChild(this._iframe); ---> var  <--- strPrefs=this._getUserPrefs();var formId

[WARNING] Try to use a single 'var' statement per scope.
var strPrefs=this._getUserPrefs(); ---> var  <--- formId=Dwt.getNextId();var html

[WARNING] Try to use a single 'var' statement per scope.
var formId=Dwt.getNextId(); ---> var  <--- html=[];var idx=0;

[WARNING] Try to use a single 'var' statement per scope.
();var html=[]; ---> var  <--- idx=0;var subject=this._subjPfx

[WARNING] Try to use a single 'var' statement per scope.
=[];var idx=0; ---> var  <--- subject=this._subjPfx+this._detailStr.

[WARNING] Try to use a single 'var' statement per scope.
_detailStr.substring(0,40); ---> var  <--- scheme=(location.protocol=="https:")?

[WARNING] Try to use a single 'var' statement per scope.
;html[idx++]="</textarea></form></body></html>"; ---> var  <--- idoc=Dwt.getIframeDoc(this._iframe)

[WARNING] Try to use a single 'var' statement per scope.
));idoc.close(); ---> var  <--- form=idoc.getElementById(formId);if

[WARNING] Try to use a single 'var' statement per scope.
(!target){returntrue;} ---> var  <--- keyCode=ev.keyCode;var fakeTabKey=false

[WARNING] Try to use a single 'var' statement per scope.
;}var keyCode=ev.keyCode; ---> var  <--- fakeTabKey=false;if(keyCode==13)

[WARNING] Try to use a single 'var' statement per scope.
){fakeTabKey=true;}else{ ---> var  <--- loginAction=ZLoginFactory.get(ZLoginFactory.LOGIN_BUTTON_ID)

[WARNING] Try to use a single 'var' statement per scope.
fakeTabKey||(keyCode==9)){ ---> var  <--- startIndex=ZLoginFactory.TAB_ORDER.length-1;

[WARNING] Try to use a single 'var' statement per scope.
.TAB_ORDER.length-1;for( ---> var  <--- i=0;i<ZLoginFactory.TAB_ORDER.

[WARNING] Try to use a single 'var' statement per scope.
{startIndex=i;break;}} ---> var  <--- forward=!ev.shiftKey;var tabToIndex=

[WARNING] Try to use a single 'var' statement per scope.
}var forward=!ev.shiftKey; ---> var  <--- tabToIndex=ZLoginFactory._getTabToIndex(startIndex,forward)

[WARNING] Try to use a single 'var' statement per scope.
ZLoginFactory._getTabToIndex(startIndex,forward); ---> var  <--- tabToId=ZLoginFactory.TAB_ORDER[tabToIndex];var 

[WARNING] Try to use a single 'var' statement per scope.
tabToId=ZLoginFactory.TAB_ORDER[tabToIndex]; ---> var  <--- tabToType=ZLoginFactory.TAB_TYPE[tabToIndex];ZLoginFactory

[WARNING] Try to use a single 'var' statement per scope.
if(type==ZLoginFactory.CHECKBOX_TYPE){ ---> var  <--- checkbox=ZLoginFactory.get(id);checkbox

[WARNING] Try to use a single 'var' statement per scope.
checkbox.focus();}else{ ---> var  <--- button=ZLoginFactory.get(id);button

[WARNING] Try to use a single 'var' statement per scope.
){var testIndex=startIndex;do{ ---> var  <--- tabToIndex;if(forward){testIndex=(

[WARNING] Try to use a single 'var' statement per scope.
-1):testIndex-1;} ---> var  <--- id=ZLoginFactory.TAB_ORDER[testIndex];var 

[WARNING] Try to use a single 'var' statement per scope.
id=ZLoginFactory.TAB_ORDER[testIndex]; ---> var  <--- visibilityId=ZLoginFactory.VISIBILITY[testIndex];var 

[WARNING] Try to use a single 'var' statement per scope.
visibilityId=ZLoginFactory.VISIBILITY[testIndex]; ---> var  <--- control=ZLoginFactory.get(id);if

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Found an undeclared symbol: Dwt
ZmCsfeException=function(params){params= ---> Dwt <--- .getParams(arguments,ZmCsfeException.PARAMS);

[WARNING] The symbol request is declared but is apparently never used.
This code can probably be written in a more compact way.
Error.Trace||"")};var  ---> request <--- ;if(params){if(params.

[WARNING] The symbol tabToIndex is declared but is apparently never used.
This code can probably be written in a more compact way.
{var testIndex=startIndex;do{var  ---> tabToIndex <--- ;if(forward){testIndex=(testIndex

[WARNING] The symbol control is declared but is apparently never used.
This code can probably be written in a more compact way.
=ZLoginFactory.VISIBILITY[testIndex];var  ---> control <--- =ZLoginFactory.get(id);if(
