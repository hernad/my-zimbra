
[INFO] Using charset UTF-8

[WARNING] Try to use a single 'var' statement per scope.
,eventName);if(listenerStruct){ ---> var  <--- listenerList=listenerStruct.list;var len=listenerList

[WARNING] Try to use a single 'var' statement per scope.
){var listenerList=listenerStruct.list; ---> var  <--- len=listenerList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=listenerList.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
,eventName);if(listenerStruct){ ---> var  <--- listenerList=listenerStruct.list;var len=listenerList

[WARNING] Try to use a single 'var' statement per scope.
){var listenerList=listenerStruct.list; ---> var  <--- len=listenerList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=listenerList.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;if(eventSource[eventName]){ ---> var  <--- id=eventSource[eventName]._lsListenerStructId;listenerStruct

[WARNING] Try to use a single 'var' statement per scope.
();listenerStruct.single=null; ---> var  <--- id=listenerStruct.id=AjxCore.assignId(

[WARNING] The variable id has already been declared in the same scope...
);listenerStruct.single=null;var  ---> id <--- =listenerStruct.id=AjxCore.assignId(listenerStruct

[WARNING] Try to use a single 'var' statement per scope.
id=AjxCore.assignId(listenerStruct); ---> var  <--- handler=AjxCore._createListenerClosure(id);eventSource

[WARNING] Try to use a single 'var' statement per scope.
listenerStruct=AjxCore.objectWithId(id); ---> var  <--- listenerList=listenerStruct.list;var len=listenerList

[WARNING] Try to use a single 'var' statement per scope.
);var listenerList=listenerStruct.list; ---> var  <--- len=listenerList.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=listenerList.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- callback=listenerList[i];if(callback

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(typeof(callback)=="string"){ ---> eval <--- (callback);}else{if(callback

[WARNING] Try to use a single 'var' statement per scope.
}}if(listenerStruct.single){ ---> var  <--- callback=listenerStruct.single;if(typeof(

[WARNING] The variable callback has already been declared in the same scope...
}if(listenerStruct.single){var  ---> callback <--- =listenerStruct.single;if(typeof(callback

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
(typeof(callback)=="string"){ ---> eval <--- (callback);}else{returncallback.

[WARNING] Try to use a single 'var' statement per scope.
;}var formattedUnits=AjxMsg.sizeBytes; ---> var  <--- units=AjxMsg.SIZE_BYTES;if(size>=

[WARNING] Try to use a single 'var' statement per scope.
units=AjxUtil.SIZE_KILOBYTES;}}} ---> var  <--- formattedSize=AjxUtil.formatSizeForUnits(size,units,

[WARNING] Try to use a single 'var' statement per scope.
!=""?I18nMsg.numberSeparatorDecimal:"."; ---> var  <--- pattern=I18nMsg.formatNumber.replace(/\..*$/,

[WARNING] Try to use a single 'var' statement per scope.
{pattern=pattern+=dot;for( ---> var  <--- i=0;i<fractions;i++

[WARNING] Try to use a single 'var' statement per scope.
.replace(/^\s*/,"")); ---> var  <--- marker=/[GMK]?B$/i;var result=marker.exec

[WARNING] Try to use a single 'var' statement per scope.
""));var marker=/[GMK]?B$/i; ---> var  <--- result=marker.exec(formattedSize);if

[WARNING] Try to use a single 'var' statement per scope.
();myException.message=aMessage; ---> var  <--- myStack=new Array();if(AjxEnv

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isIE5_5up){ ---> var  <--- myTrace=arguments.callee.caller;var i

[WARNING] Try to use a single 'var' statement per scope.
var myTrace=arguments.callee.caller; ---> var  <--- i=0;while(myTrace&&i++

[WARNING] Try to use a single 'var' statement per scope.
.caller;}}else{try{ ---> var  <--- myTrace=arguments.callee.caller;while(

[WARNING] The variable myTrace has already been declared in the same scope...
caller;}}else{try{var  ---> myTrace <--- =arguments.callee.caller;while(myTrace

[WARNING] Try to use a single 'var' statement per scope.
{}}myException.stack=myStack; ---> var  <--- stackString="";var MAX_LEN=170;for

[WARNING] Try to use a single 'var' statement per scope.
stack=myStack;var stackString=""; ---> var  <--- MAX_LEN=170;for(var i=1

[WARNING] Try to use a single 'var' statement per scope.
"";var MAX_LEN=170;for( ---> var  <--- i=1;i<myStack.length;

[WARNING] The variable i has already been declared in the same scope...
;var MAX_LEN=170;for(var  ---> i <--- =1;i<myStack.length;i

[WARNING] Try to use a single 'var' statement per scope.
;}if(i<11){ ---> var  <--- fs=myStack[i].toString()

[WARNING] Try to use a single 'var' statement per scope.
;}var str="";for( ---> var  <--- i=n.firstChild;i;i=

[WARNING] Try to use a single 'var' statement per scope.
(object,level){var proxy; ---> var  <--- proxyCtor=function(){};proxyCtor.

[WARNING] Try to use a single 'var' statement per scope.
){proxy=new Array(); ---> var  <--- cnt=object.length;for(var ix

[WARNING] Try to use a single 'var' statement per scope.
var cnt=object.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
;}if(level){for( ---> var  <--- prop in object){if(typeofobject[

[WARNING] Try to use a single 'var' statement per scope.
_object_;if(object){for( ---> var  <--- prop in proxy){if(proxy.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
{var newList=[];for( ---> var  <--- i=0;i<list.length;

[WARNING] Try to use a single 'var' statement per scope.
array);var hash={}; ---> var  <--- func=typeofvalueOrFunc=="function"&&valueOrFunc;var 

[WARNING] Try to use a single 'var' statement per scope.
func=typeofvalueOrFunc=="function"&&valueOrFunc; ---> var  <--- value=valueOrFunc||true;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var value=valueOrFunc||true;for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
<array.length;i++){ ---> var  <--- key=array[i];hash[key

[WARNING] Try to use a single 'var' statement per scope.
<array.length;i++){ ---> var  <--- item=array[i];if((

[WARNING] Try to use a single 'var' statement per scope.
{var keys=[];for( ---> var  <--- p in object){if(acceptFunc&&!

[WARNING] Try to use a single 'var' statement per scope.
{var values=[];for( ---> var  <--- p in object){if(acceptFunc&&!

[WARNING] Try to use a single 'var' statement per scope.
prototype.hasOwnProperty.bind(obj); ---> var  <--- r={};for(var k in 

[WARNING] Try to use a single 'var' statement per scope.
;var r={};for( ---> var  <--- k in obj){var v=obj[

[WARNING] Try to use a single 'var' statement per scope.
;for(var k in obj){ ---> var  <--- v=obj[k];if(!

[WARNING] Try to use a single 'var' statement per scope.
){var array=obj;for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
],i);}}else{ ---> var  <--- hasown=Object.prototype.hasOwnProperty.bind(

[WARNING] Try to use a single 'var' statement per scope.
hasOwnProperty.bind(obj);for( ---> var  <--- k in obj){if(hasown(k

[WARNING] Try to use a single 'var' statement per scope.
Array(array.length);for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
}var object={};for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
}var seen={};for( ---> var  <--- i=0;i<array.length;

[WARNING] Try to use a single 'var' statement per scope.
<array.length;i++){ ---> var  <--- key=keyfn(array[i]);

[WARNING] Try to use a single 'var' statement per scope.
{var array=[];for( ---> var  <--- i=0;i<arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
concat.apply(this,arguments); ---> var  <--- object=AjxUtil.arrayAsHash(array,AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
array,AjxUtil.__intersection_count);for( ---> var  <--- p in object){if(object[p

[WARNING] Try to use a single 'var' statement per scope.
object1=AjxUtil.arrayAsHash(array1); ---> var  <--- object2=AjxUtil.arrayAsHash(array2);for

[WARNING] Try to use a single 'var' statement per scope.
AjxUtil.arrayAsHash(array2);for( ---> var  <--- p in object2){if(p in object1

[WARNING] Try to use a single 'var' statement per scope.
array==null){returnresults;} ---> var  <--- nativeFilter=Array.prototype.filter;if(

[WARNING] Try to use a single 'var' statement per scope.
{continue;}if(aname){ ---> var  <--- attr=child.getAttributeNode(aname);if

[WARNING] Try to use a single 'var' statement per scope.
{};var url=[]; ---> var  <--- i=0;if(!params.relative

[WARNING] Try to use a single 'var' statement per scope.
;if(!params.relative){ ---> var  <--- proto=params.protocol||location.protocol;

[WARNING] Try to use a single 'var' statement per scope.
=params.host||location.hostname; ---> var  <--- port=Number(params.port||location.

[WARNING] Try to use a single 'var' statement per scope.
=params.path||location.pathname; ---> var  <--- qs="";if(params.qsArgs)

[WARNING] Try to use a single 'var' statement per scope.
){var size=0;for( ---> var  <--- e in a){if(a.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
__mergeArrays_orderfunc;}var tmpArr1=[]; ---> var  <--- cnt1=arr1.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt1=arr1.length;for( ---> var  <--- i=0;i<cnt1;i++

[WARNING] Try to use a single 'var' statement per scope.
push(arr1[i]);} ---> var  <--- tmpArr2=[];var cnt2=arr2.

[WARNING] Try to use a single 'var' statement per scope.
);}var tmpArr2=[]; ---> var  <--- cnt2=arr2.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=arr2.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] The variable i has already been declared in the same scope...
cnt2=arr2.length;for(var  ---> i <--- =0;i<cnt2;i++)

[WARNING] Try to use a single 'var' statement per scope.
push(arr2[i]);} ---> var  <--- resArr=[];while(tmpArr1.length

[WARNING] Try to use a single 'var' statement per scope.
};}var tmpArr1=[]; ---> var  <--- cnt1=arr1.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt1=arr1.length;for( ---> var  <--- i=0;i<cnt1;i++

[WARNING] Try to use a single 'var' statement per scope.
push(arr1[i]);} ---> var  <--- tmpArr2=[];var cnt2=arr2.

[WARNING] Try to use a single 'var' statement per scope.
);}var tmpArr2=[]; ---> var  <--- cnt2=arr2.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var cnt2=arr2.length;for( ---> var  <--- i=0;i<cnt2;i++

[WARNING] The variable i has already been declared in the same scope...
cnt2=arr2.length;for(var  ---> i <--- =0;i<cnt2;i++)

[WARNING] Try to use a single 'var' statement per scope.
);tmpArr1.sort(orderfunc); ---> var  <--- resArr=[];while(tmpArr1.length

[WARNING] Try to use a single 'var' statement per scope.
{var list=[];for( ---> var  <--- key in hash){list.push(key

[WARNING] Try to use a single 'var' statement per scope.
keys1=AjxUtil.getHashKeys(hash1); ---> var  <--- keys2=AjxUtil.getHashKeys(hash2);if

[WARNING] Try to use a single 'var' statement per scope.
)){returnfalse;}for( ---> var  <--- i=0,len=keys1.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- key=keys1[i];if(hash1

[WARNING] Try to use a single 'var' statement per scope.
;var copy={};for( ---> var  <--- key in hash){if((!omit

[WARNING] Try to use a single 'var' statement per scope.
(source){var result=""; ---> var  <--- length=0;if(!source||!

[WARNING] Try to use a single 'var' statement per scope.
)){returnsource;}for( ---> var  <--- i=0;i<length;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<length;i++){ ---> var  <--- charCode=source.charCodeAt(i);if

[WARNING] Try to use a single 'var' statement per scope.
)||(charCode==34)){ ---> var  <--- temp=charCode.toString(10);while

[WARNING] Try to use a single 'var' statement per scope.
-1){return;}try{ ---> var  <--- byteString=window.atob(dataURIArray[1]

[WARNING] Try to use a single 'var' statement per scope.
if(!byteString){return;} ---> var  <--- mimeString=dataURIArray[0].split(":"

[WARNING] Try to use a single 'var' statement per scope.
[0];if(mimeString){ ---> var  <--- byteStringLength=byteString.length,ab=new ArrayBuffer

[WARNING] Try to use a single 'var' statement per scope.
=new Uint8Array(ab);for( ---> var  <--- i=0;i<byteStringLength;i++

[WARNING] Try to use a single 'var' statement per scope.
new TypeError(callback+" is not a function");} ---> var  <--- index,value,length=array.length>>>

[WARNING] Try to use a single 'var' statement per scope.
){var arg=name+"="; ---> var  <--- alen=arg.length;var clen=doc

[WARNING] Try to use a single 'var' statement per scope.
"=";var alen=arg.length; ---> var  <--- clen=doc.cookie.length;var cookie

[WARNING] Try to use a single 'var' statement per scope.
var clen=doc.cookie.length; ---> var  <--- cookie=doc.cookie;var i=0

[WARNING] Try to use a single 'var' statement per scope.
length;var cookie=doc.cookie; ---> var  <--- i=0;while(i<clen)

[WARNING] Try to use a single 'var' statement per scope.
0;while(i<clen){ ---> var  <--- j=i+alen;if(cookie.

[WARNING] Try to use a single 'var' statement per scope.
(i,j)==arg){ ---> var  <--- endstr=cookie.indexOf(";",j)

[WARNING] Try to use a single 'var' statement per scope.
(doc){var name="ZM_COOKIE_TEST"; ---> var  <--- value="Zimbra";AjxCookie.setCookie(doc,

[WARNING] Try to use a single 'var' statement per scope.
setCookie(doc,name,value); ---> var  <--- cookie=AjxCookie.getCookie(doc,name)

[WARNING] Try to use a single 'var' statement per scope.
;}var prefix=faultEl.prefix; ---> var  <--- codeStr=prefix+":Code";var reasonStr=prefix

[WARNING] Try to use a single 'var' statement per scope.
prefix;var codeStr=prefix+":Code"; ---> var  <--- reasonStr=prefix+":Reason";var detailStr=prefix

[WARNING] Try to use a single 'var' statement per scope.
":Code";var reasonStr=prefix+":Reason"; ---> var  <--- detailStr=prefix+":Detail";var len=faultEl

[WARNING] Try to use a single 'var' statement per scope.
":Reason";var detailStr=prefix+":Detail"; ---> var  <--- len=faultEl.childNodes.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=faultEl.childNodes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- childNode=faultEl.childNodes[i];if

[WARNING] Try to use a single 'var' statement per scope.
if(childNode.nodeName==codeStr){ ---> var  <--- faultCode=childNode.firstChild.firstChild.nodeValue;

[WARNING] Try to use a single 'var' statement per scope.
._xmlDoc=AjxXmlDoc.create(); ---> var  <--- d=sd._xmlDoc.getDoc();

[WARNING] Try to use a single 'var' statement per scope.
_SOAP_URI;}sd._soapURI=soapURI; ---> var  <--- useNS=d.createElementNS&&!AjxEnv.isSafari

[WARNING] Try to use a single 'var' statement per scope.
d.createElementNS&&!AjxEnv.isSafari; ---> var  <--- envEl=useNS?d.createElementNS(soapURI,

[WARNING] Try to use a single 'var' statement per scope.
;}d.appendChild(envEl); ---> var  <--- bodyEl=useNS?d.createElementNS(soapURI,

[WARNING] Try to use a single 'var' statement per scope.
var doc=this.getDoc(); ---> var  <--- useNS=doc.createElementNS&&!AjxEnv.isSafari

[WARNING] Try to use a single 'var' statement per scope.
doc.createElementNS&&!AjxEnv.isSafari; ---> var  <--- p=name?(namespace&&useNS?doc

[WARNING] Try to use a single 'var' statement per scope.
(typeofvalue=="object"){for( ---> var  <--- i in value){var val=value[

[WARNING] Try to use a single 'var' statement per scope.
{for(var i in value){ ---> var  <--- val=value[i];if(i

[WARNING] Try to use a single 'var' statement per scope.
if(val instanceof Array){for( ---> var  <--- j=0;j<val.length;

[WARNING] Try to use a single 'var' statement per scope.
=this._xmlDoc.getDoc(); ---> var  <--- envEl=d.firstChild;var header=this

[WARNING] Try to use a single 'var' statement per scope.
);var envEl=d.firstChild; ---> var  <--- header=this.getHeader();if(

[WARNING] Try to use a single 'var' statement per scope.
,AjxSoapException.ELEMENT_EXISTS,"AjxSoapDoc.prototype.createHeaderElement");} ---> var  <--- useNS=d.createElementNS&&!AjxEnv.isSafari

[WARNING] Try to use a single 'var' statement per scope.
=this._xmlDoc.getDoc(); ---> var  <--- nodeList=!d.getElementsByTagNameNS?(d.

[WARNING] Try to use a single 'var' statement per scope.
=this._xmlDoc.getDoc(); ---> var  <--- nodeList=!d.getElementsByTagNameNS?(d.

[WARNING] Try to use a single 'var' statement per scope.
,AjxSoapException.INVALID_PDU,"AjxSoapDoc.createFromXml:1");} ---> var  <--- el=doc.firstChild;if(!AjxEnv

[WARNING] Try to use a single 'var' statement per scope.
;this.methodName=serverUrl||""; ---> var  <--- httpMethod=AjxRpcRequest.HTTP_POST;if(method)

[WARNING] Try to use a single 'var' statement per scope.
(asyncMode){if(timeout){ ---> var  <--- action=new AjxTimedAction(this,this.__handleTimeout

[WARNING] Try to use a single 'var' statement per scope.
.scheduleAction(action,timeout);} ---> var  <--- tempThis=this;this.__httpReq.onreadystatechange=

[WARNING] Try to use a single 'var' statement per scope.
;}if(requestHeaders){for( ---> var  <--- i in requestHeaders){if(requestHeaders.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
"MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"];for( ---> var  <--- i=0;i<msxmlVers.length;

[WARNING] Try to use a single 'var' statement per scope.
.length;i++){try{ ---> var  <--- x=new ActiveXObject(msxmlVers[i])

[WARNING] Try to use a single 'var' statement per scope.
var asyncMode=(callback!=null); ---> var  <--- rpcCtxt=AjxRpc.__getFreeRpcCtxt();try{

[WARNING] Try to use a single 'var' statement per scope.
=AjxRpc.__getFreeRpcCtxt();try{ ---> var  <--- response=rpcCtxt.invoke(requestStr,serverUrl,

[WARNING] Try to use a single 'var' statement per scope.
timeout);}catch(ex){ ---> var  <--- newEx=new AjxException();newEx.method

[WARNING] Try to use a single 'var' statement per scope.
AjxRpc.__RPC_IN_USE<AjxRpc.__RPC_CACHE_MAX){ ---> var  <--- id="__RpcCtxt_"+AjxRpc.__RPC_ID;rpcCtxt=

[WARNING] Try to use a single 'var' statement per scope.
();if(!rpcCtxt){ ---> var  <--- text=[];for(var i in 

[WARNING] Try to use a single 'var' statement per scope.
{var text=[];for( ---> var  <--- i in AjxRpc.__rpcOutstanding){var rpcCtxt=

[WARNING] Try to use a single 'var' statement per scope.
(var i in AjxRpc.__rpcOutstanding){ ---> var  <--- rpcCtxt=AjxRpc.__rpcOutstanding[i];text

[WARNING] The variable rpcCtxt has already been declared in the same scope...
var i in AjxRpc.__rpcOutstanding){var  ---> rpcCtxt <--- =AjxRpc.__rpcOutstanding[i];text.

[WARNING] Try to use a single 'var' statement per scope.
.push(rpcCtxt.methodName);} ---> var  <--- detail=text.join("<br>")+"<br>"

[WARNING] Try to use a single 'var' statement per scope.
=function(all){var rpcCtxt; ---> var  <--- time=(new Date()).getTime

[WARNING] Try to use a single 'var' statement per scope.
_getTimeStamp()+" Running RPC context reaper");for( ---> var  <--- i in AjxRpc.__rpcOutstanding){rpcCtxt=AjxRpc

[WARNING] Try to use a single 'var' statement per scope.
a=new Array();for( ---> var  <--- i=0;i<this._array.

[WARNING] Try to use a single 'var' statement per scope.
._array.length;i++){ ---> var  <--- x=this._array[i];if

[WARNING] Try to use a single 'var' statement per scope.
{var newList=[];for( ---> var  <--- i=0;i<list._array.

[WARNING] Try to use a single 'var' statement per scope.
_array.splice(index,1); ---> var  <--- ret=null;if(delArr){ret

[WARNING] Try to use a single 'var' statement per scope.
._array.length;i++){ ---> var  <--- member=this._array[i],test

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- member=this._array[i],test

[WARNING] Try to use a single 'var' statement per scope.
keyFunc.call(obj);for( ---> var  <--- i=this._array.length-1;

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- test=keyFunc.call(this._array[

[WARNING] Try to use a single 'var' statement per scope.
keyFunc.call(obj);for( ---> var  <--- i=0;i<this._array.

[WARNING] Try to use a single 'var' statement per scope.
._array.length;i++){ ---> var  <--- test=keyFunc.call(this._array[

[WARNING] Try to use a single 'var' statement per scope.
._defaultArrayComparator;}var l=0; ---> var  <--- arr=this._array;var u=arr

[WARNING] Try to use a single 'var' statement per scope.
0;var arr=this._array; ---> var  <--- u=arr.length-1;while(

[WARNING] Try to use a single 'var' statement per scope.
<l){return-1;} ---> var  <--- i=Math.floor((l+u

[WARNING] Try to use a single 'var' statement per scope.
(l+u)/2); ---> var  <--- comparisonResult=sortFunc(valueToFind,arr[i]

[WARNING] Try to use a single 'var' statement per scope.
?list.getArray():list; ---> var  <--- limit=this._array.length<(offset

[WARNING] Try to use a single 'var' statement per scope.
offset<this._array.length){ ---> var  <--- count=0;for(var i=offset

[WARNING] Try to use a single 'var' statement per scope.
){var count=0;for( ---> var  <--- i=offset;i<limit;i++

[WARNING] Try to use a single 'var' statement per scope.
wds=text.split(sep); ---> var  <--- newText=[];newText.push(camel

[WARNING] Try to use a single 'var' statement per scope.
).toLowerCase());for( ---> var  <--- i=1;i<wds.length;

[WARNING] Try to use a single 'var' statement per scope.
;}var trim_re=AjxStringUtil.TRIM_RE; ---> var  <--- compress_re=AjxStringUtil.COMPRESS_RE;if(space)

[WARNING] Try to use a single 'var' statement per scope.
){var text="";for( ---> var  <--- i=0;i<num;i++

[WARNING] Try to use a single 'var' statement per scope.
(typeof(sizeString)=="string"){ ---> var  <--- digitString=Number(parseInt(sizeString,10)

[WARNING] Try to use a single 'var' statement per scope.
;dels=dels?dels:","; ---> var  <--- isDel=new Object();if(typeof

[WARNING] Try to use a single 'var' statement per scope.
[i]]=1;}} ---> var  <--- q=false;var p=0;var 

[WARNING] Try to use a single 'var' statement per scope.
1;}}var q=false; ---> var  <--- p=0;var start=0;var 

[WARNING] Try to use a single 'var' statement per scope.
q=false;var p=0; ---> var  <--- start=0;var chunk;var chunks=

[WARNING] Try to use a single 'var' statement per scope.
p=0;var start=0; ---> var  <--- chunk;var chunks=[];var j

[WARNING] Try to use a single 'var' statement per scope.
;var start=0;var chunk; ---> var  <--- chunks=[];var j=0;

[WARNING] Try to use a single 'var' statement per scope.
var chunk;var chunks=[]; ---> var  <--- j=0;for(i=0;

[WARNING] Try to use a single 'var' statement per scope.
<str.length;i++){ ---> var  <--- c=str.charAt(i);if

[WARNING] Try to use a single 'var' statement per scope.
;}var text=params.text; ---> var  <--- before=params.before||"";var after

[WARNING] Try to use a single 'var' statement per scope.
var before=params.before||""; ---> var  <--- after=params.after||"";var isFlowed

[WARNING] Try to use a single 'var' statement per scope.
var after=params.after||""; ---> var  <--- isFlowed=params.isFlowed;if(params.

[WARNING] Try to use a single 'var' statement per scope.
after].join("");} ---> var  <--- max=params.len||(params.isHeaders

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.HDR_WRAP_LENGTH:AjxStringUtil.WRAP_LENGTH); ---> var  <--- prefixChar=params.prefix||"";var eol

[WARNING] Try to use a single 'var' statement per scope.
var prefixChar=params.prefix||""; ---> var  <--- eol="\n";var lines=text.split

[WARNING] Try to use a single 'var' statement per scope.
prefix||"";var eol="\n"; ---> var  <--- lines=text.split(AjxStringUtil.SPLIT_RE)

[WARNING] Try to use a single 'var' statement per scope.
text.split(AjxStringUtil.SPLIT_RE); ---> var  <--- words=[];for(var l=

[WARNING] Try to use a single 'var' statement per scope.
;var words=[];for( ---> var  <--- l=0,llen=lines.length;

[WARNING] Try to use a single 'var' statement per scope.
;l<llen;l++){ ---> var  <--- line=lines[l];var m=

[WARNING] Try to use a single 'var' statement per scope.
{var line=lines[l]; ---> var  <--- m=line.match(/^([\s>\|]+)/);var 

[WARNING] Try to use a single 'var' statement per scope.
m=line.match(/^([\s>\|]+)/); ---> var  <--- prefix=m?m[1]:""

[WARNING] Try to use a single 'var' statement per scope.
._NON_WHITESPACE.test(line)){ ---> var  <--- wds=AjxStringUtil.splitKeepLeadingWhitespace(line);if

[WARNING] Try to use a single 'var' statement per scope.
&&wds[0].length){ ---> var  <--- mustStart=AjxStringUtil.MSG_SEP_RE.test(line)

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.SIG_RE.test(line); ---> var  <--- mustEnd=params.preserveReturns;if(isFlowed)

[WARNING] Try to use a single 'var' statement per scope.
params.preserveReturns;if(isFlowed){ ---> var  <--- m=line.match(/( +)$/);if

[WARNING] The variable m has already been declared in the same scope...
.preserveReturns;if(isFlowed){var  ---> m <--- =line.match(/( +)$/);if(

[WARNING] Try to use a single 'var' statement per scope.
{mustEnd=true;}}for( ---> var  <--- w=0,wlen=wds.length;

[WARNING] Try to use a single 'var' statement per scope.
,prefix:prefix});}} ---> var  <--- result="",curLen=0,wds=

[WARNING] The variable wds has already been declared in the same scope...
var result="",curLen=0, ---> wds <--- =[],curPrefix=null;for(

[WARNING] Try to use a single 'var' statement per scope.
[],curPrefix=null;for( ---> var  <--- i=0,len=words.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- word=words[i];var w=

[WARNING] Try to use a single 'var' statement per scope.
{var word=words[i]; ---> var  <--- w=word.w,prefix=word.

[WARNING] The variable w has already been declared in the same scope...
var word=words[i];var  ---> w <--- =word.w,prefix=word.prefix

[WARNING] The variable prefix has already been declared in the same scope...
];var w=word.w, ---> prefix <--- =word.prefix;var addPrefix=!prefixChar

[WARNING] Try to use a single 'var' statement per scope.
.w,prefix=word.prefix; ---> var  <--- addPrefix=!prefixChar?"":curPrefix?prefixChar

[WARNING] Try to use a single 'var' statement per scope.
:curPrefix?prefixChar:prefixChar+" "; ---> var  <--- pl=(curPrefix===null)?0:

[WARNING] Try to use a single 'var' statement per scope.
:curPrefix.length;pl=0; ---> var  <--- newPrefix=addPrefix+(curPrefix||"");

[WARNING] Try to use a single 'var' statement per scope.
}}if(wds.length){ ---> var  <--- addPrefix=!prefixChar?"":wds[0

[WARNING] The variable addPrefix has already been declared in the same scope...
}if(wds.length){var  ---> addPrefix <--- =!prefixChar?"":wds[0]

[WARNING] Try to use a single 'var' statement per scope.
.prefix?prefixChar:prefixChar+" "; ---> var  <--- newPrefix=addPrefix+(curPrefix||"");

[WARNING] The variable newPrefix has already been declared in the same scope...
prefix?prefixChar:prefixChar+" ";var  ---> newPrefix <--- =addPrefix+(curPrefix||"");result

[WARNING] Try to use a single 'var' statement per scope.
;}var text=params.text; ---> var  <--- before=params.before||"",after=

[WARNING] Try to use a single 'var' statement per scope.
after].join("");} ---> var  <--- len=params.len||80;var pre

[WARNING] Try to use a single 'var' statement per scope.
var len=params.len||80; ---> var  <--- pre=params.pre||"";var eol

[WARNING] Try to use a single 'var' statement per scope.
var pre=params.pre||""; ---> var  <--- eol="\n";text=AjxStringUtil.trim(

[WARNING] Try to use a single 'var' statement per scope.
text.replace(/\n\r/g,eol); ---> var  <--- lines=text.split(eol);var 

[WARNING] Try to use a single 'var' statement per scope.
lines=text.split(eol); ---> var  <--- result=[];for(var l=

[WARNING] Try to use a single 'var' statement per scope.
;var result=[];for( ---> var  <--- l=0,llen=lines.length;

[WARNING] Try to use a single 'var' statement per scope.
;l<llen;l++){ ---> var  <--- line=AjxStringUtil.trim(lines[l]

[WARNING] Try to use a single 'var' statement per scope.
str1.length,str2.length); ---> var  <--- i=0;while(i<len&&

[WARNING] Try to use a single 'var' statement per scope.
=window.decodeURLComponent||window.decodeURIComponent; ---> var  <--- result;try{result=func(str)

[WARNING] Try to use a single 'var' statement per scope.
(quotePrefix){var prefix_re=/^(>|&gt;|\|\s+)/; ---> var  <--- lines=str.split(/\r?\n/);var 

[WARNING] Try to use a single 'var' statement per scope.
lines=str.split(/\r?\n/); ---> var  <--- level=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var level=0;for( ---> var  <--- i=0;i<lines.length;

[WARNING] Try to use a single 'var' statement per scope.
<lines.length;i++){ ---> var  <--- line=lines[i];if(line

[WARNING] Try to use a single 'var' statement per scope.
if(line.length>0){ ---> var  <--- lineLevel=0;while(line.match(

[WARNING] Try to use a single 'var' statement per scope.
pixelWidth){returnorigString;}for( ---> var  <--- i=origString.length-1;i>

[WARNING] Try to use a single 'var' statement per scope.
;i>0;i--){ ---> var  <--- newString=origString.substr(0,i)

[WARNING] Try to use a single 'var' statement per scope.
){calcDIV.className=className;} ---> var  <--- newString="";var newLine="";var 

[WARNING] Try to use a single 'var' statement per scope.
=className;}var newString=""; ---> var  <--- newLine="";var textRows=origString.split

[WARNING] Try to use a single 'var' statement per scope.
newString="";var newLine=""; ---> var  <--- textRows=origString.split("/n");for

[WARNING] Try to use a single 'var' statement per scope.
origString.split("/n");for( ---> var  <--- trCount=0;trCount<textRows.length;

[WARNING] Try to use a single 'var' statement per scope.
].split("<br>");for( ---> var  <--- hrCount=0;hrCount<htmlRows.length;

[WARNING] Try to use a single 'var' statement per scope.
[hrCount].split(" "); ---> var  <--- wCount=0;while(wCount<words.

[WARNING] Try to use a single 'var' statement per scope.
newLine+" "+words[wCount]; ---> var  <--- newLinePixels=calcDIV.offsetWidth;if(newLinePixels>

[WARNING] Try to use a single 'var' statement per scope.
"<br>";newLine="";}else{ ---> var  <--- keepLooping=true;var atPos=0;while

[WARNING] Try to use a single 'var' statement per scope.
;}else{var keepLooping=true; ---> var  <--- atPos=0;while(keepLooping){atPos

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=domRoot;domRoot=domNode;} ---> var  <--- text=[];var idx=0;

[WARNING] Try to use a single 'var' statement per scope.
domNode;}var text=[]; ---> var  <--- idx=0;var ctxt={};

[WARNING] Try to use a single 'var' statement per scope.
=[];var idx=0; ---> var  <--- ctxt={};AjxStringUtil._traverse(domRoot

[WARNING] Try to use a single 'var' statement per scope.
0,ctxt,convertor,onlyOneNewLinePerP); ---> var  <--- result=text.join("");if

[WARNING] Try to use a single 'var' statement per scope.
=el.nodeName.toLowerCase(); ---> var  <--- result=null;if(convertor&&convertor[

[WARNING] Try to use a single 'var' statement per scope.
if(nodeName=="li"){for( ---> var  <--- i=0;i<listLevel;i++

[WARNING] Try to use a single 'var' statement per scope.
}}}}}}}}} ---> var  <--- childNodes=el.childNodes;var len=childNodes

[WARNING] Try to use a single 'var' statement per scope.
}}var childNodes=el.childNodes; ---> var  <--- len=childNodes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=childNodes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] The variable i has already been declared in the same scope...
len=childNodes.length;for(var  ---> i <--- =0;i<len;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- tmp=childNodes[i];if(tmp

[WARNING] Try to use a single 'var' statement per scope.
=qs.substr(1);} ---> var  <--- qsArgs=qs.split("&");var 

[WARNING] Try to use a single 'var' statement per scope.
qsArgs=qs.split("&"); ---> var  <--- newArgs={};for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var newArgs={};for( ---> var  <--- i=0;i<qsArgs.length;

[WARNING] Try to use a single 'var' statement per scope.
<qsArgs.length;i++){ ---> var  <--- f=qsArgs[i].split("="

[WARNING] Try to use a single 'var' statement per scope.
=f[1];}for( ---> var  <--- name in args){newArgs[name]=

[WARNING] Try to use a single 'var' statement per scope.
name]=args[name];} ---> var  <--- pairs=[];var i=0;

[WARNING] Try to use a single 'var' statement per scope.
];}var pairs=[]; ---> var  <--- i=0;for(var name in newArgs

[WARNING] The variable i has already been declared in the same scope...
;}var pairs=[];var  ---> i <--- =0;for(var name in newArgs)

[WARNING] Try to use a single 'var' statement per scope.
];var i=0;for( ---> var  <--- name in newArgs){if(name){

[WARNING] The variable name has already been declared in the same scope...
;var i=0;for(var  ---> name <---  in newArgs){if(name){pairs

[WARNING] Try to use a single 'var' statement per scope.
pairs=qs.split("&"); ---> var  <--- pairs1=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var pairs1=[];for( ---> var  <--- i=0;i<pairs.length;

[WARNING] Try to use a single 'var' statement per scope.
,b){var bias=0; ---> var  <--- idxa=0;var idxb=0;var 

[WARNING] Try to use a single 'var' statement per scope.
bias=0;var idxa=0; ---> var  <--- idxb=0;var ca;var cb;

[WARNING] Try to use a single 'var' statement per scope.
idxa=0;var idxb=0; ---> var  <--- ca;var cb;for(;(idxa

[WARNING] Try to use a single 'var' statement per scope.
;var idxb=0;var ca; ---> var  <--- cb;for(;(idxa<a.

[WARNING] Try to use a single 'var' statement per scope.
var idxa=0,idxb=0; ---> var  <--- nza=0,nzb=0;var ca

[WARNING] Try to use a single 'var' statement per scope.
var nza=0,nzb=0; ---> var  <--- ca,cb;while(idxa<a.

[WARNING] Try to use a single 'var' statement per scope.
&&AjxStringUtil.isDigit(cb)){ ---> var  <--- result=AjxStringUtil.compareRight(a.substring(

[WARNING] Try to use a single 'var' statement per scope.
index<=limit){returnfileName;} ---> var  <--- fName=fileName.slice(0,index)

[WARNING] Try to use a single 'var' statement per scope.
fileName.slice(0,index); ---> var  <--- ext=fileName.slice(index);return

[WARNING] Try to use a single 'var' statement per scope.
"directoryPath","fileName","query","anchor"]; ---> var  <--- parts=AjxStringUtil.URL_PARSE_RE.exec(sourceUri)

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.URL_PARSE_RE.exec(sourceUri); ---> var  <--- uri={};for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var uri={};for( ---> var  <--- i=0;i<names.length;

[WARNING] Try to use a single 'var' statement per scope.
.to=str;returnparts;} ---> var  <--- match=str.match(/\bsubject=([^&]+)/i);parts

[WARNING] Try to use a single 'var' statement per scope.
||(""+window.location); ---> var  <--- idx=location.indexOf("?");var 

[WARNING] Try to use a single 'var' statement per scope.
idx=location.indexOf("?"); ---> var  <--- qs=(idx===-1)?location

[WARNING] Try to use a single 'var' statement per scope.
qs.replace(/#.*$/,""); ---> var  <--- list=qs.split("&");var 

[WARNING] Try to use a single 'var' statement per scope.
list=qs.split("&"); ---> var  <--- params={},pair,key,value

[WARNING] Try to use a single 'var' statement per scope.
,pair,key,value;for( ---> var  <--- i=0;i<list.length;

[WARNING] Try to use a single 'var' statement per scope.
,omit){var indentLevel=0; ---> var  <--- showBraces=false;var stopRecursion=false;if

[WARNING] Try to use a single 'var' statement per scope.
indentLevel=0;var showBraces=false; ---> var  <--- stopRecursion=false;if(arguments.length>

[WARNING] Try to use a single 'var' statement per scope.
(AjxUtil.isObject(obj)){ ---> var  <--- objStr=obj.toString?obj.toString(

[WARNING] Try to use a single 'var' statement per scope.
_visited.add(obj);}} ---> var  <--- indent=AjxStringUtil.repeat(" ",indentLevel)

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.repeat(" ",indentLevel); ---> var  <--- text="";if(obj===undefined)

[WARNING] Try to use a single 'var' statement per scope.
(AjxUtil.isObject(obj)){ ---> var  <--- isArray=AjxUtil.isArray(obj)||AjxUtil

[WARNING] Try to use a single 'var' statement per scope.
;}else{stopRecursion=!recurse; ---> var  <--- keys=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
keys=new Array();for( ---> var  <--- i in obj){if(obj.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
text+=isArray?"[":"{";} ---> var  <--- len=keys.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=keys.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] The variable i has already been declared in the same scope...
len=keys.length;for(var  ---> i <--- =0;i<len;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- key=keys[i];var nextObj=

[WARNING] Try to use a single 'var' statement per scope.
{var key=keys[i]; ---> var  <--- nextObj=obj[key];var value=

[WARNING] Try to use a single 'var' statement per scope.
;var nextObj=obj[key]; ---> var  <--- value=null;if(nextObj==window||

[WARNING] Try to use a single 'var' statement per scope.
",";}text+="\n"+indent; ---> var  <--- keyString;if(isArray){keyString="// ["

[WARNING] Try to use a single 'var' statement per scope.
_testSpan=document.createElement("SPAN"); ---> var  <--- span2=AjxStringUtil._testSpanBold=document.createElement(

[WARNING] Try to use a single 'var' statement per scope.
.style.position=Dwt.ABSOLUTE_STYLE; ---> var  <--- shellEl=DwtShell.getShell(window).getHtmlElement

[WARNING] Try to use a single 'var' statement per scope.
=DwtCssStyle.asPixelCount(fontSize);} ---> var  <--- sz=""+(fontSize||0);

[WARNING] Try to use a single 'var' statement per scope.
=""+(fontSize||0); ---> var  <--- cache=bold?AjxStringUtil.WIDTH_BOLD:AjxStringUtil.

[WARNING] Try to use a single 'var' statement per scope.
};AjxStringUtil._cacheSize=0;} ---> var  <--- span=bold?AjxStringUtil._testSpanBold:AjxStringUtil.

[WARNING] Try to use a single 'var' statement per scope.
cache[str]={};} ---> var  <--- w=cache[str][sz]=

[WARNING] Try to use a single 'var' statement per scope.
strWidth<width){returnstr;} ---> var  <--- ell=AjxStringUtil.ELLIPSIS_NO_SPACE,ellWidth=AjxStringUtil.

[WARNING] Try to use a single 'var' statement per scope.
url=urlParts.path;}else{ ---> var  <--- oldRef=urlParts.protocol+"://"+urlParts.

[WARNING] Try to use a single 'var' statement per scope.
.protocol+"://"+urlParts.authority; ---> var  <--- newRef=window.location.protocol+"//"+

[WARNING] Try to use a single 'var' statement per scope.
._dummyDiv;div.innerHTML=html; ---> var  <--- inner=div.innerHTML;div.innerHTML=

[WARNING] Try to use a single 'var' statement per scope.
.getElementById(AjxStringUtil.__curIframeId);} ---> var  <--- idoc=Dwt.getIframeDoc(iframe);html

[WARNING] Try to use a single 'var' statement per scope.
);}var results=[]; ---> var  <--- lines=text.split(AjxStringUtil.SPLIT_RE)

[WARNING] Try to use a single 'var' statement per scope.
text.split(AjxStringUtil.SPLIT_RE); ---> var  <--- curType,curBlock=[],count={

[WARNING] Try to use a single 'var' statement per scope.
,unknownBlock,isBugzilla=false;for( ---> var  <--- i=0;i<lines.length;

[WARNING] Try to use a single 'var' statement per scope.
<lines.length;i++){ ---> var  <--- line=lines[i];var testLine=

[WARNING] Try to use a single 'var' statement per scope.
{var line=lines[i]; ---> var  <--- testLine=AjxStringUtil.trim(line);if

[WARNING] Try to use a single 'var' statement per scope.
1)){isBugzilla=true;} ---> var  <--- type=AjxStringUtil._getLineType(testLine);if

[WARNING] Try to use a single 'var' statement per scope.
;}else{isBugzilla=false;} ---> var  <--- nextLine=lines[i+1];var 

[WARNING] Try to use a single 'var' statement per scope.
nextLine=lines[i+1]; ---> var  <--- isMerged=false;if(nextLine&&(type

[WARNING] The variable isMerged has already been declared in the same scope...
=lines[i+1];var  ---> isMerged <--- =false;if(nextLine&&(type===

[WARNING] Try to use a single 'var' statement per scope.
if(type===AjxStringUtil.ORIG_LINE){ ---> var  <--- j=i+1;nextLine=lines[

[WARNING] Try to use a single 'var' statement per scope.
nextLine=lines[++j];} ---> var  <--- nextType=nextLine&&AjxStringUtil._getLineType(nextLine)

[WARNING] Try to use a single 'var' statement per scope.
[curType]+1:1;} ---> var  <--- first=results[0],second=results

[WARNING] Try to use a single 'var' statement per scope.
.type===AjxStringUtil.ORIG_WROTE_STRONG)){ ---> var  <--- originalText=AjxStringUtil._getTextFromBlock(first.block)

[WARNING] Try to use a single 'var' statement per scope.
.block);if(originalText){ ---> var  <--- third=results[2];if(third

[WARNING] Try to use a single 'var' statement per scope.
third.type===AjxStringUtil.ORIG_UNKNOWN){ ---> var  <--- originalThirdText=AjxStringUtil._getTextFromBlock(third.block)

[WARNING] Try to use a single 'var' statement per scope.
originalThirdText;}}returnoriginalText;}} ---> var  <--- originalText=AjxStringUtil._checkInlineWrote(count,results,

[WARNING] The variable originalText has already been declared in the same scope...
;}}returnoriginalText;}}var  ---> originalText <--- =AjxStringUtil._checkInlineWrote(count,results,false

[WARNING] Try to use a single 'var' statement per scope.
[AjxStringUtil.ORIG_QUOTED]>0){ ---> var  <--- originalText=AjxStringUtil._getTextFromBlock(unknownBlock);if

[WARNING] The variable originalText has already been declared in the same scope...
AjxStringUtil.ORIG_QUOTED]>0){var  ---> originalText <--- =AjxStringUtil._getTextFromBlock(unknownBlock);if(

[WARNING] Try to use a single 'var' statement per scope.
[AjxStringUtil.ORIG_SEP_STRONG]>0){ ---> var  <--- block=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
{var block=[];for( ---> var  <--- i=0;i<results.length;

[WARNING] The variable i has already been declared in the same scope...
var block=[];for(var  ---> i <--- =0;i<results.length;i

[WARNING] Try to use a single 'var' statement per scope.
<results.length;i++){ ---> var  <--- result=results[i];if(result

[WARNING] Try to use a single 'var' statement per scope.
.concat(result.block);} ---> var  <--- originalText=AjxStringUtil._getTextFromBlock(block);if

[WARNING] The variable originalText has already been declared in the same scope...
concat(result.block);}var  ---> originalText <--- =AjxStringUtil._getTextFromBlock(block);if(

[WARNING] Try to use a single 'var' statement per scope.
var type=AjxStringUtil.ORIG_UNKNOWN;for( ---> var  <--- j=0;j<AjxStringUtil.MSG_REGEXES.

[WARNING] Try to use a single 'var' statement per scope.
.MSG_REGEXES.length;j++){ ---> var  <--- msgTest=AjxStringUtil.MSG_REGEXES[j];var 

[WARNING] Try to use a single 'var' statement per scope.
msgTest=AjxStringUtil.MSG_REGEXES[j]; ---> var  <--- regex=msgTest.regex;if(regex.

[WARNING] Try to use a single 'var' statement per scope.
if(type===AjxStringUtil.ORIG_UNKNOWN){ ---> var  <--- m=testLine.match(/(\w+):$/);var 

[WARNING] Try to use a single 'var' statement per scope.
m=testLine.match(/(\w+):$/); ---> var  <--- verb=m&&m[1]&&m

[WARNING] Try to use a single 'var' statement per scope.
toLowerCase();if(verb){ ---> var  <--- points=0;points=points+(verb

[WARNING] Try to use a single 'var' statement per scope.
testLine)){points+=3;} ---> var  <--- regEx=new RegExp("^(--|"+AjxMsg.on

[WARNING] Try to use a single 'var' statement per scope.
(AjxStringUtil.SCRIPT_REGEX,"");} ---> var  <--- done=false,nodeList=[];AjxStringUtil

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil._flatten(htmlNode,nodeList); ---> var  <--- ln=nodeList.length,i,results=

[WARNING] Try to use a single 'var' statement per scope.
test(el.nodeValue))){ ---> var  <--- str=el.nodeValue;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var str=el.nodeValue;for( ---> var  <--- j=1;j<10;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<10;j++){ ---> var  <--- el1=nodeList[i+j];if

[WARNING] Try to use a single 'var' statement per scope.
._prune(sepNode,true);} ---> var  <--- result=done&&htmlNode.textContent?"<html>"+

[WARNING] Try to use a single 'var' statement per scope.
;}list.push(node); ---> var  <--- children=node.childNodes||[];for

[WARNING] Try to use a single 'var' statement per scope.
node.childNodes||[];for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
.removeChild(p.lastChild);} ---> var  <--- nodeName=p&&p.nodeName.toLowerCase(

[WARNING] Try to use a single 'var' statement per scope.
=el.nodeName.toLowerCase(); ---> var  <--- type=null;if(nodeName==="#text")

[WARNING] Try to use a single 'var' statement per scope.
null;if(nodeName==="#text"){ ---> var  <--- content=AjxStringUtil.trim(el.nodeValue)

[WARNING] Try to use a single 'var' statement per scope.
if(el.style.borderTop){ ---> var  <--- styleObj=DwtCssStyle.getComputedStyleObject(el);if

[WARNING] Try to use a single 'var' statement per scope.
length>200){returnnull;} ---> var  <--- type=AjxStringUtil._getLineType(content);return

[WARNING] Try to use a single 'var' statement per scope.
htmlNode=AjxStringUtil._writeToTestIframeDoc(html); ---> var  <--- ctxt={allowedTags:AjxUtil.arrayAsHash(okTags

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil._traverseCleanHtml(htmlNode,ctxt); ---> var  <--- result="<html>"+htmlNode.innerHTML+"</html>";

[WARNING] Try to use a single 'var' statement per scope.
="<html>"+htmlNode.innerHTML+"</html>"; ---> var  <--- width=Math.max(htmlNode.scrollWidth,

[WARNING] Try to use a single 'var' statement per scope.
,ctxt){var isCleanHtml=true; ---> var  <--- nodeName=el.nodeName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
){if(el.style){ ---> var  <--- style=el.style&&el.style.

[WARNING] Try to use a single 'var' statement per scope.
el.attributes.length){for( ---> var  <--- i=0;i<ctxt.untrustedAttrs.

[WARNING] Try to use a single 'var' statement per scope.
{isCleanHtml=false;}}for( ---> var  <--- i=0,attrs=el.attributes,

[WARNING] The variable i has already been declared in the same scope...
isCleanHtml=false;}}for(var  ---> i <--- =0,attrs=el.attributes,l

[WARNING] Try to use a single 'var' statement per scope.
;i<l;i++){ ---> var  <--- attr=attrs.item(i);if

[WARNING] Try to use a single 'var' statement per scope.
if(!attr){continue;} ---> var  <--- attrName=attr.nodeName&&attr.nodeName.

[WARNING] Try to use a single 'var' statement per scope.
.removeAttribute(attrName);continue;} ---> var  <--- attrValue=attr.nodeValue&&String(attr.

[WARNING] Try to use a single 'var' statement per scope.
isCleanHtml=false;}}}for( ---> var  <--- i=0,len=el.childNodes.

[WARNING] The variable i has already been declared in the same scope...
=false;}}}for(var  ---> i <--- =0,len=el.childNodes.length

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- childNode=el.childNodes[i];AjxStringUtil

[WARNING] Try to use a single 'var' statement per scope.
(childNode,ctxt);}for( ---> var  <--- i=el.childNodes.length-1;

[WARNING] The variable i has already been declared in the same scope...
childNode,ctxt);}for(var  ---> i <--- =el.childNodes.length-1;i

[WARNING] Try to use a single 'var' statement per scope.
;i>=0;i--){ ---> var  <--- childNode=el.childNodes[i];if

[WARNING] The variable childNode has already been declared in the same scope...
i>=0;i--){var  ---> childNode <--- =el.childNodes[i];if(

[WARNING] Try to use a single 'var' statement per scope.
false,afterSep={};for( ---> var  <--- i=0;i<results.length;

[WARNING] Try to use a single 'var' statement per scope.
<results.length;i++){ ---> var  <--- result=results[i],type=result

[WARNING] Try to use a single 'var' statement per scope.
type]=true;}}}} ---> var  <--- mixed=(afterSep[AjxStringUtil.ORIG_UNKNOWN]&&

[WARNING] Try to use a single 'var' statement per scope.
&&afterSep[AjxStringUtil.ORIG_QUOTED]); ---> var  <--- endsWithUnknown=(count[AjxStringUtil.ORIG_UNKNOWN]===

[WARNING] Try to use a single 'var' statement per scope.
&&(!mixed||endsWithUnknown)){ ---> var  <--- originalText=AjxStringUtil._getTextFromBlock(unknownBlock);if

[WARNING] Try to use a single 'var' statement per scope.
trimmedHtml.replace(/<div><br ?\/?><\/div>/gi,"<br>"); ---> var  <--- len=0;while(trimmedHtml.length!==

[WARNING] Try to use a single 'var' statement per scope.
.replace(/<br ?\/?>$/i,"");} ---> var  <--- m=trimmedHtml&&trimmedHtml.match(/((<br ?\/?>)+)((<\/\w+>)+)$/i)

[WARNING] Try to use a single 'var' statement per scope.
if(m&&m.length){ ---> var  <--- regex=new RegExp(m[1]+

[WARNING] Try to use a single 'var' statement per scope.
htmlNode=AjxStringUtil._writeToTestIframeDoc(html); ---> var  <--- images=htmlNode.getElementsByTagName("img");if

[WARNING] Try to use a single 'var' statement per scope.
if(images&&images.length){ ---> var  <--- imgEl;var dfSrcContent;var pnSrcContent;for(

[WARNING] Try to use a single 'var' statement per scope.
&&images.length){var imgEl; ---> var  <--- dfSrcContent;var pnSrcContent;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
length){var imgEl;var dfSrcContent; ---> var  <--- pnSrcContent;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
;var dfSrcContent;var pnSrcContent;for( ---> var  <--- i=0;i<images.length;

[WARNING] Try to use a single 'var' statement per scope.
imgEl.removeAttribute("dfsrc");}} ---> var  <--- content="";var children=htmlNode.childNodes

[WARNING] Try to use a single 'var' statement per scope.
);}}var content=""; ---> var  <--- children=htmlNode.childNodes;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var children=htmlNode.childNodes;for( ---> var  <--- i=0;i<children.length;

[WARNING] The variable i has already been declared in the same scope...
children=htmlNode.childNodes;for(var  ---> i <--- =0;i<children.length;i

[WARNING] Try to use a single 'var' statement per scope.
result.args.join(""); ---> var  <--- eol=(this._target!=AjxDebug.TGT_CONSOLE

[WARNING] Try to use a single 'var' statement per scope.
var state=on?"on":"off"; ---> var  <--- text="Turning timing info "+state;if(msg)

[WARNING] Try to use a single 'var' statement per scope.
text=text+": "+msg;} ---> var  <--- debugMsg=new DebugMessage({msg:text}

[WARNING] Try to use a single 'var' statement per scope.
new Date().getTime(); ---> var  <--- elapsed=now-this._startTimePt;var interval

[WARNING] Try to use a single 'var' statement per scope.
var elapsed=now-this._startTimePt; ---> var  <--- interval=now-this._lastTimePt;this.

[WARNING] Try to use a single 'var' statement per scope.
._lastTimePt;this._lastTimePt=now; ---> var  <--- spacer=restart?"<br/>":"";msg=

[WARNING] Try to use a single 'var' statement per scope.
=msg?" "+msg:""; ---> var  <--- text=[spacer,"[",elapsed," / "

[WARNING] Try to use a single 'var' statement per scope.
,msg].join(""); ---> var  <--- html="<div>"+text+"</div>";this.

[WARNING] Try to use a single 'var' statement per scope.
{};var html=[]; ---> var  <--- idx=0;if(obj===undefined)

[WARNING] Try to use a single 'var' statement per scope.
else{if(params.isXml){ ---> var  <--- xmldoc=new AjxDebugXmlDocument;var doc=xmldoc.

[WARNING] Try to use a single 'var' statement per scope.
isXml){var xmldoc=new AjxDebugXmlDocument; ---> var  <--- doc=xmldoc.create();if(

[WARNING] Try to use a single 'var' statement per scope.
Array(args.length);for( ---> var  <--- i=0;i<args.length;

[WARNING] Try to use a single 'var' statement per scope.
i]=args[i];} ---> var  <--- result={args:null,linkName:null

[WARNING] Try to use a single 'var' statement per scope.
args:null,linkName:null}; ---> var  <--- origLen=argsArray.length;if(argsArray.

[WARNING] Try to use a single 'var' statement per scope.
if(argsArray.length>1){ ---> var  <--- lastArg=argsArray[argsArray.length-1]

[WARNING] Try to use a single 'var' statement per scope.
;argsArray.pop();}} ---> var  <--- userLevel=null;var firstArg=argsArray[0

[WARNING] Try to use a single 'var' statement per scope.
);}}var userLevel=null; ---> var  <--- firstArg=argsArray[0];var gotUserLevel=

[WARNING] Try to use a single 'var' statement per scope.
;var firstArg=argsArray[0]; ---> var  <--- gotUserLevel=(typeoffirstArg=="number"||((

[WARNING] Try to use a single 'var' statement per scope.
;this._document.close(); ---> var  <--- ta=new AjxTimedAction(this,AjxDebug.prototype

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(AjxDebug._BOTTOM_FRAME_ID); ---> var  <--- doc=frame.contentWindow.document;var html

[WARNING] Try to use a single 'var' statement per scope.
var doc=frame.contentWindow.document; ---> var  <--- html=[];var i=0;

[WARNING] Try to use a single 'var' statement per scope.
.document;var html=[]; ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
var contentFrame=this.getContentFrame(); ---> var  <--- contentBody=contentFrame?contentFrame.contentWindow.document.

[WARNING] Try to use a single 'var' statement per scope.
.contentWindow.document.body:null; ---> var  <--- linkFrame=this.getLinkFrame();var linkBody

[WARNING] Try to use a single 'var' statement per scope.
var linkFrame=this.getLinkFrame(); ---> var  <--- linkBody=linkFrame?linkFrame.contentWindow.document.

[WARNING] Try to use a single 'var' statement per scope.
return"";}var str=""; ---> var  <--- len;switch(node.nodeType){case

[WARNING] Try to use a single 'var' statement per scope.
]){returnstr+"/&gt;</div>";} ---> var  <--- attrs=node.attributes;len=attrs.

[WARNING] Try to use a single 'var' statement per scope.
;len=attrs.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
str+"/&gt;</div>";}str+="&gt;<br />"; ---> var  <--- cs=node.childNodes;len=cs.

[WARNING] Try to use a single 'var' statement per scope.
;len=cs.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] The variable i has already been declared in the same scope...
len=cs.length;for(var  ---> i <--- =0;i<len;i++)

[WARNING] Try to use a single 'var' statement per scope.
nodeName+"</span>&gt;</div>";break;case9: ---> var  <--- cs=node.childNodes;len=cs.

[WARNING] The variable cs has already been declared in the same scope...
+"</span>&gt;</div>";break;case9:var  ---> cs <--- =node.childNodes;len=cs.length

[WARNING] Try to use a single 'var' statement per scope.
;len=cs.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] The variable i has already been declared in the same scope...
len=cs.length;for(var  ---> i <--- =0;i<len;i++)

[WARNING] Try to use a single 'var' statement per scope.
.test(node.nodeValue)){ ---> var  <--- val=node.nodeValue.replace(/</g,

[WARNING] Try to use a single 'var' statement per scope.
:str+="&lt;?"+node.nodeName; ---> var  <--- attrs=node.attributes;len=attrs.

[WARNING] The variable attrs has already been declared in the same scope...
str+="&lt;?"+node.nodeName;var  ---> attrs <--- =node.attributes;len=attrs.length

[WARNING] Try to use a single 'var' statement per scope.
;len=attrs.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] The variable i has already been declared in the same scope...
len=attrs.length;for(var  ---> i <--- =0;i<len;i++)

[WARNING] Try to use a single 'var' statement per scope.
){var str="";for( ---> var  <--- k in obj){str+="obj."+k

[WARNING] Try to use a single 'var' statement per scope.
var contentFrame=this.getContentFrame(); ---> var  <--- linkFrame=this.getLinkFrame();if(

[WARNING] Try to use a single 'var' statement per scope.
contentFrame||!linkFrame){return;} ---> var  <--- contentFrameDoc=contentFrame.contentWindow.document;var linkFrameDoc

[WARNING] Try to use a single 'var' statement per scope.
var contentFrameDoc=contentFrame.contentWindow.document; ---> var  <--- linkFrameDoc=linkFrame.contentWindow.document;var now

[WARNING] Try to use a single 'var' statement per scope.
var linkFrameDoc=linkFrame.contentWindow.document; ---> var  <--- now=new Date();for(var 

[WARNING] Try to use a single 'var' statement per scope.
now=new Date();for( ---> var  <--- i=0,len=this._msgQueue.

[WARNING] Try to use a single 'var' statement per scope.
;i<len;++i){ ---> var  <--- msg=this._msgQueue[i];var 

[WARNING] Try to use a single 'var' statement per scope.
msg=this._msgQueue[i]; ---> var  <--- linkLabel=msg.linkName;var contentLabel=[

[WARNING] Try to use a single 'var' statement per scope.
];var linkLabel=msg.linkName; ---> var  <--- contentLabel=[msg.message,msg.extraHtml

[WARNING] Try to use a single 'var' statement per scope.
TGT_CONSOLE)?"<br>":"";for( ---> var  <--- i=0,len=this._msgQueue.

[WARNING] Try to use a single 'var' statement per scope.
;i<len;++i){ ---> var  <--- msg=this._msgQueue[i];AjxDebug

[WARNING] Try to use a single 'var' statement per scope.
];if(max>0){ ---> var  <--- buffer=AjxDebug.BUFFER[type]=AjxDebug

[WARNING] Try to use a single 'var' statement per scope.
now=new Date();for( ---> var  <--- i=0,len=this._msgQueue.

[WARNING] Try to use a single 'var' statement per scope.
;i<len;++i){ ---> var  <--- msg=this._msgQueue[i];if

[WARNING] Try to use a single 'var' statement per scope.
now=now||new Date(); ---> var  <--- timeStamp=["[",this._getTimeStamp(now

[WARNING] Try to use a single 'var' statement per scope.
,"]"].join(""); ---> var  <--- id="Lnk_"+now.getTime();

[WARNING] Try to use a single 'var' statement per scope.
getTime();if(linkLabel){ ---> var  <--- linkFrameDoc=linkFrame.contentWindow.document;var linkEl

[WARNING] Try to use a single 'var' statement per scope.
var linkFrameDoc=linkFrame.contentWindow.document; ---> var  <--- linkEl=linkFrameDoc.createElement("DIV");linkEl

[WARNING] Try to use a single 'var' statement per scope.
;linkEl.onclick=AjxDebug._linkClicked; ---> var  <--- linkBody=linkFrameDoc.body;linkBody.appendChild(

[WARNING] Try to use a single 'var' statement per scope.
;linkBody.appendChild(linkEl);} ---> var  <--- contentFrameDoc=this.getContentFrame().contentWindow.

[WARNING] Try to use a single 'var' statement per scope.
.getContentFrame().contentWindow.document; ---> var  <--- contentEl=contentFrameDoc.createElement("DIV");contentEl

[WARNING] Try to use a single 'var' statement per scope.
=this._dbg.getContentFrame(); ---> var  <--- el=contentFrame.contentWindow.document.getElementById(

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._targetId); ---> var  <--- y=0;while(el){y

[WARNING] Try to use a single 'var' statement per scope.
var ts=AjxDebug._getTimeStamp(); ---> var  <--- msg=["<b>",params.methodNameStr,params

[WARNING] Try to use a single 'var' statement per scope.
].join("");for( ---> var  <--- type in AjxDebug.BUFFER){if(type

[WARNING] Try to use a single 'var' statement per scope.
;}if(window.DBG){ ---> var  <--- linkName=params.methodNameStr;if(!params

[WARNING] Try to use a single 'var' statement per scope.
"MSXML2","Microsoft","MSXML","MSXML3"]; ---> var  <--- o;var len=prefixes.length;for

[WARNING] Try to use a single 'var' statement per scope.
,"MSXML","MSXML3"];var o; ---> var  <--- len=prefixes.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=prefixes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
.removeChild(this.lastChild);} ---> var  <--- len=doc2.childNodes.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=doc2.childNodes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
.removeChild(this.lastChild);} ---> var  <--- len=doc2.childNodes.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=doc2.childNodes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
{var xmlDoc=new AjxXmlDoc(); ---> var  <--- newDoc=null;if(AjxXmlDoc._useActiveX)

[WARNING] Try to use a single 'var' statement per scope.
.xml;if(!xml){ ---> var  <--- ser=new XMLSerializer();xml=ser

[WARNING] Try to use a single 'var' statement per scope.
);xmlhttp.send(null); ---> var  <--- xmlDoc=xmlhttp.responseXML;this._doc=

[WARNING] Try to use a single 'var' statement per scope.
i.attributes.length){for( ---> var  <--- ix=0;ix<i.attributes.

[WARNING] Try to use a single 'var' statement per scope.
"MSXML2.DOMDocument","MSXML.DOMDocument","Microsoft.XmlDom"];for( ---> var  <--- i=0;i<msxmlVers.length;

[WARNING] Try to use a single 'var' statement per scope.
{var domParser=new DOMParser(); ---> var  <--- domObj=domParser.parseFromString(str,"text/xml")

[WARNING] Try to use a single 'var' statement per scope.
.removeChild(this.lastChild);} ---> var  <--- len=domObj.childNodes.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=domObj.childNodes.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- importedNode=this.importNode(domObj.childNodes[

[WARNING] Try to use a single 'var' statement per scope.
);if(value!=null){ ---> var  <--- cdata=this._doc.createTextNode("")

[WARNING] Try to use a single 'var' statement per scope.
var xmldoc=AjxXmlDoc.create(); ---> var  <--- d=xmldoc.getDoc();xmldoc.

[WARNING] Try to use a single 'var' statement per scope.
var xmldoc=AjxXmlDoc.create(); ---> var  <--- d=xmldoc.getDoc();xmldoc.

[WARNING] Try to use a single 'var' statement per scope.
);if(value!=null){ ---> var  <--- cdata=d.createTextNode("");xmldoc

[WARNING] Try to use a single 'var' statement per scope.
node){var elems={}; ---> var  <--- elemCount=0;var content=null;for

[WARNING] Try to use a single 'var' statement per scope.
={};var elemCount=0; ---> var  <--- content=null;for(var child=node

[WARNING] Try to use a single 'var' statement per scope.
0;var content=null;for( ---> var  <--- child=node.firstChild;child;child=

[WARNING] Try to use a single 'var' statement per scope.
child;child=child.nextSibling){ ---> var  <--- type=child.nodeType;if(type==

[WARNING] Try to use a single 'var' statement per scope.
nodeType;if(type==1){ ---> var  <--- name=child.nodeName;if(!elems

[WARNING] Try to use a single 'var' statement per scope.
child.nodeValue);continue;}} ---> var  <--- attrs={};var attrCount=0;

[WARNING] Try to use a single 'var' statement per scope.
;}}var attrs={}; ---> var  <--- attrCount=0;if(node.attributes)

[WARNING] Try to use a single 'var' statement per scope.
if(node.attributes){for( ---> var  <--- i=0;i<node.attributes.

[WARNING] Try to use a single 'var' statement per scope.
.attributes.length;i++){ ---> var  <--- attr=node.attributes[i];var 

[WARNING] Try to use a single 'var' statement per scope.
attr=node.attributes[i]; ---> var  <--- name=attr.nodeName;var value=this

[WARNING] The variable name has already been declared in the same scope...
=node.attributes[i];var  ---> name <--- =attr.nodeName;var value=this.

[WARNING] Try to use a single 'var' statement per scope.
];var name=attr.nodeName; ---> var  <--- value=this.quote(attr.nodeValue)

[WARNING] Try to use a single 'var' statement per scope.
attrCount==0){return"{}";} ---> var  <--- a=["{"];if(content)

[WARNING] Try to use a single 'var' statement per scope.
(AjxJsonSerializer.E_ATTRS),": { "); ---> var  <--- i=0;for(var name in attrs

[WARNING] The variable i has already been declared in the same scope...
AjxJsonSerializer.E_ATTRS),": { ");var  ---> i <--- =0;for(var name in attrs)

[WARNING] Try to use a single 'var' statement per scope.
);var i=0;for( ---> var  <--- name in attrs){if(i>0

[WARNING] The variable name has already been declared in the same scope...
;var i=0;for(var  ---> name <---  in attrs){if(i>0)

[WARNING] Try to use a single 'var' statement per scope.
a.push(", ");}} ---> var  <--- j=0;for(var name in elems

[WARNING] Try to use a single 'var' statement per scope.
}}var j=0;for( ---> var  <--- name in elems){if(j>0

[WARNING] The variable name has already been declared in the same scope...
}var j=0;for(var  ---> name <---  in elems){if(j>0)

[WARNING] Try to use a single 'var' statement per scope.
{a.push(",");} ---> var  <--- elem=elems[name];if(typeof

[WARNING] Try to use a single 'var' statement per scope.
.push("[");}for( ---> var  <--- i=0;i<elem.length;

[WARNING] The variable i has already been declared in the same scope...
push("[");}for(var  ---> i <--- =0;i<elem.length;i

[WARNING] Try to use a single 'var' statement per scope.
||[];var origImageName=imageName; ---> var  <--- color,m=imageName&&imageName.match(

[WARNING] Try to use a single 'var' statement per scope.
=m&&m[2];} ---> var  <--- className=AjxImg.getClassForImage(imageName,_disabled)

[WARNING] Try to use a single 'var' statement per scope.
.join(" ");return;} ---> var  <--- id=parentEl.firstChild&&parentEl.firstChild.

[WARNING] Try to use a single 'var' statement per scope.
.firstChild&&parentEl.firstChild.id; ---> var  <--- overlayName=className+"Overlay";var maskName=className

[WARNING] Try to use a single 'var' statement per scope.
id;var overlayName=className+"Overlay"; ---> var  <--- maskName=className+"Mask";if(color&&

[WARNING] Try to use a single 'var' statement per scope.
nodeName.toLowerCase()!="div"){ ---> var  <--- html=[],i=0;html

[WARNING] Try to use a single 'var' statement per scope.
getParams(arguments,AjxImg.GET_IMAGE_HTML_PARAMS); ---> var  <--- imageName=params.imageName;var styles=params

[WARNING] Try to use a single 'var' statement per scope.
);var imageName=params.imageName; ---> var  <--- styles=params.styles||"";var styleStr

[WARNING] Try to use a single 'var' statement per scope.
var styles=params.styles||""; ---> var  <--- styleStr=styles?" style='"+styles+"'":

[WARNING] Try to use a single 'var' statement per scope.
?" style='"+styles+"'":""; ---> var  <--- attrStr=params.attrStr?" "+params.

[WARNING] Try to use a single 'var' statement per scope.
?" "+params.attrStr:""; ---> var  <--- disabled=params.disabled;var classes=params

[WARNING] Try to use a single 'var' statement per scope.
"";var disabled=params.disabled; ---> var  <--- classes=params.classes||[];var 

[WARNING] Try to use a single 'var' statement per scope.
classes=params.classes||[]; ---> var  <--- altText=params.altText;var pre=params

[WARNING] Try to use a single 'var' statement per scope.
];var altText=params.altText; ---> var  <--- pre=params.wrapInTable?"<table style='display:inline' cellpadding=0 cellspacing=0 border=0><tr><td align=center valign=bottom>":"";

[WARNING] Try to use a single 'var' statement per scope.
=params.wrapInTable?"<table style='display:inline' cellpadding=0 cellspacing=0 border=0><tr><td align=center valign=bottom>":""; ---> var  <--- html="";var post=params.wrapInTable

[WARNING] Try to use a single 'var' statement per scope.
"<table style='display:inline' cellpadding=0 cellspacing=0 border=0><tr><td align=center valign=bottom>":"";var html=""; ---> var  <--- post=params.wrapInTable?"</td></tr></table>":"";

[WARNING] Try to use a single 'var' statement per scope.
"</td></tr></table>":"";if(imageName){ ---> var  <--- color,m=imageName.match(AjxImg.

[WARNING] Try to use a single 'var' statement per scope.
=m&&m[2];} ---> var  <--- className=AjxImg.getClassForImage(imageName,disabled)

[WARNING] Try to use a single 'var' statement per scope.
AjxImg.getClassForImage(imageName,disabled); ---> var  <--- overlayName=className+"Overlay";var maskName=className

[WARNING] Try to use a single 'var' statement per scope.
);var overlayName=className+"Overlay"; ---> var  <--- maskName=className+"Mask";if(color&&

[WARNING] Try to use a single 'var' statement per scope.
ZmOrganizer.COLOR_VALUES[ZmOrganizer.ORG_DEFAULT_COLOR]; ---> var  <--- overlay=AjxImgData[overlayName],mask=AjxImgData

[WARNING] Try to use a single 'var' statement per scope.
.isIE&&!AjxEnv.isIE9up){ ---> var  <--- size=["width:",overlay.w,"px;"

[WARNING] Try to use a single 'var' statement per scope.
,"px;"].join(""); ---> var  <--- location=["top:",mask.t,";"

[WARNING] Try to use a single 'var' statement per scope.
,";"].join(""); ---> var  <--- clip=["clip:rect(",(-1*mask

[WARNING] Try to use a single 'var' statement per scope.
,"px);"].join(""); ---> var  <--- filter="filter:mask(color="+color+");";html=

[WARNING] Try to use a single 'var' statement per scope.
if(!overlay[color]){ ---> var  <--- width=overlay.w,height=overlay.

[WARNING] Try to use a single 'var' statement per scope.
.w,height=overlay.h; ---> var  <--- canvas=document.createElement("CANVAS");canvas

[WARNING] Try to use a single 'var' statement per scope.
=width;canvas.height=height; ---> var  <--- ctx=canvas.getContext("2d");ctx

[WARNING] Try to use a single 'var' statement per scope.
height);ctx.save(); ---> var  <--- imgId=attrStr;if(!imgId){

[WARNING] Try to use a single 'var' statement per scope.
" id='"+imgId+"'";}else{ ---> var  <--- match=attrStr.match(/id=[\"\']([^\"\']+)[\"\']+/);if

[WARNING] Try to use a single 'var' statement per scope.
.TAG_ICON,"imgId = "+imgId);} ---> var  <--- maskElement=document.getElementById(maskName);var 

[WARNING] Try to use a single 'var' statement per scope.
maskElement=document.getElementById(maskName); ---> var  <--- overlayElement=document.getElementById(overlayName);if

[WARNING] Try to use a single 'var' statement per scope.
overlayElement.complete+" for "+imgId); ---> var  <--- maskImg=new Image();maskImg.onload

[WARNING] Try to use a single 'var' statement per scope.
comps=AjxColor.components(color); ---> var  <--- index=0;for(var i=1

[WARNING] Try to use a single 'var' statement per scope.
);var index=0;for( ---> var  <--- i=1;i<comps.length;

[WARNING] Try to use a single 'var' statement per scope.
{index=i;}}for( ---> var  <--- i=0;i<comps.length;

[WARNING] The variable i has already been declared in the same scope...
index=i;}}for(var  ---> i <--- =0;i<comps.length;i

[WARNING] Try to use a single 'var' statement per scope.
<comps.length;i++){ ---> var  <--- multiplier=comps[index]?(comps[

[WARNING] Try to use a single 'var' statement per scope.
s=String(value);for( ---> var  <--- i=s.length;i<width;

[WARNING] Try to use a single 'var' statement per scope.
];if(lv!=null){ ---> var  <--- a=lv.getArray();var s

[WARNING] Try to use a single 'var' statement per scope.
var a=lv.getArray(); ---> var  <--- s=lv.size();var retVal

[WARNING] Try to use a single 'var' statement per scope.
var s=lv.size(); ---> var  <--- retVal=null;var c=null;for

[WARNING] Try to use a single 'var' statement per scope.
size();var retVal=null; ---> var  <--- c=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
null;var c=null;for( ---> var  <--- i=0;i<s;i++

[WARNING] Try to use a single 'var' statement per scope.
var listeners=this._listeners;for( ---> var  <--- eventType in listeners){this.removeAll(eventType

[WARNING] Try to use a single 'var' statement per scope.
AjxTimedAction._pendingActions[id]=action; ---> var  <--- actionStr="AjxTimedAction._exec("+id+")";action.

[WARNING] Try to use a single 'var' statement per scope.
var object=includes.shift(); ---> var  <--- fullurl=typeofobject=="string"?object:object

[WARNING] Try to use a single 'var' statement per scope.
=="string"?object:object.src; ---> var  <--- orig=fullurl;if(!/^((https?|ftps?):\x2f\x2f|\x2f)/.test

[WARNING] Try to use a single 'var' statement per scope.
AjxStringUtil.urlEncode(fullurl);}} ---> var  <--- script=document.createElement("script");var 

[WARNING] The variable script has already been declared in the same scope...
.urlEncode(fullurl);}}var  ---> script <--- =document.createElement("script");var handler

[WARNING] Try to use a single 'var' statement per scope.
script=document.createElement("script"); ---> var  <--- handler=AjxCallback.simpleClosure(loadNextScript,null,

[WARNING] Try to use a single 'var' statement per scope.
;window.status="Loading script: "+orig; ---> var  <--- oscript=null;if(object.id)

[WARNING] Try to use a single 'var' statement per scope.
s.push(", segments={ ");for( ---> var  <--- i=0;i<this._segments.

[WARNING] Try to use a single 'var' statement per scope.
{var s=[];for( ---> var  <--- i=0;i<this._segments.

[WARNING] Try to use a single 'var' statement per scope.
var object=this._createParseObject(); ---> var  <--- index=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var index=0;for( ---> var  <--- i=0;i<this._segments.

[WARNING] Try to use a single 'var' statement per scope.
._segments.length;i++){ ---> var  <--- segment=this._segments[i];index

[WARNING] Try to use a single 'var' statement per scope.
;var a=[];for( ---> var  <--- i=s.length;i<length;

[WARNING] Try to use a single 'var' statement per scope.
this._parent._segments.length){ ---> var  <--- nextSegment=this._parent._segments[this.

[WARNING] Try to use a single 'var' statement per scope.
.length;i++){try{ ---> var  <--- literal=literals[i];var nindex=

[WARNING] Try to use a single 'var' statement per scope.
{var literal=literals[i]; ---> var  <--- nindex=AjxFormat.Segment._parseLiteral(literal,

[WARNING] Try to use a single 'var' statement per scope.
,index);if(f){ ---> var  <--- target=o||window;if(typeoff

[WARNING] Try to use a single 'var' statement per scope.
=fixedlen||s.length-index; ---> var  <--- head=index;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
index;var head=index;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
){index--;break;}} ---> var  <--- tail=index;if(head==tail)

[WARNING] Try to use a single 'var' statement per scope.
._parent,this,"number too short");} ---> var  <--- value=parseInt(s.substring(head,

[WARNING] Try to use a single 'var' statement per scope.
||10);if(f){ ---> var  <--- target=o||window;if(typeoff

[WARNING] Try to use a single 'var' statement per scope.
<pattern.length;i++){ ---> var  <--- c=pattern.charAt(i);if

[WARNING] Try to use a single 'var' statement per scope.
);if(c=="'"){ ---> var  <--- head=i+1;for(i++

[WARNING] Try to use a single 'var' statement per scope.
<pattern.length;i++){ ---> var  <--- c=pattern.charAt(i);if

[WARNING] The variable c has already been declared in the same scope...
pattern.length;i++){var  ---> c <--- =pattern.charAt(i);if(

[WARNING] Try to use a single 'var' statement per scope.
;}else{break;}}} ---> var  <--- tail=i;var segment=new AjxFormat.

[WARNING] Try to use a single 'var' statement per scope.
;}}}var tail=i; ---> var  <--- segment=new AjxFormat.TextSegment(this,pattern

[WARNING] Try to use a single 'var' statement per scope.
.push(segment);continue;} ---> var  <--- head=i;while(i<pattern.

[WARNING] The variable head has already been declared in the same scope...
push(segment);continue;}var  ---> head <--- =i;while(i<pattern.length

[WARNING] Try to use a single 'var' statement per scope.
){break;}i++;} ---> var  <--- tail=i;if(head!=tail)

[WARNING] The variable tail has already been declared in the same scope...
{break;}i++;}var  ---> tail <--- =i;if(head!=tail){

[WARNING] Try to use a single 'var' statement per scope.
i;if(head!=tail){ ---> var  <--- segment=new AjxFormat.TextSegment(this,pattern

[WARNING] The variable segment has already been declared in the same scope...
;if(head!=tail){var  ---> segment <--- =new AjxFormat.TextSegment(this,pattern.

[WARNING] Try to use a single 'var' statement per scope.
segment);i--;continue;} ---> var  <--- head=i;while(++i<pattern

[WARNING] The variable head has already been declared in the same scope...
);i--;continue;}var  ---> head <--- =i;while(++i<pattern.

[WARNING] Try to use a single 'var' statement per scope.
)!=c){break;}} ---> var  <--- tail=i--;var count=tail-

[WARNING] The variable tail has already been declared in the same scope...
!=c){break;}}var  ---> tail <--- =i--;var count=tail-head

[WARNING] Try to use a single 'var' statement per scope.
;}}var tail=i--; ---> var  <--- count=tail-head;var field=pattern

[WARNING] Try to use a single 'var' statement per scope.
--;var count=tail-head; ---> var  <--- field=pattern.substr(head,count)

[WARNING] Try to use a single 'var' statement per scope.
pattern.substr(head,count); ---> var  <--- segment=null;switch(c){case

[WARNING] The variable segment has already been declared in the same scope...
.substr(head,count);var  ---> segment <--- =null;switch(c){case"G"

[WARNING] Try to use a single 'var' statement per scope.
!AjxDateFormat._DATETIME_FORMATTERS[style]){ ---> var  <--- pattern=I18nMsg.formatDateTime;var params=[

[WARNING] Try to use a single 'var' statement per scope.
){var pattern=I18nMsg.formatDateTime; ---> var  <--- params=[AjxDateFormat._dateFormats[dateStyle],

[WARNING] Try to use a single 'var' statement per scope.
,AjxDateFormat._timeFormats[timeStyle]]; ---> var  <--- dateTimePattern=AjxMessageFormat.format(pattern,params)

[WARNING] Try to use a single 'var' statement per scope.
._timeParsers.length;i++){ ---> var  <--- result=AjxDateFormat._timeParsers[i].exec

[WARNING] Try to use a single 'var' statement per scope.
(timeStr);if(result){ ---> var  <--- hours=parseInt(result[1],10

[WARNING] Try to use a single 'var' statement per scope.
[1],10)||0; ---> var  <--- minutes=parseInt(result[2],10

[WARNING] Try to use a single 'var' statement per scope.
[2],10)||0; ---> var  <--- ampm=result[3];if(ampm

[WARNING] Try to use a single 'var' statement per scope.
[3];if(ampm){ ---> var  <--- pmChars=I18nMsg.parseTimePMChars;if(hours==

[WARNING] Try to use a single 'var' statement per scope.
parse.call(this,s); ---> var  <--- date=new Date(0,0,2

[WARNING] Try to use a single 'var' statement per scope.
if(object.ampm!=null){ ---> var  <--- hours=date.getHours();if(

[WARNING] Try to use a single 'var' statement per scope.
var fixedlen=this._getFixedLength(); ---> var  <--- nindex=AjxFormat.Segment._parseInt(object,

[WARNING] Try to use a single 'var' statement per scope.
=parseInt(AjxMsg.dateParsing2DigitStartYear);} ---> var  <--- syear=AjxDateFormat._2digitStartYear;var pyear=parseInt

[WARNING] Try to use a single 'var' statement per scope.
;}var syear=AjxDateFormat._2digitStartYear; ---> var  <--- pyear=parseInt(s.substr(index,

[WARNING] Try to use a single 'var' statement per scope.
(index,2),10); ---> var  <--- century=(Math.floor(syear/100

[WARNING] Try to use a single 'var' statement per scope.
?1:0))*100; ---> var  <--- year=century+pyear;object.year=

[WARNING] Try to use a single 'var' statement per scope.
MonthSegment.MONTHS[AjxDateFormat.SHORT]; ---> var  <--- nindex=AjxFormat.Segment._parseLiterals(object,

[WARNING] Try to use a single 'var' statement per scope.
,"no match");}returnnindex;} ---> var  <--- fixedlen=this._getFixedLength();returnAjxFormat

[WARNING] Try to use a single 'var' statement per scope.
var year=date.getYear(); ---> var  <--- month=date.getMonth();var day

[WARNING] Try to use a single 'var' statement per scope.
var month=date.getMonth(); ---> var  <--- day=date.getDate();var ofYear

[WARNING] Try to use a single 'var' statement per scope.
var day=date.getDate(); ---> var  <--- ofYear=/w/.test(this._s)

[WARNING] Try to use a single 'var' statement per scope.
/w/.test(this._s); ---> var  <--- date2=new Date(year,ofYear?0

[WARNING] Try to use a single 'var' statement per scope.
ofYear?0:month,1); ---> var  <--- week=0;while(true){week

[WARNING] Try to use a single 'var' statement per scope.
var month=date.getMonth(); ---> var  <--- day=date.getDate();if(

[WARNING] Try to use a single 'var' statement per scope.
._s)&&month>0){ ---> var  <--- year=date.getYear();do{

[WARNING] Try to use a single 'var' statement per scope.
=date.getYear();do{ ---> var  <--- date2=new Date(year,month,1

[WARNING] Try to use a single 'var' statement per scope.
var fixedlen=this._getFixedLength(); ---> var  <--- dayofmonth=function(day){if(day

[WARNING] Try to use a single 'var' statement per scope.
object.dayofmonth=day;}}; ---> var  <--- pname=/D/.test(this._s)

[WARNING] Try to use a single 'var' statement per scope.
.test(this._s)){ ---> var  <--- style;switch(this._s.length)

[WARNING] Try to use a single 'var' statement per scope.
WeekdaySegment.WEEKDAYS[AjxDateFormat.SHORT]; ---> var  <--- nindex=AjxFormat.Segment._parseLiterals(null,

[WARNING] Try to use a single 'var' statement per scope.
,"no match");}returnnindex;} ---> var  <--- fixedlen=this._getFixedLength();returnAjxFormat

[WARNING] Try to use a single 'var' statement per scope.
/s/.test(this._s); ---> var  <--- pname=isSeconds?"seconds":"milliseconds";var fixedlen

[WARNING] Try to use a single 'var' statement per scope.
var pname=isSeconds?"seconds":"milliseconds"; ---> var  <--- fixedlen=isSeconds?this._getFixedLength():

[WARNING] Try to use a single 'var' statement per scope.
I18nMsg.periodPm.toUpperCase()]; ---> var  <--- nindex=AjxFormat.Segment._parseLiterals(object,

[WARNING] Try to use a single 'var' statement per scope.
<pattern.length;i++){ ---> var  <--- c=pattern.charAt(i);if

[WARNING] Try to use a single 'var' statement per scope.
(i+1)=="'"){ ---> var  <--- segment=new AjxFormat.TextSegment(this,"'"

[WARNING] Try to use a single 'var' statement per scope.
segment);i++;continue;} ---> var  <--- head=i+1;for(i++

[WARNING] Try to use a single 'var' statement per scope.
<pattern.length;i++){ ---> var  <--- c=pattern.charAt(i);if

[WARNING] The variable c has already been declared in the same scope...
pattern.length;i++){var  ---> c <--- =pattern.charAt(i);if(

[WARNING] Try to use a single 'var' statement per scope.
;}else{break;}}} ---> var  <--- tail=i;var segment=new AjxFormat.

[WARNING] Try to use a single 'var' statement per scope.
;}}}var tail=i; ---> var  <--- segment=new AjxFormat.TextSegment(this,pattern

[WARNING] The variable segment has already been declared in the same scope...
}}}var tail=i;var  ---> segment <--- =new AjxFormat.TextSegment(this,pattern.

[WARNING] Try to use a single 'var' statement per scope.
.push(segment);continue;} ---> var  <--- head=i;while(i<pattern.

[WARNING] The variable head has already been declared in the same scope...
push(segment);continue;}var  ---> head <--- =i;while(i<pattern.length

[WARNING] Try to use a single 'var' statement per scope.
){break;}i++;} ---> var  <--- tail=i;if(head!=tail)

[WARNING] The variable tail has already been declared in the same scope...
{break;}i++;}var  ---> tail <--- =i;if(head!=tail){

[WARNING] Try to use a single 'var' statement per scope.
i;if(head!=tail){ ---> var  <--- segment=new AjxFormat.TextSegment(this,pattern

[WARNING] The variable segment has already been declared in the same scope...
;if(head!=tail){var  ---> segment <--- =new AjxFormat.TextSegment(this,pattern.

[WARNING] Try to use a single 'var' statement per scope.
segment);i--;continue;} ---> var  <--- head=i+1;var depth=0

[WARNING] The variable head has already been declared in the same scope...
);i--;continue;}var  ---> head <--- =i+1;var depth=0;

[WARNING] Try to use a single 'var' statement per scope.
;}var head=i+1; ---> var  <--- depth=0;while(++i<pattern

[WARNING] Try to use a single 'var' statement per scope.
(++i<pattern.length){ ---> var  <--- c=pattern.charAt(i);if

[WARNING] The variable c has already been declared in the same scope...
++i<pattern.length){var  ---> c <--- =pattern.charAt(i);if(

[WARNING] Try to use a single 'var' statement per scope.
break;}depth--;}}} ---> var  <--- tail=i;var count=tail-head

[WARNING] The variable tail has already been declared in the same scope...
;}depth--;}}}var  ---> tail <--- =i;var count=tail-head;

[WARNING] Try to use a single 'var' statement per scope.
;}}}var tail=i; ---> var  <--- count=tail-head;var field=pattern

[WARNING] Try to use a single 'var' statement per scope.
i;var count=tail-head; ---> var  <--- field=pattern.substr(head,count)

[WARNING] Try to use a single 'var' statement per scope.
pattern.substr(head,count); ---> var  <--- segment=new AjxMessageFormat.MessageSegment(this,field

[WARNING] The variable segment has already been declared in the same scope...
.substr(head,count);var  ---> segment <--- =new AjxMessageFormat.MessageSegment(this,field)

[WARNING] Try to use a single 'var' statement per scope.
{var formats=[];for( ---> var  <--- i=0;i<this._segments.

[WARNING] Try to use a single 'var' statement per scope.
._segments.length;i++){ ---> var  <--- segment=this._segments[i];if

[WARNING] Try to use a single 'var' statement per scope.
{var formats=[];for( ---> var  <--- i=0;i<this._segments.

[WARNING] Try to use a single 'var' statement per scope.
._segments.length;i++){ ---> var  <--- segment=this._segments[i];if

[WARNING] Try to use a single 'var' statement per scope.
}break;case"date":case"time": ---> var  <--- func=this._type=="date"?AjxDateFormat.

[WARNING] Try to use a single 'var' statement per scope.
delimiter){var parts=[]; ---> var  <--- head=0;var tail;var depth=

[WARNING] Try to use a single 'var' statement per scope.
=[];var head=0; ---> var  <--- tail;var depth=0;for(tail

[WARNING] Try to use a single 'var' statement per scope.
;var head=0;var tail; ---> var  <--- depth=0;for(tail=0;

[WARNING] Try to use a single 'var' statement per scope.
<s.length;tail++){ ---> var  <--- c=s.charAt(tail);if

[WARNING] Try to use a single 'var' statement per scope.
patterns=pattern.split(/;/); ---> var  <--- pattern=patterns[0];var i=

[WARNING] The variable pattern has already been declared in the same scope...
=pattern.split(/;/);var  ---> pattern <--- =patterns[0];var i=0

[WARNING] Try to use a single 'var' statement per scope.
;var pattern=patterns[0]; ---> var  <--- i=0;var results=this.__parseStatic

[WARNING] Try to use a single 'var' statement per scope.
[0];var i=0; ---> var  <--- results=this.__parseStatic(pattern,i)

[WARNING] Try to use a single 'var' statement per scope.
i);i=results.offset; ---> var  <--- hasPrefix=results.text!="";if(

[WARNING] Try to use a single 'var' statement per scope.
this,results.text));} ---> var  <--- start=i;while(i<pattern.

[WARNING] Try to use a single 'var' statement per scope.
!=-1){i++;} ---> var  <--- end=i;var numPattern=pattern.substring

[WARNING] Try to use a single 'var' statement per scope.
i++;}var end=i; ---> var  <--- numPattern=pattern.substring(start,end)

[WARNING] Try to use a single 'var' statement per scope.
pattern.substring(start,end); ---> var  <--- e=numPattern.indexOf("E");var 

[WARNING] Try to use a single 'var' statement per scope.
e=numPattern.indexOf("E"); ---> var  <--- expon=e!=-1?numPattern.substring

[WARNING] Try to use a single 'var' statement per scope.
);this._showExponent=true;} ---> var  <--- dot=numPattern.indexOf(I18nMsg.numberSeparatorDecimal!=

[WARNING] Try to use a single 'var' statement per scope.
""?I18nMsg.numberSeparatorDecimal:"."); ---> var  <--- whole=dot!=-1?numPattern.substring

[WARNING] Try to use a single 'var' statement per scope.
):numPattern;if(whole){ ---> var  <--- comma=whole.lastIndexOf(I18nMsg.numberSeparatorGrouping!=

[WARNING] Try to use a single 'var' statement per scope.
whole.replace(/[^#0]/g,""); ---> var  <--- zero=whole.indexOf("0");if

[WARNING] Try to use a single 'var' statement per scope.
this._maxIntDigits=whole.length;} ---> var  <--- fract=dot!=-1?numPattern.substring

[WARNING] Try to use a single 'var' statement per scope.
):null;if(fract){ ---> var  <--- zero=fract.lastIndexOf("0");if

[WARNING] The variable zero has already been declared in the same scope...
:null;if(fract){var  ---> zero <--- =fract.lastIndexOf("0");if(

[WARNING] Try to use a single 'var' statement per scope.
.NumberSegment(this,numPattern)); ---> var  <--- results=this.__parseStatic(pattern,i)

[WARNING] The variable results has already been declared in the same scope...
NumberSegment(this,numPattern));var  ---> results <--- =this.__parseStatic(pattern,i);

[WARNING] Try to use a single 'var' statement per scope.
if(patterns.length>1){ ---> var  <--- pattern=patterns[1];this._negativeFormatter

[WARNING] The variable pattern has already been declared in the same scope...
(patterns.length>1){var  ---> pattern <--- =patterns[1];this._negativeFormatter=

[WARNING] Try to use a single 'var' statement per scope.
(pattern,true);}else{ ---> var  <--- formatter=new AjxNumberFormat("");formatter.

[WARNING] Try to use a single 'var' statement per scope.
_segments.concat(this._segments); ---> var  <--- index=hasPrefix?1:0;var minus

[WARNING] Try to use a single 'var' statement per scope.
var index=hasPrefix?1:0; ---> var  <--- minus=new AjxFormat.TextSegment(formatter,I18nMsg

[WARNING] Try to use a single 'var' statement per scope.
while(i<s.length){ ---> var  <--- c=s.charAt(i++);

[WARNING] Try to use a single 'var' statement per scope.
}switch(c){case"'": ---> var  <--- start=i;while(i<s.

[WARNING] Try to use a single 'var' statement per scope.
(i++)!="'"){} ---> var  <--- end=i;c=end-start==

[WARNING] Try to use a single 'var' statement per scope.
match=s.split(/[\.Ee]/); ---> var  <--- whole=match.shift();if(

[WARNING] Try to use a single 'var' statement per scope.
length>this._parent._groupingOffset){ ---> var  <--- a=[];var i=whole.

[WARNING] Try to use a single 'var' statement per scope.
_groupingOffset){var a=[]; ---> var  <--- i=whole.length-this._parent.

[WARNING] Try to use a single 'var' statement per scope.
=a.join("");} ---> var  <--- fract="0";var expon;if(s

[WARNING] Try to use a single 'var' statement per scope.
"");}var fract="0"; ---> var  <--- expon;if(s.match(/\./)

[WARNING] Try to use a single 'var' statement per scope.
,I18nMsg.numberZero,true);} ---> var  <--- a=[whole];if(fract.

[WARNING] The variable a has already been declared in the same scope...
I18nMsg.numberZero,true);}var  ---> a <--- =[whole];if(fract.length

[WARNING] Try to use a single 'var' statement per scope.
if(fract.length>0){ ---> var  <--- decimal=this._parent._isCurrency?I18nMsg.

[WARNING] Try to use a single 'var' statement per scope.
=new Array(choices.length); ---> var  <--- regex=new RegExp("^([^#<\u2264]+)([#<\u2264])(.*)$");for(

[WARNING] Try to use a single 'var' statement per scope.
=new RegExp("^([^#<\u2264]+)([#<\u2264])(.*)$");for( ---> var  <--- i=0;i<choices.length;

[WARNING] Try to use a single 'var' statement per scope.
<choices.length;i++){ ---> var  <--- choice=choices[i];var results=

[WARNING] Try to use a single 'var' statement per scope.
{var choice=choices[i]; ---> var  <--- results=regex.exec(choice);var 

[WARNING] Try to use a single 'var' statement per scope.
results=regex.exec(choice); ---> var  <--- limit=results[1];var separator=

[WARNING] Try to use a single 'var' statement per scope.
;var limit=results[1]; ---> var  <--- separator=results[2];var message=

[WARNING] Try to use a single 'var' statement per scope.
;var separator=results[2]; ---> var  <--- message=results[3];if(limit

[WARNING] Try to use a single 'var' statement per scope.
this._pattern=[];for( ---> var  <--- i=0;i<this._formats.

[WARNING] The variable i has already been declared in the same scope...
._pattern=[];for(var  ---> i <--- =0;i<this._formats.length

[WARNING] Try to use a single 'var' statement per scope.
Array?number[index]:number; ---> var  <--- formatter;if(isNaN(num)||num

[WARNING] Try to use a single 'var' statement per scope.
[0];}else{for( ---> var  <--- i=0;i<this._limits.

[WARNING] Try to use a single 'var' statement per scope.
.length-1;i++){ ---> var  <--- a=this._limits[i];var 

[WARNING] Try to use a single 'var' statement per scope.
a=this._limits[i]; ---> var  <--- b=this._limits[i+1]

[WARNING] Try to use a single 'var' statement per scope.
this._limits[i+1]; ---> var  <--- aGEb=num>=a;var aLTb=this

[WARNING] Try to use a single 'var' statement per scope.
];var aGEb=num>=a; ---> var  <--- aLTb=this._lessThan[i+1]

[WARNING] Try to use a single 'var' statement per scope.
array];var list=[]; ---> var  <--- num=array.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var num=array.length;for( ---> var  <--- i=0;i<num;i++

[WARNING] Try to use a single 'var' statement per scope.
._twoSeparator:this._lastSeparator);} ---> var  <--- item=array[i];list.push

[WARNING] Try to use a single 'var' statement per scope.
._dateFormat.getSegments();for( ---> var  <--- i=0;i<segments.length;

[WARNING] Try to use a single 'var' statement per scope.
Date(y,m,d); ---> var  <--- year=y>999?date.getFullYear(

[WARNING] Try to use a single 'var' statement per scope.
AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT); ---> var  <--- len=timeFormatter._segments.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=timeFormatter._segments.length;for( ---> var  <--- j=0;j<len;j++

[WARNING] Try to use a single 'var' statement per scope.
date.getMonth()+offset); ---> var  <--- max=AjxDateUtil.daysInMonth(date.getFullYear(

[WARNING] Try to use a single 'var' statement per scope.
date.getFullYear()+offset); ---> var  <--- max=AjxDateUtil.daysInMonth(date.getFullYear(

[WARNING] The variable max has already been declared in the same scope...
.getFullYear()+offset);var  ---> max <--- =AjxDateUtil.daysInMonth(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
)).getTime()-dateMSec; ---> var  <--- durationStr=AjxDateUtil.computeDuration(deltaMSec);return

[WARNING] Try to use a single 'var' statement per scope.
)).getTime()-dateMSec; ---> var  <--- durationStr=AjxDateUtil.computeDuration(deltaMSec,false,

[WARNING] Try to use a single 'var' statement per scope.
years*AjxDateUtil.MSEC_PER_DAY*365;} ---> var  <--- months=Math.floor(duration/(AjxDateUtil

[WARNING] Try to use a single 'var' statement per scope.
*AjxDateUtil.MSEC_PER_DAY*30.42);} ---> var  <--- days=Math.floor(duration/AjxDateUtil.

[WARNING] Try to use a single 'var' statement per scope.
duration-=days*AjxDateUtil.MSEC_PER_DAY;} ---> var  <--- hours=Math.floor(duration/AjxDateUtil.

[WARNING] Try to use a single 'var' statement per scope.
duration-=hours*AjxDateUtil.MSEC_PER_HOUR;} ---> var  <--- mins=Math.floor(duration/60000)

[WARNING] Try to use a single 'var' statement per scope.
){duration-=mins*60000;} ---> var  <--- secs=Math.floor(duration/1000)

[WARNING] Try to use a single 'var' statement per scope.
Math.floor(duration/1000); ---> var  <--- formatter=brief?AjxDurationFormatConcise:AjxDurationFormatVerbose;if(

[WARNING] Try to use a single 'var' statement per scope.
(!dateValue){returnfalse;} ---> var  <--- dateValueStr=AjxDateUtil.simpleComputeDateStr(dateValue);return

[WARNING] Try to use a single 'var' statement per scope.
var dayOfWeekIndex=dt.getDay(); ---> var  <--- dayOfWeek=(dayOfWeekIndex-startOfWeek+7)%

[WARNING] Try to use a single 'var' statement per scope.
var dayOfWeekIndex=dt.getDay(); ---> var  <--- dayOfWeek=(dayOfWeekIndex-startOfWeek+7)%

[WARNING] Try to use a single 'var' statement per scope.
.getFirstDayOfWeek(targetDate,firstDayOfWeek);} ---> var  <--- startYear=startOfWeek.getFullYear(),startTime=

[WARNING] Try to use a single 'var' statement per scope.
)+6*AjxDateUtil.MSEC_PER_DAY); ---> var  <--- weekNum;if(!isISO8601WeekNum){if(

[WARNING] Try to use a single 'var' statement per scope.
){weekNum=1;}else{ ---> var  <--- weekOne=(new Date(startYear,0,

[WARNING] Try to use a single 'var' statement per scope.
12,0,0,0); ---> var  <--- weekOneDayOne=AjxDateUtil.getFirstDayOfWeek(weekOne,firstDayOfWeek)

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.getFirstDayOfWeek(weekOne,firstDayOfWeek); ---> var  <--- daysDiff=Math.round((targetDate.getTime

[WARNING] Try to use a single 'var' statement per scope.
())/AjxDateUtil.MSEC_PER_DAY); ---> var  <--- rem=daysDiff%7;var weeksDiff=(

[WARNING] Try to use a single 'var' statement per scope.
);var rem=daysDiff%7; ---> var  <--- weeksDiff=(daysDiff-rem)/7;

[WARNING] Try to use a single 'var' statement per scope.
1;}returnweekNum;}else{ ---> var  <--- newYear=new Date(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
getFullYear(),0,1); ---> var  <--- day=newYear.getDay()-1;

[WARNING] Try to use a single 'var' statement per scope.
0?day:day+7); ---> var  <--- dayOftheYear=Math.floor((date.getTime

[WARNING] Try to use a single 'var' statement per scope.
1;if(weekNum>52){ ---> var  <--- nxtYear=new Date(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
)+1,0,1); ---> var  <--- nxtDay=nxtYear.getDay()-1;

[WARNING] Try to use a single 'var' statement per scope.
);if(weekNum==0){ ---> var  <--- prevYear=new Date(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
)-1,0,1); ---> var  <--- prevDay=prevYear.getDay()-1;

[WARNING] Try to use a single 'var' statement per scope.
var mins=date.getMinutes(); ---> var  <--- hours=date.getHours();if(

[WARNING] Try to use a single 'var' statement per scope.
,useUTC){var newDate=date; ---> var  <--- formatter=null;if(useUTC){if

[WARNING] Try to use a single 'var' statement per scope.
(9,2),10); ---> var  <--- mm=parseInt(serverStr.substr(11,

[WARNING] Try to use a single 'var' statement per scope.
(11,2),10); ---> var  <--- ss=parseInt(serverStr.substr(13,

[WARNING] Try to use a single 'var' statement per scope.
AjxDateFormat("yyyy")];}for( ---> var  <--- i=0;i<formatters.length;

[WARNING] Try to use a single 'var' statement per scope.
<formatters.length;i++){ ---> var  <--- date=formatters[i].parse(s

[WARNING] Try to use a single 'var' statement per scope.
this._segments||[];for( ---> var  <--- i=0;i<segments.length;

[WARNING] Try to use a single 'var' statement per scope.
<segments.length;i++){ ---> var  <--- segment=segments[i];if(segment

[WARNING] Try to use a single 'var' statement per scope.
i));if(m){ ---> var  <--- offset=new Date().getTimezoneOffset()

[WARNING] Try to use a single 'var' statement per scope.
o.timezone=offset;}else{ ---> var  <--- hours=parseInt(m[3],10

[WARNING] Try to use a single 'var' statement per scope.
}var d=new Date(); ---> var  <--- yyyy=parseInt(serverStr.substr(0,

[WARNING] Try to use a single 'var' statement per scope.
(0,4),10); ---> var  <--- MM=parseInt(serverStr.substr(4,

[WARNING] Try to use a single 'var' statement per scope.
(4,2),10); ---> var  <--- dd=parseInt(serverStr.substr(6,

[WARNING] Try to use a single 'var' statement per scope.
,b){var i=0; ---> var  <--- result=[];result[i++]

[WARNING] Try to use a single 'var' statement per scope.
=new Date(fromThisDate);for( ---> var  <--- i=0;i<count;i++

[WARNING] Try to use a single 'var' statement per scope.
=new Date(fromThisDate);for( ---> var  <--- i=0;i<count;i++

[WARNING] Try to use a single 'var' statement per scope.
=new Date(fromThisDate);for( ---> var  <--- i=0;i<count;i++

[WARNING] Try to use a single 'var' statement per scope.
=new Date(fromThisDate);for( ---> var  <--- i=0;i<count;i++

[WARNING] Try to use a single 'var' statement per scope.
(12,2),10); ---> var  <--- date=new Date(yr,mo-1

[WARNING] Try to use a single 'var' statement per scope.
;se=date.getUTCSeconds(); ---> var  <--- a=[yr,mo,da,hr

[WARNING] Try to use a single 'var' statement per scope.
hr,mi,se];for( ---> var  <--- i=a.length;--i>0

[WARNING] Try to use a single 'var' statement per scope.
length;--i>0;){ ---> var  <--- n=a[i];if(n

[WARNING] Try to use a single 'var' statement per scope.
(12,2),10); ---> var  <--- date=new Date();date.setUTCMilliseconds

[WARNING] Try to use a single 'var' statement per scope.
;se=date.getSeconds(); ---> var  <--- a=[yr,mo,da,hr

[WARNING] Try to use a single 'var' statement per scope.
hr,mi,se];for( ---> var  <--- i=a.length;--i>0

[WARNING] Try to use a single 'var' statement per scope.
length;--i>0;){ ---> var  <--- n=a[i];if(n

[WARNING] Try to use a single 'var' statement per scope.
var newDate=new Date(fromThisDate); ---> var  <--- weekDay=fromThisDate.getDay();if(

[WARNING] Try to use a single 'var' statement per scope.
weekDay==thisWeekday){returnnewDate;} ---> var  <--- diff=(thisWeekday-weekDay);if(

[WARNING] Try to use a single 'var' statement per scope.
var newDate=new Date(fromThisDate); ---> var  <--- weekDay=fromThisDate.getDay();if(

[WARNING] Try to use a single 'var' statement per scope.
var newDate=new Date(fromThisDate); ---> var  <--- weekDay=fromThisDate.getDay();if(

[WARNING] Try to use a single 'var' statement per scope.
weekDay==thisWeekday){returnnewDate;} ---> var  <--- diff=(weekDay-thisWeekday);if(

[WARNING] Try to use a single 'var' statement per scope.
var newDate=new Date(fromThisDate); ---> var  <--- weekDay=fromThisDate.getDay();if(

[WARNING] Try to use a single 'var' statement per scope.
).replace(/\s*,\s*/g,","); ---> var  <--- a=rule.split(/\s+/g);var 

[WARNING] Try to use a single 'var' statement per scope.
a=rule.split(/\s+/g); ---> var  <--- s,m,plusminus,number,type,

[WARNING] Try to use a single 'var' statement per scope.
,amount,weekord,daynum;for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
"thursday","friday","saturday"];for( ---> var  <--- i=0;i<weekdays.length;

[WARNING] Try to use a single 'var' statement per scope.
<weekdays.length;i++){ ---> var  <--- weekday=AjxMsg["calc.dayname."+weekdays[i]

[WARNING] Try to use a single 'var' statement per scope.
].split("|");for( ---> var  <--- j=0;j<weekday.length;

[WARNING] Try to use a single 'var' statement per scope.
}}AjxDateUtil.MONTHNAME2MONTHNUM={}; ---> var  <--- months=["january","february","march","april"

[WARNING] Try to use a single 'var' statement per scope.
"october","november","december"];for( ---> var  <--- i=0;i<months.length;

[WARNING] The variable i has already been declared in the same scope...
,"november","december"];for(var  ---> i <--- =0;i<months.length;i

[WARNING] Try to use a single 'var' statement per scope.
<months.length;i++){ ---> var  <--- month=AjxMsg["calc.monthname."+months[i]

[WARNING] Try to use a single 'var' statement per scope.
].split("|");for( ---> var  <--- j=0;j<month.length;

[WARNING] The variable j has already been declared in the same scope...
.split("|");for(var  ---> j <--- =0;j<month.length;j

[WARNING] Try to use a single 'var' statement per scope.
.match(AjxDateUtil.RE_MONTHNAME)){ ---> var  <--- monthnum=AjxDateUtil.MONTHNAME2MONTHNUM[type.toLowerCase(

[WARNING] Try to use a single 'var' statement per scope.
.match(AjxDateUtil.RE_DAYNAME)){ ---> var  <--- daynum=AjxDateUtil.WEEKDAYS[type.toLowerCase(

[WARNING] Try to use a single 'var' statement per scope.
.match(AjxDateUtil.RE_WEEK)){ ---> var  <--- ord=AjxDateUtil.__calculate_week(args[0]

[WARNING] Try to use a single 'var' statement per scope.
.__calculate_week(args[0]); ---> var  <--- day=args[1]?AjxDateUtil.__calculate_day

[WARNING] Try to use a single 'var' statement per scope.
]):date.getDay(); ---> var  <--- target;if(ord!=-1){

[WARNING] Try to use a single 'var' statement per scope.
;if(ord!=-1){ ---> var  <--- firstday=new Date(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
12,0,0,0); ---> var  <--- firstdow=firstday.getDay();var delta

[WARNING] Try to use a single 'var' statement per scope.
var firstdow=firstday.getDay(); ---> var  <--- delta=firstdow-day;target=new Date

[WARNING] Try to use a single 'var' statement per scope.
+7*ord);}else{ ---> var  <--- lastday=new Date(date.getFullYear()

[WARNING] Try to use a single 'var' statement per scope.
(parseInt(value,10)); ---> var  <--- fullYear=d.getFullYear();if(

[WARNING] Try to use a single 'var' statement per scope.
);var oldItems=this._selectedItems; ---> var  <--- oldItemsCount=(oldItems==null)?0:

[WARNING] Try to use a single 'var' statement per scope.
._selectedItems=this._createItemsCollection(); ---> var  <--- itemCount=this._owner.getItemCount();

[WARNING] Try to use a single 'var' statement per scope.
=this._owner.getItemCount(); ---> var  <--- needsSort=false;var selectionChanged=false;var 

[WARNING] Try to use a single 'var' statement per scope.
getItemCount();var needsSort=false; ---> var  <--- selectionChanged=false;var selecting=false;for

[WARNING] Try to use a single 'var' statement per scope.
needsSort=false;var selectionChanged=false; ---> var  <--- selecting=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
false;var selecting=false;for( ---> var  <--- i=0;i<itemCount;++i

[WARNING] Try to use a single 'var' statement per scope.
;i<itemCount;++i){ ---> var  <--- testItem=this._owner.getItem(i)

[WARNING] Try to use a single 'var' statement per scope.
this._owner.getItem(i); ---> var  <--- oldSelectionExists=this._isItemOldSelection(testItem,oldItems)

[WARNING] Try to use a single 'var' statement per scope.
this._isItemOldSelection(testItem,oldItems); ---> var  <--- newSelectionExists=oldSelectionExists;switch(action){case

[WARNING] Try to use a single 'var' statement per scope.
){this._anchor=testItem;} ---> var  <--- atEdge=(testItem==this._anchor||testItem

[WARNING] Try to use a single 'var' statement per scope.
this._anchor||testItem==item); ---> var  <--- changed=false;if(!selecting&&atEdge

[WARNING] Try to use a single 'var' statement per scope.
ret=false;if(oldItems){ ---> var  <--- oldSelectionIndex=oldItems.binarySearch(testItem);if

[WARNING] Try to use a single 'var' statement per scope.
tags=form.getElementsByTagName("input"); ---> var  <--- inputs=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
inputs=new Array();for( ---> var  <--- i=0;i<tags.length;

[WARNING] Try to use a single 'var' statement per scope.
<tags.length;i++){ ---> var  <--- tag=tags[i];if(tag

[WARNING] Try to use a single 'var' statement per scope.
._iframeId;this._callback=callback; ---> var  <--- req=new AjxPostRequest(form);var failureAction

[WARNING] Try to use a single 'var' statement per scope.
var req=new AjxPostRequest(form); ---> var  <--- failureAction=new AjxTimedAction(this,this._onFailure

[WARNING] Try to use a single 'var' statement per scope.
_onFailure,[req.id]); ---> var  <--- timeout=optionalTimeout?optionalTimeout:5000;AjxPost.

[WARNING] Try to use a single 'var' statement per scope.
){var m=0;for( ---> var  <--- i=0;i<inputs.length;

[WARNING] Try to use a single 'var' statement per scope.
<inputs.length;i++){ ---> var  <--- fileInput=inputs[i];if(fileInput

[WARNING] Try to use a single 'var' statement per scope.
fileInput.files.length>1){ ---> var  <--- files=fileInput.files,fileStr=[]

[WARNING] Try to use a single 'var' statement per scope.
files,fileStr=[];for( ---> var  <--- j=0;j<files.length;

[WARNING] Try to use a single 'var' statement per scope.
<files.length;j++){ ---> var  <--- f=files[j];fileStr.push

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone.getOffset(toClientId,date); ---> var  <--- offset2=AjxTimezone.getOffset(fromClientId,date)

[WARNING] Try to use a single 'var' statement per scope.
else{if(onset.wkday){ ---> var  <--- date=new Date(year,onset.mon

[WARNING] Try to use a single 'var' statement per scope.
(onset.week==-1){ ---> var  <--- last=new Date(new Date(date.

[WARNING] Try to use a single 'var' statement per scope.
(onset.mon,0)); ---> var  <--- count=last.getDate();var wkday

[WARNING] Try to use a single 'var' statement per scope.
var count=last.getDate(); ---> var  <--- wkday=last.getDay()+1;

[WARNING] Try to use a single 'var' statement per scope.
=last.getDay()+1; ---> var  <--- adjust=wkday>=onset.wkday?wkday-

[WARNING] Try to use a single 'var' statement per scope.
]=count-adjust;}else{ ---> var  <--- wkday=date.getDay()+1;

[WARNING] The variable wkday has already been declared in the same scope...
=count-adjust;}else{var  ---> wkday <--- =date.getDay()+1;var 

[WARNING] Try to use a single 'var' statement per scope.
=date.getDay()+1; ---> var  <--- adjust=onset.wkday==wkday?1:

[WARNING] The variable adjust has already been declared in the same scope...
date.getDay()+1;var  ---> adjust <--- =onset.wkday==wkday?1:0

[WARNING] Try to use a single 'var' statement per scope.
){var trans=onset.trans; ---> var  <--- mon=trans[1];var monDay=

[WARNING] Try to use a single 'var' statement per scope.
;var mon=trans[1]; ---> var  <--- monDay=trans[2];var week=

[WARNING] Try to use a single 'var' statement per scope.
;var monDay=trans[2]; ---> var  <--- week=Math.floor((monDay-1

[WARNING] Try to use a single 'var' statement per scope.
(monDay-1)/7); ---> var  <--- date=new Date(trans[0],

[WARNING] Try to use a single 'var' statement per scope.
],12,0,0); ---> var  <--- count=new Date(new Date(date.

[WARNING] Try to use a single 'var' statement per scope.
,0)).getDate(); ---> var  <--- last=count-monDay<7;onset.

[WARNING] Try to use a single 'var' statement per scope.
)+1,0);for( ---> var  <--- i=0;i<7;i++

[WARNING] Try to use a single 'var' statement per scope.
1);}}else{for( ---> var  <--- i=0;i<7;i++

[WARNING] The variable i has already been declared in the same scope...
);}}else{for(var  ---> i <--- =0;i<7;i++)

[WARNING] Try to use a single 'var' statement per scope.
.week-1));}} ---> var  <--- trans=[date.getFullYear(),date

[WARNING] Try to use a single 'var' statement per scope.
var count=AjxTimezone._PREF_ZONE_DISPLAY.length; ---> var  <--- total=AjxTimezone.STANDARD_RULES.length+AjxTimezone.

[WARNING] Try to use a single 'var' statement per scope.
;AjxTimezone.getAbbreviatedZoneChoices();for( ---> var  <--- i=0;i<AjxTimezone._ABBR_ZONE_OPTIONS.

[WARNING] Try to use a single 'var' statement per scope.
var count=AjxTimezone._PREF_ZONE_OPTIONS.length; ---> var  <--- total=AjxTimezone.STANDARD_RULES.length+AjxTimezone.

[WARNING] Try to use a single 'var' statement per scope.
;AjxTimezone.getAbbreviatedZoneChoices();for( ---> var  <--- i=0;i<AjxTimezone._ABBR_ZONE_OPTIONS.

[WARNING] Try to use a single 'var' statement per scope.
shortName){returnrule.shortName;} ---> var  <--- generatedShortName=["GMT",AjxTimezone._SHORT_NAMES[clientId

[WARNING] Try to use a single 'var' statement per scope.
mediumName){returnrule.mediumName;} ---> var  <--- generatedMediumName=AjxMsg[clientId]||["(",

[WARNING] Try to use a single 'var' statement per scope.
){var serverId=rule.serverId; ---> var  <--- clientId=rule.clientId;AjxTimezone._CLIENT2SERVER[

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone._CLIENT2RULE[clientId]=rule; ---> var  <--- array=rule.daylight?AjxTimezone.DAYLIGHT_RULES:

[WARNING] Try to use a single 'var' statement per scope.
}if(!rule&&tz){ ---> var  <--- names=["standard","daylight"];var rules

[WARNING] Try to use a single 'var' statement per scope.
var names=["standard","daylight"]; ---> var  <--- rules=tz.daylight?AjxTimezone.DAYLIGHT_RULES:

[WARNING] Try to use a single 'var' statement per scope.
.DAYLIGHT_RULES:AjxTimezone.STANDARD_RULES;for( ---> var  <--- i=0;i<rules.length;

[WARNING] Try to use a single 'var' statement per scope.
){rule=rules[i]; ---> var  <--- found=true;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
];var found=true;for( ---> var  <--- j=0;j<names.length;

[WARNING] Try to use a single 'var' statement per scope.
<names.length;j++){ ---> var  <--- name=names[j];var onset=

[WARNING] Try to use a single 'var' statement per scope.
{var name=names[j]; ---> var  <--- onset=rule[name];if(!

[WARNING] Try to use a single 'var' statement per scope.
if(!onset){continue;} ---> var  <--- breakOuter=false;for(var p in tz

[WARNING] Try to use a single 'var' statement per scope.
;}var breakOuter=false;for( ---> var  <--- p in tz[name]){if(

[WARNING] Try to use a single 'var' statement per scope.
if(rule&&rule.daylight){ ---> var  <--- year=date.getFullYear();var standard

[WARNING] Try to use a single 'var' statement per scope.
var year=date.getFullYear(); ---> var  <--- standard=rule.standard,daylight=rule.

[WARNING] Try to use a single 'var' statement per scope.
.standard,daylight=rule.daylight; ---> var  <--- stdTrans=AjxTimezone.getTransition(standard,year)

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone.getTransition(standard,year); ---> var  <--- dstTrans=AjxTimezone.getTransition(daylight,year)

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone.getTransition(daylight,year); ---> var  <--- month=date.getMonth()+1,

[WARNING] Try to use a single 'var' statement per scope.
,day=date.getDate(); ---> var  <--- stdMonth=stdTrans[1],stdDay=stdTrans

[WARNING] Try to use a single 'var' statement per scope.
],stdDay=stdTrans[2]; ---> var  <--- dstMonth=dstTrans[1],dstDay=dstTrans

[WARNING] Try to use a single 'var' statement per scope.
],dstDay=dstTrans[2]; ---> var  <--- isDST=false;if(dstMonth<stdMonth)

[WARNING] Try to use a single 'var' statement per scope.
var count=AjxTimezone._ABBR_ZONE_OPTIONS.length; ---> var  <--- total=AjxTimezone.STANDARD_RULES.length+AjxTimezone.

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone._ABBR_ZONE_OPTIONS=[];for( ---> var  <--- clientId in AjxTimezone._CLIENT2SERVER){var rule=

[WARNING] Try to use a single 'var' statement per scope.
(var clientId in AjxTimezone._CLIENT2SERVER){ ---> var  <--- rule=AjxTimezone._CLIENT2RULE[clientId];var 

[WARNING] Try to use a single 'var' statement per scope.
rule=AjxTimezone._CLIENT2RULE[clientId]; ---> var  <--- serverId=rule.serverId;var option={

[WARNING] Try to use a single 'var' statement per scope.
];var serverId=rule.serverId; ---> var  <--- option={displayValue:AjxTimezone.getMediumName(clientId

[WARNING] Try to use a single 'var' statement per scope.
var count=AjxTimezone._MATCHING_ZONE_OPTIONS.length; ---> var  <--- total=AjxTimezone.STANDARD_RULES.length+AjxTimezone.

[WARNING] Try to use a single 'var' statement per scope.
AjxTimezone._MATCHING_ZONE_OPTIONS=[];for( ---> var  <--- i in AjxTimezone.MATCHING_RULES){var rule=

[WARNING] Try to use a single 'var' statement per scope.
(var i in AjxTimezone.MATCHING_RULES){ ---> var  <--- rule=AjxTimezone.MATCHING_RULES[i];var 

[WARNING] Try to use a single 'var' statement per scope.
rule=AjxTimezone.MATCHING_RULES[i]; ---> var  <--- clientId=rule.clientId;var serverId=rule

[WARNING] Try to use a single 'var' statement per scope.
];var clientId=rule.clientId; ---> var  <--- serverId=rule.serverId;if(clientId==

[WARNING] Try to use a single 'var' statement per scope.
==AjxTimezone.AUTO_DETECTED){continue;} ---> var  <--- option={displayValue:AjxTimezone.getMediumName(clientId

[WARNING] Try to use a single 'var' statement per scope.
offset;if(delta==0){ ---> var  <--- aname=arule.serverId;var bname=brule

[WARNING] Try to use a single 'var' statement per scope.
){var aname=arule.serverId; ---> var  <--- bname=brule.serverId;if(aname<

[WARNING] Try to use a single 'var' statement per scope.
.TIMEZONE_RULES.length;i++){ ---> var  <--- rule=AjxTimezoneData.TIMEZONE_RULES[i];var 

[WARNING] Try to use a single 'var' statement per scope.
rule=AjxTimezoneData.TIMEZONE_RULES[i]; ---> var  <--- array=rule.daylight?AjxTimezone.DAYLIGHT_RULES:

[WARNING] Try to use a single 'var' statement per scope.
1,0,0,0); ---> var  <--- jun1=new Date(AjxTimezoneData.TRANSITION_YEAR,5

[WARNING] Try to use a single 'var' statement per scope.
1,0,0,0); ---> var  <--- dec1offset=-dec1.getTimezoneOffset();var 

[WARNING] Try to use a single 'var' statement per scope.
dec1offset=-dec1.getTimezoneOffset(); ---> var  <--- jun1offset=-jun1.getTimezoneOffset();AjxTimezone

[WARNING] Try to use a single 'var' statement per scope.
[];AjxTimezone.TIMEZONE_CONFLICT=false; ---> var  <--- matchingRules=[];var matchingRulesMap={}

[WARNING] Try to use a single 'var' statement per scope.
=false;var matchingRules=[]; ---> var  <--- matchingRulesMap={};var offsetMatchingRules=[]

[WARNING] Try to use a single 'var' statement per scope.
[];var matchingRulesMap={}; ---> var  <--- offsetMatchingRules=[];var daylightMatchingFound=false;

[WARNING] Try to use a single 'var' statement per scope.
{};var offsetMatchingRules=[]; ---> var  <--- daylightMatchingFound=false;if(jun1offset==dec1offset)

[WARNING] Try to use a single 'var' statement per scope.
false;if(jun1offset==dec1offset){ ---> var  <--- rules=AjxTimezone.STANDARD_RULES;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var rules=AjxTimezone.STANDARD_RULES;for( ---> var  <--- i=0;i<rules.length;

[WARNING] Try to use a single 'var' statement per scope.
<rules.length;++i){ ---> var  <--- rule=rules[i];if(rule

[WARNING] Try to use a single 'var' statement per scope.
(rule);}}}else{ ---> var  <--- rules=AjxTimezone.DAYLIGHT_RULES;var dst=Math

[WARNING] The variable rules has already been declared in the same scope...
rule);}}}else{var  ---> rules <--- =AjxTimezone.DAYLIGHT_RULES;var dst=Math.

[WARNING] Try to use a single 'var' statement per scope.
else{var rules=AjxTimezone.DAYLIGHT_RULES; ---> var  <--- dst=Math.max(dec1offset,jun1offset)

[WARNING] Try to use a single 'var' statement per scope.
Math.max(dec1offset,jun1offset); ---> var  <--- std=Math.min(dec1offset,jun1offset)

[WARNING] Try to use a single 'var' statement per scope.
Math.min(dec1offset,jun1offset); ---> var  <--- now=new Date();var currentOffset=

[WARNING] Try to use a single 'var' statement per scope.
;var now=new Date(); ---> var  <--- currentOffset=-now.getTimezoneOffset();for

[WARNING] Try to use a single 'var' statement per scope.
-now.getTimezoneOffset();for( ---> var  <--- i=0;i<rules.length;

[WARNING] The variable i has already been declared in the same scope...
now.getTimezoneOffset();for(var  ---> i <--- =0;i<rules.length;++

[WARNING] Try to use a single 'var' statement per scope.
<rules.length;++i){ ---> var  <--- rule=rules[i];if(rule

[WARNING] The variable rule has already been declared in the same scope...
rules.length;++i){var  ---> rule <--- =rules[i];if(rule.

[WARNING] Try to use a single 'var' statement per scope.
rule.daylight.offset==dst){ ---> var  <--- strans=rule.standard.trans;var dtrans

[WARNING] Try to use a single 'var' statement per scope.
var strans=rule.standard.trans; ---> var  <--- dtrans=rule.daylight.trans;var s0

[WARNING] Try to use a single 'var' statement per scope.
var dtrans=rule.daylight.trans; ---> var  <--- s0=new Date(strans[0],

[WARNING] Try to use a single 'var' statement per scope.
,strans[2]-1); ---> var  <--- s1=new Date(strans[0],

[WARNING] Try to use a single 'var' statement per scope.
,strans[2]+2); ---> var  <--- d0=new Date(dtrans[0],

[WARNING] Try to use a single 'var' statement per scope.
,dtrans[2]-1); ---> var  <--- d1=new Date(dtrans[0],

[WARNING] Try to use a single 'var' statement per scope.
>0)&&timezonePreference!=null){ ---> var  <--- rules=matchingRules;for(var i in rules

[WARNING] The variable rules has already been declared in the same scope...
0)&&timezonePreference!=null){var  ---> rules <--- =matchingRules;for(var i in rules)

[WARNING] Try to use a single 'var' statement per scope.
){var rules=matchingRules;for( ---> var  <--- i in rules){if(rules[i

[WARNING] The variable i has already been declared in the same scope...
{var rules=matchingRules;for(var  ---> i <---  in rules){if(rules[i]

[WARNING] Try to use a single 'var' statement per scope.
>0)&&timezonePreference!=null){ ---> var  <--- rules=AjxTimezone.MATCHING_RULES;for(var i

[WARNING] The variable rules has already been declared in the same scope...
0)&&timezonePreference!=null){var  ---> rules <--- =AjxTimezone.MATCHING_RULES;for(var i in 

[WARNING] Try to use a single 'var' statement per scope.
var rules=AjxTimezone.MATCHING_RULES;for( ---> var  <--- i in rules){if(rules[i

[WARNING] The variable i has already been declared in the same scope...
rules=AjxTimezone.MATCHING_RULES;for(var  ---> i <---  in rules){if(rules[i]

[WARNING] Try to use a single 'var' statement per scope.
function(){var byMonth=0; ---> var  <--- byDate=1;var byHour=2;var 

[WARNING] Try to use a single 'var' statement per scope.
byMonth=0;var byDate=1; ---> var  <--- byHour=2;var byMinute=3;var 

[WARNING] Try to use a single 'var' statement per scope.
byDate=1;var byHour=2; ---> var  <--- byMinute=3;var bySecond=4;function

[WARNING] Try to use a single 'var' statement per scope.
byHour=2;var byMinute=3; ---> var  <--- bySecond=4;functionsweepRange(d1,d2

[WARNING] Try to use a single 'var' statement per scope.
var upperBound=d2.getTime(); ---> var  <--- d=new Date();d.setTime

[WARNING] Try to use a single 'var' statement per scope.
setTime(d1.getTime()); ---> var  <--- prevD=new Date();prevD.setTime

[WARNING] Try to use a single 'var' statement per scope.
setTime(d.getTime()); ---> var  <--- prevOffset=d1.getTimezoneOffset()*-1

[WARNING] Try to use a single 'var' statement per scope.
{returnrule;}}}}} ---> var  <--- offset=d.getTimezoneOffset()*-1

[WARNING] Try to use a single 'var' statement per scope.
+1,rule);}else{ ---> var  <--- trans=new Date();trans.setUTCFullYear

[WARNING] Try to use a single 'var' statement per scope.
prevD.getSeconds()+1); ---> var  <--- onset=rule[prevOffset<offset?"daylight":

[WARNING] Try to use a single 'var' statement per scope.
prevOffset=offset;}returnrule;} ---> var  <--- d1=new Date();var d2=

[WARNING] Try to use a single 'var' statement per scope.
}var d1=new Date(); ---> var  <--- d2=new Date();var year=

[WARNING] Try to use a single 'var' statement per scope.
;var d2=new Date(); ---> var  <--- year=d1.getFullYear();d1.

[WARNING] Try to use a single 'var' statement per scope.
d1.getDate()+1); ---> var  <--- rule=sweepRange(d1,d2,byMonth)

[WARNING] Try to use a single 'var' statement per scope.
offset<rule.standard.offset){ ---> var  <--- onset=rule.daylight;rule.daylight=

[WARNING] Try to use a single 'var' statement per scope.
=offset<0?"-":"+"; ---> var  <--- stdOffset=Math.abs(offset);var 

[WARNING] Try to use a single 'var' statement per scope.
stdOffset=Math.abs(offset); ---> var  <--- hours=Math.floor(stdOffset/60)

[WARNING] Try to use a single 'var' statement per scope.
Math.floor(stdOffset/60); ---> var  <--- minutes=stdOffset%60;hours=hours<

[WARNING] Try to use a single 'var' statement per scope.
.TIMEZONE_RULES.length;j++){ ---> var  <--- rule=AjxTimezoneData.TIMEZONE_RULES[j];AjxTimezone

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isIE){ ---> var  <--- msdoc=null;var vers=["MSXML2.FreeThreadedDOMDocument.5.0",

[WARNING] Try to use a single 'var' statement per scope.
.isIE){var msdoc=null; ---> var  <--- vers=["MSXML2.FreeThreadedDOMDocument.5.0","MSXML2.FreeThreadedDOMDocument.3.0"];for(

[WARNING] Try to use a single 'var' statement per scope.
=["MSXML2.FreeThreadedDOMDocument.5.0","MSXML2.FreeThreadedDOMDocument.3.0"];for( ---> var  <--- i=0;i<vers.length;

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isIE){ ---> var  <--- err=doc.parseError;if(err.

[WARNING] Try to use a single 'var' statement per scope.
,AjxException.INVALID_PARAM,"AjxXslt.createProcessor");} ---> var  <--- proc=null;var vers=["MSXML2.XSLTemplate.5.0",

[WARNING] Try to use a single 'var' statement per scope.
"AjxXslt.createProcessor");}var proc=null; ---> var  <--- vers=["MSXML2.XSLTemplate.5.0","MSXML2.XSLTemplate.3.0"];for(

[WARNING] Try to use a single 'var' statement per scope.
=["MSXML2.XSLTemplate.5.0","MSXML2.XSLTemplate.3.0"];for( ---> var  <--- i=0;i<vers.length;

[WARNING] Try to use a single 'var' statement per scope.
_doc;if(AjxEnv.isNav){ ---> var  <--- docImpl=doc.getDoc();docImpl.

[WARNING] Try to use a single 'var' statement per scope.
returnthis.transformNav(dom);} ---> var  <--- doc=AjxXmlDoc.createFromXml(ret);return

[WARNING] Try to use a single 'var' statement per scope.
,AjxException.INVALID_PARAM,"AjxXslt.transformToString");} ---> var  <--- elem=ret.documentElement;if((elem

[WARNING] Try to use a single 'var' statement per scope.
function(){var hexcase=0; ---> var  <--- b64pad="";var chrsz=8;function

[WARNING] Try to use a single 'var' statement per scope.
hexcase=0;var b64pad=""; ---> var  <--- chrsz=8;functionhex_sha1(s){

[WARNING] Try to use a single 'var' statement per scope.
;var w=Array(80); ---> var  <--- a=1732584193;var b=-271733879;

[WARNING] Try to use a single 'var' statement per scope.
(80);var a=1732584193; ---> var  <--- b=-271733879;var c=-1732584194

[WARNING] Try to use a single 'var' statement per scope.
=1732584193;var b=-271733879; ---> var  <--- c=-1732584194;var d=271733878;

[WARNING] Try to use a single 'var' statement per scope.
-271733879;var c=-1732584194; ---> var  <--- d=271733878;var e=-1009589776;

[WARNING] Try to use a single 'var' statement per scope.
=-1732584194;var d=271733878; ---> var  <--- e=-1009589776;for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var e=-1009589776;for( ---> var  <--- i=0;i<x.length;

[WARNING] Try to use a single 'var' statement per scope.
x.length;i+=16){ ---> var  <--- olda=a;var oldb=b;var 

[WARNING] Try to use a single 'var' statement per scope.
+=16){var olda=a; ---> var  <--- oldb=b;var oldc=c;var 

[WARNING] Try to use a single 'var' statement per scope.
olda=a;var oldb=b; ---> var  <--- oldc=c;var oldd=d;var 

[WARNING] Try to use a single 'var' statement per scope.
oldb=b;var oldc=c; ---> var  <--- oldd=d;var olde=e;for

[WARNING] Try to use a single 'var' statement per scope.
oldc=c;var oldd=d; ---> var  <--- olde=e;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
d;var olde=e;for( ---> var  <--- j=0;j<80;j++

[WARNING] Try to use a single 'var' statement per scope.
j-16],1);} ---> var  <--- t=safe_add(safe_add(rol(a,

[WARNING] Try to use a single 'var' statement per scope.
,key.length*chrsz);} ---> var  <--- ipad=Array(16),opad=Array

[WARNING] Try to use a single 'var' statement per scope.
opad=Array(16);for( ---> var  <--- i=0;i<16;i++

[WARNING] Try to use a single 'var' statement per scope.
=bkey[i]^1549556828;} ---> var  <--- hash=core_sha1(ipad.concat(str2binb(

[WARNING] Try to use a single 'var' statement per scope.
65535)+(y&65535); ---> var  <--- msw=(x>>16)+(y

[WARNING] Try to use a single 'var' statement per scope.
){var bin=Array(); ---> var  <--- mask=(1<<chrsz)-1;

[WARNING] Try to use a single 'var' statement per scope.
1<<chrsz)-1;for( ---> var  <--- i=0;i<str.length*

[WARNING] Try to use a single 'var' statement per scope.
(bin){var str=""; ---> var  <--- mask=(1<<chrsz)-1;

[WARNING] Try to use a single 'var' statement per scope.
1<<chrsz)-1;for( ---> var  <--- i=0;i<bin.length*

[WARNING] Try to use a single 'var' statement per scope.
var hex_tab=hexcase?"0123456789ABCDEF":"0123456789abcdef"; ---> var  <--- str="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
"0123456789abcdef";var str="";for( ---> var  <--- i=0;i<binarray.length*

[WARNING] Try to use a single 'var' statement per scope.
(binarray){var tab="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; ---> var  <--- str="";for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var str="";for( ---> var  <--- i=0;i<binarray.length*

[WARNING] Try to use a single 'var' statement per scope.
length*4;i+=3){ ---> var  <--- triplet=(((binarray[i>>2

[WARNING] Try to use a single 'var' statement per scope.
4))&255);for( ---> var  <--- j=0;j<4;j++

[WARNING] Try to use a single 'var' statement per scope.
(str){var addr,name; ---> var  <--- str=AjxStringUtil.trim(str);var 

[WARNING] The variable str has already been declared in the same scope...
str){var addr,name;var  ---> str <--- =AjxStringUtil.trim(str);var prelimOkay

[WARNING] Try to use a single 'var' statement per scope.
str=AjxStringUtil.trim(str); ---> var  <--- prelimOkay=AjxEmailAddress._prelimCheck(str);if

[WARNING] Try to use a single 'var' statement per scope.
addrPat))){returnnull;} ---> var  <--- parts=str.match(AjxEmailAddress.addrAngleQuotePat)

[WARNING] Try to use a single 'var' statement per scope.
]==='"'){returnnull;} ---> var  <--- parts1=str.match(AjxEmailAddress.addrPat)

[WARNING] Try to use a single 'var' statement per scope.
)){returnnull;}for( ---> var  <--- i=0;i<AjxEmailAddress.customInvalidEmailPats.

[WARNING] Try to use a single 'var' statement per scope.
{var good=new AjxVector(); ---> var  <--- bad=new AjxVector();var all=

[WARNING] Try to use a single 'var' statement per scope.
;var bad=new AjxVector(); ---> var  <--- all=new AjxVector();var addrList=

[WARNING] Try to use a single 'var' statement per scope.
;var all=new AjxVector(); ---> var  <--- addrList=AjxEmailAddress.split(emailStr);for

[WARNING] Try to use a single 'var' statement per scope.
AjxEmailAddress.split(emailStr);for( ---> var  <--- i=0;i<addrList.length;

[WARNING] Try to use a single 'var' statement per scope.
<addrList.length;i++){ ---> var  <--- addrStr=AjxStringUtil.trim(addrList[i]

[WARNING] Try to use a single 'var' statement per scope.
i]);if(addrStr){ ---> var  <--- addr=AjxEmailAddress.parse(addrStr);if

[WARNING] Try to use a single 'var' statement per scope.
if(!addr&&!strict){ ---> var  <--- temp=addrStr;var parts=temp.match

[WARNING] Try to use a single 'var' statement per scope.
!strict){var temp=addrStr; ---> var  <--- parts=temp.match(AjxEmailAddress.addrAnglePat)

[WARNING] Try to use a single 'var' statement per scope.
if(parts&&parts.length){ ---> var  <--- name=temp.replace(AjxEmailAddress.addrAnglePat,

[WARNING] Try to use a single 'var' statement per scope.
replace(AjxEmailAddress.addrAnglePat,""); ---> var  <--- newAddr=['"',name,'" ',parts

[WARNING] Try to use a single 'var' statement per scope.
atIndex=str.indexOf("@"); ---> var  <--- dotIndex=str.lastIndexOf(".");return

[WARNING] Try to use a single 'var' statement per scope.
str);var ignore=[]; ---> var  <--- pos=0,startPos=0;var prevCh

[WARNING] Try to use a single 'var' statement per scope.
var pos=0,startPos=0; ---> var  <--- prevCh="",startCh="";var inside

[WARNING] Try to use a single 'var' statement per scope.
var prevCh="",startCh=""; ---> var  <--- inside=false;while(pos<str.

[WARNING] Try to use a single 'var' statement per scope.
while(pos<str.length){ ---> var  <--- ch=str.charAt(pos);if

[WARNING] Try to use a single 'var' statement per scope.
inside&&pos<str.length){ ---> var  <--- ch=str.charAt(pos);if

[WARNING] The variable ch has already been declared in the same scope...
&&pos<str.length){var  ---> ch <--- =str.charAt(pos);if(

[WARNING] Try to use a single 'var' statement per scope.
]=false;}startPos=0; ---> var  <--- addrList=[];while(startPos<str

[WARNING] Try to use a single 'var' statement per scope.
while(startPos<str.length){ ---> var  <--- sub=str.substring(startPos,str.

[WARNING] Try to use a single 'var' statement per scope.
str.length);pos=0; ---> var  <--- delimPos=sub.length;while((delimPos

[WARNING] Try to use a single 'var' statement per scope.
(pos<sub.length)){ ---> var  <--- ch=sub.charAt(pos);if

[WARNING] The variable ch has already been declared in the same scope...
pos<sub.length)){var  ---> ch <--- =sub.charAt(pos);if(

[WARNING] Try to use a single 'var' statement per scope.
(AjxEmailAddress.IS_DELIM[ch]){ ---> var  <--- doIgnore=false;if(ch!="\n")

[WARNING] Try to use a single 'var' statement per scope.
if(ch!="\n"){for( ---> var  <--- i=0;i<ignore.length;

[WARNING] Try to use a single 'var' statement per scope.
<ignore.length;i++){ ---> var  <--- range=ignore[i];var absPos=

[WARNING] Try to use a single 'var' statement per scope.
{var range=ignore[i]; ---> var  <--- absPos=startPos+pos;doIgnore=(absPos

[WARNING] Try to use a single 'var' statement per scope.
}}}if(!doIgnore){ ---> var  <--- doAdd=true;var test=sub.substring

[WARNING] Try to use a single 'var' statement per scope.
!doIgnore){var doAdd=true; ---> var  <--- test=sub.substring(0,pos)

[WARNING] Try to use a single 'var' statement per scope.
.replace(/"/g,'\\"');} ---> var  <--- buffer=(shortForm||forceUnescape)?[name

[WARNING] Try to use a single 'var' statement per scope.
=a.getAddress()||""; ---> var  <--- addrB=b.getAddress()||"";

[WARNING] Try to use a single 'var' statement per scope.
addrs&&addrs.length){for( ---> var  <--- i=0;i<addrs.length;

[WARNING] Try to use a single 'var' statement per scope.
<addrs.length;i++){ ---> var  <--- addr=addrs[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
(newLocation){var self=this; ---> var  <--- addImpl=function(){if(self.

[WARNING] Try to use a single 'var' statement per scope.
initialHash;if(AjxEnv.isIE){ ---> var  <--- html=[];var i=0;

[WARNING] Try to use a single 'var' statement per scope.
isIE){var html=[]; ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
;html[i++]="</iframe>"; ---> var  <--- htmlElement=document.createElement("div");document

[WARNING] Try to use a single 'var' statement per scope.
.getElementById(AjxHistoryMgr.IFRAME_ID);} ---> var  <--- self=this;var locationHandler=function()

[WARNING] Try to use a single 'var' statement per scope.
IFRAME_ID);}var self=this; ---> var  <--- locationHandler=function(){self._checkLocation(

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(AjxHistoryMgr.IFRAME_ID); ---> var  <--- doc=historyFrame.contentWindow.document;var hash

[WARNING] Try to use a single 'var' statement per scope.
var doc=historyFrame.contentWindow.document; ---> var  <--- hash=new String(doc.location.search

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getLocation(htmlElement,tmpPt); ---> var  <--- locX=tmpPt.x;var locY=tmpPt

[WARNING] Try to use a single 'var' statement per scope.
);var locX=tmpPt.x; ---> var  <--- locY=tmpPt.y;Dwt.getSize(

[WARNING] Try to use a single 'var' statement per scope.
;}if(overflow==""){ ---> var  <--- overflowX=DwtCssStyle.getProperty(htmlElement,"overflowX")

[WARNING] Try to use a single 'var' statement per scope.
DwtCssStyle.getProperty(htmlElement,"overflowX"); ---> var  <--- overflowY=DwtCssStyle.getProperty(htmlElement,"overflowY")

[WARNING] Try to use a single 'var' statement per scope.
&&Dwt.getVisible(htmlElement)){ ---> var  <--- margins=Dwt.getMargins(htmlElement);var 

[WARNING] Try to use a single 'var' statement per scope.
margins=Dwt.getMargins(htmlElement); ---> var  <--- insets=Dwt.getInsets(htmlElement);p

[WARNING] Try to use a single 'var' statement per scope.
();div.innerHTML=html; ---> var  <--- fragment=document.createDocumentFragment();var container

[WARNING] Try to use a single 'var' statement per scope.
var fragment=document.createDocumentFragment(); ---> var  <--- container=id&&document.getElementById(id)

[WARNING] Try to use a single 'var' statement per scope.
(container);}else{for( ---> var  <--- child=div.firstChild;child;child=

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getIEFilter(htmlElement,"alpha"); ---> var  <--- m=Dwt.__MSIE_OPACITY_RE.exec(filter)

[WARNING] Try to use a single 'var' statement per scope.
htmlElement=Dwt.getElement(htmlElement); ---> var  <--- offsetParent=htmlElement;while(offsetParent&&offsetParent!=

[WARNING] Try to use a single 'var' statement per scope.
.offsetTop;if(!dontIncScrollTop){ ---> var  <--- scrollTop=AjxEnv.isOpera?offsetParent.pageYOffset:

[WARNING] Try to use a single 'var' statement per scope.
){p.y-=scrollTop;} ---> var  <--- parentNode=offsetParent.parentNode;while(parentNode!=

[WARNING] Try to use a single 'var' statement per scope.
style=DwtCssStyle.getComputedStyleObject(htmlElement); ---> var  <--- bl=parseInt(style.borderLeftWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderLeftWidth)||0; ---> var  <--- bt=parseInt(style.borderTopWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderTopWidth)||0; ---> var  <--- br=parseInt(style.borderRightWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderRightWidth)||0; ---> var  <--- bb=parseInt(style.borderBottomWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderBottomWidth)||0; ---> var  <--- pl=parseInt(style.paddingLeft)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.paddingLeft)||0; ---> var  <--- pt=parseInt(style.paddingTop)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.paddingTop)||0; ---> var  <--- pr=parseInt(style.paddingRight)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.paddingRight)||0; ---> var  <--- pb=parseInt(style.paddingBottom)||0

[WARNING] Try to use a single 'var' statement per scope.
bounds=Dwt.getBounds(htmlElement); ---> var  <--- insets=Dwt.getInsets(htmlElement);return

[WARNING] Try to use a single 'var' statement per scope.
var fragment=document.createDocumentFragment(); ---> var  <--- rows=Dwt._div.firstChild.rows;

[WARNING] Try to use a single 'var' statement per scope.
._div.firstChild.rows;for( ---> var  <--- i=rows.length-1;i>=

[WARNING] Try to use a single 'var' statement per scope.
false;if(parentEl.compareDocumentPosition){ ---> var  <--- relPos=parentEl.compareDocumentPosition(childEl);if

[WARNING] Try to use a single 'var' statement per scope.
var cells=cell.parentNode.cells; ---> var  <--- len=cells.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=cells.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
=document.selection.createRange(); ---> var  <--- isCollapsed=range.compareEndPoints("StartToEnd",range)

[WARNING] Try to use a single 'var' statement per scope.
{range.collapse(true);} ---> var  <--- b=range.getBookmark();var offset

[WARNING] Try to use a single 'var' statement per scope.
var b=range.getBookmark(); ---> var  <--- offset=input.createTextRange().getBookmark(

[WARNING] Try to use a single 'var' statement per scope.
=document.selection.createRange(); ---> var  <--- isCollapsed=range.compareEndPoints("StartToEnd",range)

[WARNING] Try to use a single 'var' statement per scope.
{range.collapse(false);} ---> var  <--- b=range.getBookmark();var offset

[WARNING] Try to use a single 'var' statement per scope.
var b=range.getBookmark(); ---> var  <--- offset=input.createTextRange().getBookmark(

[WARNING] Try to use a single 'var' statement per scope.
start=Dwt.getSelectionStart(input); ---> var  <--- end=Dwt.getSelectionEnd(input);var 

[WARNING] Try to use a single 'var' statement per scope.
end=Dwt.getSelectionEnd(input); ---> var  <--- str=input.value;var val=[

[WARNING] Try to use a single 'var' statement per scope.
);var str=input.value; ---> var  <--- val=[str.substr(0,start

[WARNING] Try to use a single 'var' statement per scope.
{var params={};for( ---> var  <--- i=0;i<args.length;

[WARNING] Try to use a single 'var' statement per scope.
[i].nodeType==1){ ---> var  <--- cnode=Dwt.byId(id,ancestor.

[WARNING] Try to use a single 'var' statement per scope.
(Dwt._favIconId);}else{ ---> var  <--- docHead=document.getElementsByTagName("head")[0

[WARNING] Try to use a single 'var' statement per scope.
.getElementsByTagName("head")[0]; ---> var  <--- links=docHead.getElementsByTagName("link");for

[WARNING] Try to use a single 'var' statement per scope.
docHead.getElementsByTagName("link");for( ---> var  <--- i=0;i<links.length;

[WARNING] Try to use a single 'var' statement per scope.
<links.length;i++){ ---> var  <--- link=links[i];if(link

[WARNING] Try to use a single 'var' statement per scope.
=iconURL;favIcon.type="image/x-icon"; ---> var  <--- parent=favIcon.parentNode;parent.removeChild(

[WARNING] Try to use a single 'var' statement per scope.
.appendChild(favIcon);}else{ ---> var  <--- newLink=document.createElement("link");newLink

[WARNING] Try to use a single 'var' statement per scope.
else{if(window.getSelection){ ---> var  <--- range=document.createRange();range.

[WARNING] The variable range has already been declared in the same scope...
{if(window.getSelection){var  ---> range <--- =document.createRange();range.selectNode

[WARNING] Try to use a single 'var' statement per scope.
);range.selectNode(el); ---> var  <--- sel=window.getSelection();sel.

[WARNING] Try to use a single 'var' statement per scope.
.isSpecified(input.selectionStart)){ ---> var  <--- start=input.selectionStart,end=input.

[WARNING] Try to use a single 'var' statement per scope.
loc2=Dwt.getLocation(el2); ---> var  <--- size1=Dwt.getSize(el1),size2

[WARNING] Try to use a single 'var' statement per scope.
size2=Dwt.getSize(el2); ---> var  <--- left1=loc1.x,left2=loc2.

[WARNING] Try to use a single 'var' statement per scope.
.y,top2=loc2.y; ---> var  <--- right1=left1+size1.x,right2=

[WARNING] Try to use a single 'var' statement per scope.
,right2=left2+size2.x; ---> var  <--- bottom1=top1+size1.y,bottom2=

[WARNING] Try to use a single 'var' statement per scope.
null,DwtPoint.tmp).y; ---> var  <--- containerTop=Dwt.toWindow(container,0,

[WARNING] Try to use a single 'var' statement per scope.
tmp).y+container.scrollTop; ---> var  <--- diff=elementTop-containerTop;if(diff<

[WARNING] Try to use a single 'var' statement per scope.
container.scrollTop+=diff;}else{ ---> var  <--- containerH=Dwt.getSize(container,DwtPoint.

[WARNING] Try to use a single 'var' statement per scope.
container,DwtPoint.tmp).y; ---> var  <--- elementH=Dwt.getSize(element,DwtPoint.

[WARNING] Try to use a single 'var' statement per scope.
(elem).attr("id"); ---> var  <--- start_id_prefix=end_id.substring(0,end_id.

[WARNING] Try to use a single 'var' statement per scope.
,end_id.indexOf("_")); ---> var  <--- end_elem=$("#"+start_id_prefix+"_launched")

[WARNING] Try to use a single 'var' statement per scope.
end_elem&&end_elem.length>0){ ---> var  <--- end_time=$("#"+start_id_prefix+"_launched")

[WARNING] Try to use a single 'var' statement per scope.
+"_loading").html();} ---> var  <--- log="Load time for "+start_id_prefix+" is "+($

[WARNING] Try to use a single 'var' statement per scope.
,direction){var gradientCss=null; ---> var  <--- gradient=this.createLinearGradientInfo(startColor,endColor,

[WARNING] Try to use a single 'var' statement per scope.
,endColor,direction){var cssDirection; ---> var  <--- gradient={};if(AjxEnv.isIE

[WARNING] Try to use a single 'var' statement per scope.
else{if(AjxEnv.isIE9){ ---> var  <--- params={x1:"0%",x2:direction

[WARNING] Try to use a single 'var' statement per scope.
startColor:startColor,endColor:endColor}; ---> var  <--- svgsrc=AjxTemplate.expand("dwt.Widgets#SVGGradient",params)

[WARNING] Try to use a single 'var' statement per scope.
.isSafari4up)||AjxEnv.isChrome2up){ ---> var  <--- startPt="left top";var endPt=(direction==

[WARNING] Try to use a single 'var' statement per scope.
.isChrome2up){var startPt="left top"; ---> var  <--- endPt=(direction=="v")?"left bottom":

[WARNING] Try to use a single 'var' statement per scope.
.filter){var found=false; ---> var  <--- filters=htmlElement.style.filter.split(

[WARNING] Try to use a single 'var' statement per scope.
filter.split(" ");for( ---> var  <--- i=0;i<filters.length;

[WARNING] Try to use a single 'var' statement per scope.
if(htmlElement.style.filter){ ---> var  <--- filters=htmlElement.style.filter.split(

[WARNING] Try to use a single 'var' statement per scope.
filter.split(" ");for( ---> var  <--- i=0;i<filters.length;

[WARNING] Try to use a single 'var' statement per scope.
){var descendant=null;for( ---> var  <--- i=0;i<htmlElement.childNodes.

[WARNING] Try to use a single 'var' statement per scope.
.childNodes.length;i++){ ---> var  <--- child=htmlElement.childNodes[i];if

[WARNING] Try to use a single 'var' statement per scope.
insets=Dwt.getInsets(node); ---> var  <--- style=DwtCssStyle.getComputedStyleObject(node);var 

[WARNING] Try to use a single 'var' statement per scope.
style=DwtCssStyle.getComputedStyleObject(node); ---> var  <--- bl=parseInt(style.borderLeftWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderLeftWidth)||0; ---> var  <--- bt=parseInt(style.borderTopWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderTopWidth)||0; ---> var  <--- br=parseInt(style.borderRightWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderRightWidth)||0; ---> var  <--- bb=parseInt(style.borderBottomWidth)||0

[WARNING] Try to use a single 'var' statement per scope.
parseInt(style.borderBottomWidth)||0; ---> var  <--- width=node.offsetWidth-node.clientWidth-

[WARNING] Try to use a single 'var' statement per scope.
-node.clientWidth-bl-br; ---> var  <--- height=node.offsetHeight-node.clientHeight-

[WARNING] Try to use a single 'var' statement per scope.
{var list=[];for( ---> var  <--- i=0;i<arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
<arguments.length;i++){ ---> var  <--- arg=arguments[i];if(arg

[WARNING] Try to use a single 'var' statement per scope.
e=DwtDraggable.__fixE(e); ---> var  <--- x=parseInt(dragEl.__hMode?dragEl.

[WARNING] Try to use a single 'var' statement per scope.
dragEl.__root.style.right); ---> var  <--- y=parseInt(dragEl.__vMode?dragEl.

[WARNING] Try to use a single 'var' statement per scope.
);var dragEl=DwtDraggable.dragEl; ---> var  <--- ey=e.clientY;var ex=e

[WARNING] Try to use a single 'var' statement per scope.
dragEl;var ey=e.clientY; ---> var  <--- ex=e.clientX;var x=parseInt

[WARNING] Try to use a single 'var' statement per scope.
clientY;var ex=e.clientX; ---> var  <--- x=parseInt(dragEl.__hMode?dragEl.

[WARNING] Try to use a single 'var' statement per scope.
dragEl.__root.style.right); ---> var  <--- y=parseInt(dragEl.__vMode?dragEl.

[WARNING] Try to use a single 'var' statement per scope.
dragEl.__root.style.bottom); ---> var  <--- nx,ny;if(!dragEl.__xMapper

[WARNING] Try to use a single 'var' statement per scope.
ctxt=control._dragTrackerContext={}; ---> var  <--- htmlElement=control.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
true,false);returnfalse;} ---> var  <--- control=mouseEv.dwtObj;if(control&&

[WARNING] Try to use a single 'var' statement per scope.
if(control&&control._dragTrackerContext){ ---> var  <--- ctxt=control._dragTrackerContext;if(ctxt.

[WARNING] Try to use a single 'var' statement per scope.
mouseEvent;mouseEv.setFromDhtmlEvent(ev); ---> var  <--- control=DwtMouseEventCapture.getTargetObj();var ctxt

[WARNING] Try to use a single 'var' statement per scope.
var control=DwtMouseEventCapture.getTargetObj(); ---> var  <--- ctxt=control._dragTrackerContext;var data=ctxt

[WARNING] Try to use a single 'var' statement per scope.
);var ctxt=control._dragTrackerContext; ---> var  <--- data=ctxt.data;data.delta.

[WARNING] Try to use a single 'var' statement per scope.
true,false);returnfalse;} ---> var  <--- ctxt=DwtMouseEventCapture.getTargetObj()._dragTrackerContext;

[WARNING] Try to use a single 'var' statement per scope.
htmlElement.ownerDocument==null){for( ---> var  <--- parent=htmlElement.parentNode;parent.parentNode!=

[WARNING] Try to use a single 'var' statement per scope.
;parent=parent.parentNode){} ---> var  <--- doc=parent;}else{var doc=

[WARNING] Try to use a single 'var' statement per scope.
}var doc=parent;}else{ ---> var  <--- doc=htmlElement.ownerDocument;}if(doc

[WARNING] The variable doc has already been declared in the same scope...
var doc=parent;}else{var  ---> doc <--- =htmlElement.ownerDocument;}if(doc.

[WARNING] Try to use a single 'var' statement per scope.
defaultView&&doc.defaultView.getComputedStyle){ ---> var  <--- cssDecl=doc.defaultView.getComputedStyle(htmlElement,

[WARNING] Try to use a single 'var' statement per scope.
cssDecl.getPropertyValue(cssPropName);}} ---> var  <--- tokens=cssPropName.split("-");var 

[WARNING] Try to use a single 'var' statement per scope.
tokens=cssPropName.split("-"); ---> var  <--- propName=tokens.shift()+AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
;parent=parent.parentNode){} ---> var  <--- doc=parent;}else{var doc=

[WARNING] Try to use a single 'var' statement per scope.
}var doc=parent;}else{ ---> var  <--- doc=htmlElement.ownerDocument;}if(doc

[WARNING] The variable doc has already been declared in the same scope...
var doc=parent;}else{var  ---> doc <--- =htmlElement.ownerDocument;}if(doc.

[WARNING] Try to use a single 'var' statement per scope.
;}if(doc.defaultView){ ---> var  <--- style=doc.defaultView.getComputedStyle(htmlElement,

[WARNING] Try to use a single 'var' statement per scope.
}switch(unit){case"rem": ---> var  <--- rootFontSize=DwtCssStyle.__getRootFontSize();returnrootFontSize

[WARNING] Try to use a single 'var' statement per scope.
,useRelatedTarget);while(htmlEl){ ---> var  <--- elValue=Dwt.getAttr(htmlEl,prop)

[WARNING] Try to use a single 'var' statement per scope.
(ev);while(htmlEl){ ---> var  <--- okay=true;for(var i in props

[WARNING] Try to use a single 'var' statement per scope.
){var okay=true;for( ---> var  <--- i in props){var val=Dwt.

[WARNING] Try to use a single 'var' statement per scope.
;for(var i in props){ ---> var  <--- val=Dwt.getAttr(htmlEl,props[

[WARNING] Try to use a single 'var' statement per scope.
var capObj=DwtMouseEventCapture.getCaptureObj(); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
;if(!this._menuCapObj){ ---> var  <--- mecParams={id:this.id,hardCapture

[WARNING] Try to use a single 'var' statement per scope.
_menuCapObj=new DwtMouseEventCapture(mecParams);} ---> var  <--- elementId=params.elementId||(params.obj

[WARNING] Try to use a single 'var' statement per scope.
params.obj.getHTMLElId()); ---> var  <--- context=this._byId[id];if

[WARNING] Try to use a single 'var' statement per scope.
){if(AjxEnv.isIE){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- events=DwtOutsideMouseEventMgr.EVENTS;shell._setEventHdlrs(

[WARNING] Try to use a single 'var' statement per scope.
shell._setEventHdlrs(events);for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
<events.length;i++){ ---> var  <--- ev=events[i];shell.addListener

[WARNING] Try to use a single 'var' statement per scope.
;}var id=params.id; ---> var  <--- context=this._byId[id];if

[WARNING] Try to use a single 'var' statement per scope.
if(!context){return;} ---> var  <--- elIds=context.elementIds;var elementId=params

[WARNING] Try to use a single 'var' statement per scope.
;}var elIds=context.elementIds; ---> var  <--- elementId=params.elementId||(params.obj

[WARNING] Try to use a single 'var' statement per scope.
){if(AjxEnv.isIE){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- events=DwtOutsideMouseEventMgr.EVENTS;shell._setEventHdlrs(

[WARNING] Try to use a single 'var' statement per scope.
_setEventHdlrs(events,true);for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
<events.length;i++){ ---> var  <--- ev=events[i];shell.removeListener

[WARNING] Try to use a single 'var' statement per scope.
!omem._numIds){return;} ---> var  <--- type="on"+ev.type;if(

[WARNING] Try to use a single 'var' statement per scope.
;}var omem=DwtOutsideMouseEventMgr.INSTANCE; ---> var  <--- targetEl=DwtUiEvent.getTarget(ev);if

[WARNING] Try to use a single 'var' statement per scope.
true);returntrue;}for( ---> var  <--- id in omem._byId){var runListener=

[WARNING] Try to use a single 'var' statement per scope.
(var id in omem._byId){ ---> var  <--- runListener=true;var context=omem._byId

[WARNING] Try to use a single 'var' statement per scope.
._byId){var runListener=true; ---> var  <--- context=omem._byId[id];var 

[WARNING] Try to use a single 'var' statement per scope.
context=omem._byId[id]; ---> var  <--- elementIds=context.elementIds;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var elementIds=context.elementIds;for( ---> var  <--- i=0;i<elementIds.length;

[WARNING] Try to use a single 'var' statement per scope.
<elementIds.length;i++){ ---> var  <--- el=document.getElementById(elementIds[i]

[WARNING] Try to use a single 'var' statement per scope.
.platform.toLowerCase();for( ---> var  <--- propName in keys){var parts=propName.

[WARNING] Try to use a single 'var' statement per scope.
;for(var propName in keys){ ---> var  <--- parts=propName.split(".");var 

[WARNING] Try to use a single 'var' statement per scope.
parts=propName.split("."); ---> var  <--- last=parts[parts.length-1]

[WARNING] Try to use a single 'var' statement per scope.
){if(last===curPlatform){ ---> var  <--- baseKey=parts.slice(0,parts.

[WARNING] Try to use a single 'var' statement per scope.
}keys[propName]=null;} ---> var  <--- propValue=AjxStringUtil.trim(keys[propName]

[WARNING] Try to use a single 'var' statement per scope.
rest;});}}for( ---> var  <--- propName in keys){var propValue=AjxStringUtil.

[WARNING] The variable propName has already been declared in the same scope...
;});}}for(var  ---> propName <---  in keys){var propValue=AjxStringUtil.trim

[WARNING] Try to use a single 'var' statement per scope.
}for(var propName in keys){ ---> var  <--- propValue=AjxStringUtil.trim(keys[propName]

[WARNING] The variable propValue has already been declared in the same scope...
for(var propName in keys){var  ---> propValue <--- =AjxStringUtil.trim(keys[propName])

[WARNING] Try to use a single 'var' statement per scope.
]!="string")){continue;} ---> var  <--- parts=propName.split(".");var 

[WARNING] The variable parts has already been declared in the same scope...
!="string")){continue;}var  ---> parts <--- =propName.split(".");var field

[WARNING] Try to use a single 'var' statement per scope.
parts=propName.split("."); ---> var  <--- field=parts[parts.length-1]

[WARNING] Try to use a single 'var' statement per scope.
parts[parts.length-1]; ---> var  <--- isMap=(parts.length==2);

[WARNING] Try to use a single 'var' statement per scope.
=(parts.length==2); ---> var  <--- action=isMap?null:parts[1]

[WARNING] Try to use a single 'var' statement per scope.
&&field!="keycode"){continue;} ---> var  <--- mapName=parts[0];if((

[WARNING] Try to use a single 'var' statement per scope.
mapName,action)){continue;} ---> var  <--- keySequences=propValue.split(/\s*;\s*/);for

[WARNING] Try to use a single 'var' statement per scope.
propValue.split(/\s*;\s*/);for( ---> var  <--- i=0;i<keySequences.length;

[WARNING] Try to use a single 'var' statement per scope.
<keySequences.length;i++){ ---> var  <--- ks=this._canonicalize(keySequences[i]

[WARNING] Try to use a single 'var' statement per scope.
if(field==DwtKeyMap.INHERIT){ ---> var  <--- parents=ks.split(/\s*,\s*/);var 

[WARNING] Try to use a single 'var' statement per scope.
parents=ks.split(/\s*,\s*/); ---> var  <--- parents1=[];for(var p=

[WARNING] Try to use a single 'var' statement per scope.
;var parents1=[];for( ---> var  <--- p=0;p<parents.length;

[WARNING] Try to use a single 'var' statement per scope.
ks.split(DwtKeyMap.SEP); ---> var  <--- result=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var result=[];for( ---> var  <--- i=0;i<keys.length;

[WARNING] Try to use a single 'var' statement per scope.
<keys.length;i++){ ---> var  <--- key=keys[i];var parts=

[WARNING] Try to use a single 'var' statement per scope.
{var key=keys[i]; ---> var  <--- parts=key.split(DwtKeyMap.JOIN)

[WARNING] Try to use a single 'var' statement per scope.
if(parts.length>2){ ---> var  <--- mods=parts.slice(0,parts.

[WARNING] Try to use a single 'var' statement per scope.
DwtKeyMap.MOD_ORDER[a]||0; ---> var  <--- sortB=DwtKeyMap.MOD_ORDER[b]||0

[WARNING] Try to use a single 'var' statement per scope.
this._fsas={};for( ---> var  <--- key in map){this._fsas[key

[WARNING] Try to use a single 'var' statement per scope.
(!mapping){returnnull;} ---> var  <--- keySeqLen=keySeq.length;var tmpFsa=mapping

[WARNING] Try to use a single 'var' statement per scope.
;}var keySeqLen=keySeq.length; ---> var  <--- tmpFsa=mapping;var key;for(var 

[WARNING] Try to use a single 'var' statement per scope.
keySeq.length;var tmpFsa=mapping; ---> var  <--- key;for(var j=0;j

[WARNING] Try to use a single 'var' statement per scope.
tmpFsa=mapping;var key;for( ---> var  <--- j=0;j<keySeqLen&&tmpFsa;

[WARNING] Try to use a single 'var' statement per scope.
(tmpFsa&&tmpFsa[key]){ ---> var  <--- binding=tmpFsa[key];if(!

[WARNING] Try to use a single 'var' statement per scope.
(!binding.subMap||forceActionCode){ ---> var  <--- inherited=this.__getInheritedActionCode(keySeq,mapping,

[WARNING] Try to use a single 'var' statement per scope.
{var keySeqs=[];for( ---> var  <--- ks in this._map[mapName]){

[WARNING] Try to use a single 'var' statement per scope.
subMap=this._fsas[mapName]; ---> var  <--- parents=subMap&&subMap.inherit;if(

[WARNING] Try to use a single 'var' statement per scope.
parents&&parents.length){for( ---> var  <--- i=0;i<parents.length;

[WARNING] Try to use a single 'var' statement per scope.
=="on")){returntrue;} ---> var  <--- tag=element.tagName.toUpperCase();

[WARNING] Try to use a single 'var' statement per scope.
.split(/\s*,\s*/);continue;} ---> var  <--- keySeq=i.split(DwtKeyMap.SEP)

[WARNING] Try to use a single 'var' statement per scope.
i.split(DwtKeyMap.SEP); ---> var  <--- keySeqLen=keySeq.length;var tmpFsa=fsa

[WARNING] Try to use a single 'var' statement per scope.
);var keySeqLen=keySeq.length; ---> var  <--- tmpFsa=fsa;for(var j=0

[WARNING] Try to use a single 'var' statement per scope.
length;var tmpFsa=fsa;for( ---> var  <--- j=0;j<keySeqLen;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<keySeqLen;j++){ ---> var  <--- key=keySeq[j];if(!

[WARNING] Try to use a single 'var' statement per scope.
.length){var actionCode=null; ---> var  <--- len=mapping.inherit.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=mapping.inherit.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
){var a=this.__tabGrpStack; ---> var  <--- len=a.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=a.length;for( ---> var  <--- i=len-1;i>=0;

[WARNING] Try to use a single 'var' statement per scope.
1);returntabGroup;}}} ---> var  <--- tabGroup=this.__tabGrpStack.pop();

[WARNING] The variable tabGroup has already been declared in the same scope...
);returntabGroup;}}}var  ---> tabGroup <--- =this.__tabGrpStack.pop();tabGroup

[WARNING] Try to use a single 'var' statement per scope.
tabGroup.removeFocusChangeListener(this.__tabGroupChangeListenerObj); ---> var  <--- currTg=null;if(this.__tabGrpStack.

[WARNING] Try to use a single 'var' statement per scope.
this.__tabGrpStack.length-1]; ---> var  <--- focusMember=currTg.getFocusMember();if(

[WARNING] Try to use a single 'var' statement per scope.
.__showFocusedItem(focusObj,"updateFocus");} ---> var  <--- control=focusObj.isDwtControl?focusObj:DwtControl.

[WARNING] Try to use a single 'var' statement per scope.
){this.__focusObj=control;} ---> var  <--- tgm=this._findTabGroupMember(ev||focusObj)

[WARNING] Try to use a single 'var' statement per scope.
obj||!ctg){return;} ---> var  <--- htmlEl=(obj.isDwtControl&&obj.getHtmlElement

[WARNING] Try to use a single 'var' statement per scope.
)){returnhtmlEl;}else{ ---> var  <--- control=DwtControl.ALL_BY_ID[htmlEl.id]

[WARNING] Try to use a single 'var' statement per scope.
)){returncontrol;}else{ ---> var  <--- tgm=control&&control.getTabGroupMember&&control.

[WARNING] Try to use a single 'var' statement per scope.
=DwtKeyboardMgr.__shell.getKeyboardMgr(); ---> var  <--- kev=DwtShell.keyEvent;kev.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
__shell._blockInput){returnfalse;} ---> var  <--- kev=DwtShell.keyEvent;kev.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
keyEvent;kev.setFromDhtmlEvent(ev); ---> var  <--- keyCode=DwtKeyEvent.getCharCode(ev);DwtKeyboardMgr

[WARNING] Try to use a single 'var' statement per scope.
.getToolTip().popdown(); ---> var  <--- ctg=kbMgr.__currTabGroup,member;if(

[WARNING] Try to use a single 'var' statement per scope.
;kbMgr.__killKeySeqTimedActionId=-1;} ---> var  <--- parts=[];if(kev.altKey

[WARNING] Try to use a single 'var' statement per scope.
parts.join(DwtKeyMap.JOIN); ---> var  <--- handled=DwtKeyboardMgr.__KEYSEQ_NOT_HANDLED;var obj=ev

[WARNING] Try to use a single 'var' statement per scope.
);var handled=DwtKeyboardMgr.__KEYSEQ_NOT_HANDLED; ---> var  <--- obj=ev.focusObj||kbMgr.__focusObj;

[WARNING] Try to use a single 'var' statement per scope.
=ev.focusObj||kbMgr.__focusObj; ---> var  <--- hasFocus=obj&&obj.hasFocus&&obj.

[WARNING] Try to use a single 'var' statement per scope.
false;}kbMgr.__kbEventStatus=handled; ---> var  <--- propagate=(handled==DwtKeyboardMgr.__KEYSEQ_NOT_HANDLED);

[WARNING] Try to use a single 'var' statement per scope.
DwtKeyboardMgr.__KEYSEQ_HANDLED:DwtKeyboardMgr.__KEYSEQ_NOT_HANDLED;} ---> var  <--- mapName=(hdlr&&hdlr.getKeyMapName)?

[WARNING] Try to use a single 'var' statement per scope.
mapName){returnDwtKeyboardMgr.__KEYSEQ_NOT_HANDLED;} ---> var  <--- actionCode=this.__keyMapMgr.getActionCode(this.

[WARNING] Try to use a single 'var' statement per scope.
handleKeyAction){returnDwtKeyboardMgr.__KEYSEQ_NOT_HANDLED;} ---> var  <--- result=hdlr.handleKeyAction(actionCode,ev)

[WARNING] Try to use a single 'var' statement per scope.
.toArray(member));for( ---> var  <--- i=0,len=members.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- member=members[i];this.__members

[WARNING] The variable member has already been declared in the same scope...
i<len;i++){var  ---> member <--- =members[i];this.__members.

[WARNING] Try to use a single 'var' statement per scope.
addMember(newMember);returnnull;} ---> var  <--- root=this.__getRootTabGroup();var newFocusMember

[WARNING] Try to use a single 'var' statement per scope.
var root=this.__getRootTabGroup(); ---> var  <--- newFocusMember;if(focusItem){newFocusMember=focusItem

[WARNING] The variable s has already been declared in the same scope...
var logger=function(s){var  ---> s <--- =AjxStringUtil.convertToHtml(s);};

[WARNING] Try to use a single 'var' statement per scope.
console&&window.console.log){ ---> var  <--- r=[];DwtTabGroup.__dump(this

[WARNING] Try to use a single 'var' statement per scope.
.__members.getArray();for( ---> var  <--- i=this.__lastIndexOfMember(member)-1

[WARNING] Try to use a single 'var' statement per scope.
i>-1;i--){ ---> var  <--- prevMember=a[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
Dwt.LOC_NOWHERE){returnfalse;} ---> var  <--- size=Dwt.getSize(member);if

[WARNING] Try to use a single 'var' statement per scope.
=this.__members.getArray(); ---> var  <--- sz=this.__members.size();

[WARNING] Try to use a single 'var' statement per scope.
.__members.size();for( ---> var  <--- i=this.__indexOfMember(member)+1

[WARNING] Try to use a single 'var' statement per scope.
;i<sz;i++){ ---> var  <--- nextMember=a[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
=this.__members.getArray(); ---> var  <--- member=null;for(var i=this

[WARNING] Try to use a single 'var' statement per scope.
);var member=null;for( ---> var  <--- i=this.__members.size()-

[WARNING] Try to use a single 'var' statement per scope.
=this.__members.size(); ---> var  <--- a=this.__members.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this.__members.getArray(); ---> var  <--- member=null;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
);var member=null;for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
);if(rootTg.__evtMgr){ ---> var  <--- evt=DwtTabGroup.__changeEvt;evt.reset(

[WARNING] Try to use a single 'var' statement per scope.
__name);myIndent+=DwtTabGroup.DUMP_INDENT; ---> var  <--- sz=tg.__members.size();

[WARNING] Try to use a single 'var' statement per scope.
=tg.__members.size(); ---> var  <--- a=tg.__members.getArray();

[WARNING] Try to use a single 'var' statement per scope.
.__members.getArray();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<sz;i++){ ---> var  <--- m=a[i];if(m

[WARNING] Try to use a single 'var' statement per scope.
,level+1);}else{ ---> var  <--- desc=m.nodeName?[m.nodeName

[WARNING] Try to use a single 'var' statement per scope.
(!tabGroup){returnnull;} ---> var  <--- m=next?tabGroup.__getNextMember(this.

[WARNING] Try to use a single 'var' statement per scope.
var len=items.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
(var i in this._types){ ---> var  <--- ctor;if(this._types[i]

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
ctor=this._types[i]= ---> eval <--- (i);}if(ctor&&(

[WARNING] Try to use a single 'var' statement per scope.
=mouseEv.docX-this._startX; ---> var  <--- deltaY=mouseEv.docY-this._startY;

[WARNING] Try to use a single 'var' statement per scope.
=mouseEv.docY-this._startY; ---> var  <--- locX=(deltaX>0)?this.

[WARNING] Try to use a single 'var' statement per scope.
?this._startX:mouseEv.docX; ---> var  <--- locY=(deltaY>0)?this.

[WARNING] Try to use a single 'var' statement per scope.
?this._startY:mouseEv.docY; ---> var  <--- box=srcControl.getDragSelectionBox();Dwt.

[WARNING] Try to use a single 'var' statement per scope.
this._hoverOverAction.args[0]; ---> var  <--- y=this._hoverOverAction.args[1]

[WARNING] Try to use a single 'var' statement per scope.
this._hoverOverAction.args[1]; ---> var  <--- event=new DwtHoverEvent(DwtEvent.HOVEROVER,this

[WARNING] Try to use a single 'var' statement per scope.
AjxTimedAction.scheduleAction(this._focusAction); ---> var  <--- scrollContainer=this.getScrollContainer(),scrollTop=

[WARNING] Try to use a single 'var' statement per scope.
DwtControlEvent.RESIZE|DwtControlEvent.MOVE); ---> var  <--- bds=Dwt.getBounds(htmlElement);this

[WARNING] Try to use a single 'var' statement per scope.
{var a=[];for( ---> var  <--- i=0;i<arguments.length;

[WARNING] Try to use a single 'var' statement per scope.
._displayState==state){return;} ---> var  <--- oldState=this._displayState;this._displayState=

[WARNING] Try to use a single 'var' statement per scope.
params=AjxTemplate.getParams(templateId); ---> var  <--- className=params&&params["class"];if

[WARNING] Try to use a single 'var' statement per scope.
__controlEvent.reset(DwtControlEvent.MOVE); ---> var  <--- loc=Dwt.getLocation(htmlElement);this

[WARNING] Try to use a single 'var' statement per scope.
__controlEvent.reset(DwtControlEvent.RESIZE); ---> var  <--- sz=Dwt.getSize(htmlElement);this

[WARNING] Try to use a single 'var' statement per scope.
):elemOrId;if(oel){ ---> var  <--- nel=this.getHtmlElement();oel.

[WARNING] Try to use a single 'var' statement per scope.
));}}else{for( ---> var  <--- attribute in style){if(style[attribute

[WARNING] Try to use a single 'var' statement per scope.
||this.getHtmlElement();for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
=this.shell.getSize(); ---> var  <--- sizeThis=this.getSize();var x

[WARNING] Try to use a single 'var' statement per scope.
var sizeThis=this.getSize(); ---> var  <--- x,y;if(!loc){

[WARNING] Try to use a single 'var' statement per scope.
if(!container){return;} ---> var  <--- dwtObjId=ev.dwtObj&&ev.dwtObj.

[WARNING] Try to use a single 'var' statement per scope.
container.clientHeight<container.scrollHeight){ ---> var  <--- containerTop=Dwt.toWindow(container,0,

[WARNING] Try to use a single 'var' statement per scope.
null,DwtPoint.tmp).y; ---> var  <--- realTop=containerTop+container.scrollTop;var scroll

[WARNING] Try to use a single 'var' statement per scope.
var realTop=containerTop+container.scrollTop; ---> var  <--- scroll=container.scrollTop;var diff=ev

[WARNING] Try to use a single 'var' statement per scope.
scrollTop;var scroll=container.scrollTop; ---> var  <--- diff=ev.docY-realTop;var threshold

[WARNING] Try to use a single 'var' statement per scope.
var diff=ev.docY-realTop; ---> var  <--- threshold=(container.clientWidth<container.scrollWidth

[WARNING] Try to use a single 'var' statement per scope.
+Dwt.SCROLLBAR_WIDTH:params.threshold; ---> var  <--- scrollAmt=(diff<=threshold)?-1

[WARNING] Try to use a single 'var' statement per scope.
0;if(scrollAmt==0){ ---> var  <--- containerH=Dwt.getSize(container,DwtPoint.

[WARNING] Try to use a single 'var' statement per scope.
container,DwtPoint.tmp).y; ---> var  <--- containerBottom=realTop+containerH;diff=containerBottom-

[WARNING] Try to use a single 'var' statement per scope.
){var container=params.container; ---> var  <--- containerTop=Dwt.toWindow(container,0,

[WARNING] Try to use a single 'var' statement per scope.
null,DwtPoint.tmp).y; ---> var  <--- containerH=Dwt.getSize(container,DwtPoint.

[WARNING] Try to use a single 'var' statement per scope.
container,DwtPoint.tmp).y; ---> var  <--- scroll=container.scrollTop;if((container

[WARNING] Try to use a single 'var' statement per scope.
if(obj.__hasToolTipContent()){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- manager=shell.getHoverMgr();manager.

[WARNING] Try to use a single 'var' statement per scope.
._stopPropagation=true;returnfalse;} ---> var  <--- obj=DwtControl.getTargetControl(ev);if

[WARNING] Try to use a single 'var' statement per scope.
.ONMOUSEOVER)&&obj._ignoreInternalOverOut){ ---> var  <--- otherObj=DwtControl.getTargetControl(ev,true)

[WARNING] Try to use a single 'var' statement per scope.
==otherObj){returnfalse;}} ---> var  <--- mouseEv=DwtShell.mouseEvent;if(obj.

[WARNING] Try to use a single 'var' statement per scope.
mouseEv)&&!mouseEv.hoverStarted){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- manager=shell.getHoverMgr();if(

[WARNING] Try to use a single 'var' statement per scope.
ev=DwtUiEvent.getEvent(ev); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
if(obj.__hasToolTipContent()){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- manager=shell.getHoverMgr();manager.

[WARNING] Try to use a single 'var' statement per scope.
?DwtMouseEventCapture.getCaptureObj():null; ---> var  <--- obj=captureObj?captureObj.targetObj:DwtControl.

[WARNING] Try to use a single 'var' statement per scope.
;obj.__dndHoverActionId=-1;} ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
setToDhtmlEvent(ev);returnfalse;} ---> var  <--- doingDnD=(obj._dragSource&&captureObj&&(

[WARNING] Try to use a single 'var' statement per scope.
docY)>=DwtControl.__DRAG_THRESHOLD)); ---> var  <--- doingDragBox=(captureObj&&obj._dragBox&&obj

[WARNING] Try to use a single 'var' statement per scope.
if(obj.__hasToolTipContent()){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- manager=shell.getHoverMgr();if(

[WARNING] Try to use a single 'var' statement per scope.
,mouseEv.docY);}else{ ---> var  <--- deltaX=obj.__lastTooltipX?Math.abs(

[WARNING] Try to use a single 'var' statement per scope.
docX-obj.__lastTooltipX):null; ---> var  <--- deltaY=obj.__lastTooltipY?Math.abs(

[WARNING] Try to use a single 'var' statement per scope.
obj._dragging!=DwtControl._DRAG_REJECTED){ ---> var  <--- targetObj=mouseEv.dwtObj;if(obj.

[WARNING] Try to use a single 'var' statement per scope.
dwtObj;if(obj._dragSource){ ---> var  <--- dropTarget=targetObj&&targetObj._dropTarget;var lastTargetObj

[WARNING] Try to use a single 'var' statement per scope.
var dropTarget=targetObj&&targetObj._dropTarget; ---> var  <--- lastTargetObj=obj.__lastTargetObj;if(targetObj)

[WARNING] Try to use a single 'var' statement per scope.
lastTargetObj||dropTarget.hasMultipleTargets()){ ---> var  <--- data=obj._dragSource._getData();

[WARNING] Try to use a single 'var' statement per scope.
else{if(obj._dragBox){ ---> var  <--- evTarget=DwtUiEvent.getTarget(ev);if

[WARNING] Try to use a single 'var' statement per scope.
?DwtMouseEventCapture.getCaptureObj():null; ---> var  <--- obj=captureObj?captureObj.targetObj:DwtControl.

[WARNING] Try to use a single 'var' statement per scope.
;obj.__dndHoverActionId=-1;} ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
_dragSource){obj.__lastTargetObj=null; ---> var  <--- targetObj=mouseEv.dwtObj;var dropTarget=targetObj

[WARNING] Try to use a single 'var' statement per scope.
null;var targetObj=mouseEv.dwtObj; ---> var  <--- dropTarget=targetObj&&targetObj._dropTarget;if(

[WARNING] Try to use a single 'var' statement per scope.
(obj,obj.__badDropEffect);} ---> var  <--- m=(obj.__dragEndY-obj.__dragStartY

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- hoverMgr=shell.getHoverMgr();hoverMgr.

[WARNING] Try to use a single 'var' statement per scope.
}else{obj._clickPending=true; ---> var  <--- ta=new AjxTimedAction(null,DwtControl.__timedClick

[WARNING] Try to use a single 'var' statement per scope.
.ONMOUSEOUT)&&obj._ignoreInternalOverOut){ ---> var  <--- otherObj=DwtControl.getTargetControl(ev,true)

[WARNING] Try to use a single 'var' statement per scope.
if(obj.__hasToolTipContent()){ ---> var  <--- shell=DwtShell.getShell(window);var 

[WARNING] Try to use a single 'var' statement per scope.
shell=DwtShell.getShell(window); ---> var  <--- manager=shell.getHoverMgr();manager.

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- prevent=obj?obj.preventContextMenu():

[WARNING] The variable obj has already been declared in the same scope...
,eventType,obj,mouseEv){var  ---> obj <--- =obj?obj:DwtControl.getTargetControl(ev

[WARNING] Try to use a single 'var' statement per scope.
.setFromDhtmlEvent(ev,obj);} ---> var  <--- tn=mouseEv.target.tagName&&mouseEv.

[WARNING] Try to use a single 'var' statement per scope.
.target.tagName.toLowerCase(); ---> var  <--- propagate=obj._propagateEvent[eventType]||(

[WARNING] Try to use a single 'var' statement per scope.
.abs(m)<=1); ---> var  <--- delta=usingX?this.__dragStartX-this.

[WARNING] Try to use a single 'var' statement per scope.
var mouseEv=event&&event.object; ---> var  <--- tooltip=this.getToolTipContent(mouseEv);var 

[WARNING] Try to use a single 'var' statement per scope.
tooltip=this.getToolTipContent(mouseEv); ---> var  <--- content,callback;if(!tooltip){

[WARNING] Try to use a single 'var' statement per scope.
content);}if(callback){ ---> var  <--- callback1=new AjxCallback(this,this.__showToolTip

[WARNING] Try to use a single 'var' statement per scope.
targetEl.tagName){returnbIsInput;} ---> var  <--- tagName=targetEl.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=targetEl.tagName.toLowerCase(); ---> var  <--- type=tagName=="input"?targetEl.type.

[WARNING] Try to use a single 'var' statement per scope.
margins=Dwt.getMargins(node); ---> var  <--- bounds=Dwt.insetBounds(bounds,Dwt.

[WARNING] The variable bounds has already been declared in the same scope...
=Dwt.getMargins(node);var  ---> bounds <--- =Dwt.insetBounds(bounds,Dwt.getInsets

[WARNING] Try to use a single 'var' statement per scope.
,0);returnbounds;}; ---> var  <--- bounds=new DwtRectangle(0,0,this

[WARNING] Try to use a single 'var' statement per scope.
var items=this.getChildren(); ---> var  <--- previousVisibleIsSeparator=true;var lastSeparator;for(var 

[WARNING] Try to use a single 'var' statement per scope.
getChildren();var previousVisibleIsSeparator=true; ---> var  <--- lastSeparator;for(var i=0;i

[WARNING] Try to use a single 'var' statement per scope.
previousVisibleIsSeparator=true;var lastSeparator;for( ---> var  <--- i=0;i<items.length;

[WARNING] Try to use a single 'var' statement per scope.
<items.length;i++){ ---> var  <--- item=items[i];var isSeparator=

[WARNING] Try to use a single 'var' statement per scope.
{var item=items[i]; ---> var  <--- isSeparator=item.isStyle&&item.isStyle(

[WARNING] Try to use a single 'var' statement per scope.
);if(childHtmlEl.parentNode){ ---> var  <--- el=childHtmlEl.parentNode.removeChild(childHtmlEl)

[WARNING] Try to use a single 'var' statement per scope.
("OBJ_")==0):false; ---> var  <--- bSelection=false;if(document.selection)

[WARNING] Try to use a single 'var' statement per scope.
;window.onresize=DwtShell._resizeHdlr; ---> var  <--- htmlElement=document.createElement("div");this

[WARNING] Try to use a single 'var' statement per scope.
);if(params.userShell){ ---> var  <--- userShellContainer=new DwtControl({parent:this,

[WARNING] Try to use a single 'var' statement per scope.
CANCEL_BUTTON,this._busyCancelButtonListener,this); ---> var  <--- txtId=Dwt.getNextId();var html

[WARNING] Try to use a single 'var' statement per scope.
var txtId=Dwt.getNextId(); ---> var  <--- html=["<table class='DialogContent'><tr>","<td><div class='WaitIcon'></div></td><td class='MsgText' id='",txtId,"'>&nbsp;</td>"

[WARNING] Try to use a single 'var' statement per scope.
"skin_layout_row")){var row=elem; ---> var  <--- table=row.parentNode;var height=Dwt

[WARNING] Try to use a single 'var' statement per scope.
elem;var table=row.parentNode; ---> var  <--- height=Dwt.getSize(table).y

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(table).y; ---> var  <--- nfillers=0;var insets=Dwt.getInsets

[WARNING] Try to use a single 'var' statement per scope.
).y;var nfillers=0; ---> var  <--- insets=Dwt.getInsets(table);height

[WARNING] Try to use a single 'var' statement per scope.
-=insets.top+insets.bottom; ---> var  <--- margins=Dwt.getMargins(row);height

[WARNING] Try to use a single 'var' statement per scope.
){nfillers+=1;}else{ ---> var  <--- otherheight=Dwt.getSize(otherrow).y

[WARNING] Try to use a single 'var' statement per scope.
margins=Dwt.getMargins(cell); ---> var  <--- height=Dwt.getSize(cell).y

[WARNING] Try to use a single 'var' statement per scope.
.hasClass(elem,"skin_layout_cell")){ ---> var  <--- cell=elem;var row=cell.parentNode

[WARNING] Try to use a single 'var' statement per scope.
"skin_layout_cell")){var cell=elem; ---> var  <--- row=cell.parentNode;var table=row

[WARNING] The variable row has already been declared in the same scope...
)){var cell=elem;var  ---> row <--- =cell.parentNode;var table=row.

[WARNING] Try to use a single 'var' statement per scope.
elem;var row=cell.parentNode; ---> var  <--- table=row.parentNode;var width=Dwt

[WARNING] The variable table has already been declared in the same scope...
;var row=cell.parentNode;var  ---> table <--- =row.parentNode;var width=Dwt.

[WARNING] Try to use a single 'var' statement per scope.
parentNode;var table=row.parentNode; ---> var  <--- width=Dwt.getSize(table).x

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(table).x; ---> var  <--- nfillers=0;var insets=Dwt.getInsets

[WARNING] The variable nfillers has already been declared in the same scope...
.getSize(table).x;var  ---> nfillers <--- =0;var insets=Dwt.getInsets(

[WARNING] Try to use a single 'var' statement per scope.
).x;var nfillers=0; ---> var  <--- insets=Dwt.getInsets(table);width

[WARNING] The variable insets has already been declared in the same scope...
.x;var nfillers=0;var  ---> insets <--- =Dwt.getInsets(table);width-=

[WARNING] Try to use a single 'var' statement per scope.
-=insets.left+insets.right; ---> var  <--- margins=Dwt.getMargins(row);width

[WARNING] The variable margins has already been declared in the same scope...
insets.left+insets.right;var  ---> margins <--- =Dwt.getMargins(row);width-=

[WARNING] Try to use a single 'var' statement per scope.
?ev.target:ev.srcElement; ---> var  <--- evt=DwtControl.fromElementId(window._dwtShellId)

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.CONTROL)){ ---> var  <--- evt=DwtShell.controlEvent;evt.reset(

[WARNING] Try to use a single 'var' statement per scope.
){var focusEvent=DwtShell.focusEvent; ---> var  <--- self=DwtShell.getShell(window);focusEvent

[WARNING] Try to use a single 'var' statement per scope.
){var focusEvent=DwtShell.focusEvent; ---> var  <--- self=DwtShell.getShell(window);focusEvent

[WARNING] Try to use a single 'var' statement per scope.
getElementById(data.id+"_input"); ---> var  <--- inputParams={parent:this,validationStyle:DwtInputField

[WARNING] Try to use a single 'var' statement per scope.
ERROR_ICON_RIGHT,validator:DwtColorPicker.__isValidInputValue}; ---> var  <--- input=this._colorInput=new DwtInputField(inputParams

[WARNING] Try to use a single 'var' statement per scope.
);input.replaceElement(inputEl); ---> var  <--- updateCallback=new AjxCallback(this,this._updatePreview

[WARNING] Try to use a single 'var' statement per scope.
);input.setValidationCallback(updateCallback); ---> var  <--- error=this._error=new DwtLabel({

[WARNING] Try to use a single 'var' statement per scope.
DwtLabel({parent:this}); ---> var  <--- errorEl=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
getElementById(data.id+"_preview"); ---> var  <--- buttonEl=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
getElementById(data.id+"_button"); ---> var  <--- button=new DwtButton({parent:this}

[WARNING] Try to use a single 'var' statement per scope.
this,this._handleSetColor));} ---> var  <--- buttonEl=document.getElementById(data.id+

[WARNING] The variable buttonEl has already been declared in the same scope...
,this._handleSetColor));}var  ---> buttonEl <--- =document.getElementById(data.id+"_default"

[WARNING] Try to use a single 'var' statement per scope.
){DwtColorPicker.__defineClasses();} ---> var  <--- button=this._defaultColorButton=new DwtColorPicker.Button

[WARNING] The variable button has already been declared in the same scope...
{DwtColorPicker.__defineClasses();}var  ---> button <--- =this._defaultColorButton=new DwtColorPicker.Button(

[WARNING] Try to use a single 'var' statement per scope.
_handleColorSelect,[0]));} ---> var  <--- colorsEl=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
getElementById(data.id+"_colors"); ---> var  <--- mouseOver=AjxEnv.isIE?DwtEvent.ONMOUSEENTER:

[WARNING] Try to use a single 'var' statement per scope.
?DwtEvent.ONMOUSEENTER:DwtEvent.ONMOUSEOVER; ---> var  <--- mouseOut=AjxEnv.isIE?DwtEvent.ONMOUSELEAVE:

[WARNING] Try to use a single 'var' statement per scope.
event=DwtUiEvent.getEvent(htmlEvent); ---> var  <--- target=DwtUiEvent.getTarget(event);if

[WARNING] Try to use a single 'var' statement per scope.
event=DwtUiEvent.getEvent(htmlEvent); ---> var  <--- target=DwtUiEvent.getTarget(event);this

[WARNING] Try to use a single 'var' statement per scope.
event=DwtUiEvent.getEvent(htmlEvent); ---> var  <--- target=DwtUiEvent.getTarget(event);if

[WARNING] Try to use a single 'var' statement per scope.
._mouseDownEl!=target){return;} ---> var  <--- cssColor=DwtCssStyle.getProperty(target,"background-color")

[WARNING] Try to use a single 'var' statement per scope.
);if(m){for( ---> var  <--- i=1;i<=3;i++

[WARNING] Try to use a single 'var' statement per scope.
thisZ);this._poppedUp=true; ---> var  <--- kbMgr=this._shell.getKeyboardMgr();

[WARNING] Try to use a single 'var' statement per scope.
){this.dispose();} ---> var  <--- kbMgr=this._shell.getKeyboardMgr();

[WARNING] Try to use a single 'var' statement per scope.
_getInputFields();if(inputFields){ ---> var  <--- len=inputFields.length;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var len=inputFields.length;for( ---> var  <--- i=0;i<len;i++

[WARNING] Try to use a single 'var' statement per scope.
function(){var dialog=null; ---> var  <--- shellObj=DwtShell.getShell(window);if

[WARNING] Try to use a single 'var' statement per scope.
(window);if(shellObj){ ---> var  <--- len=shellObj._veilOverlay.activeDialogs.length;

[WARNING] Try to use a single 'var' statement per scope.
(dragHandleId);if(dragHandle){ ---> var  <--- control=DwtControl.fromElementId(window._dwtShellId)

[WARNING] Try to use a single 'var' statement per scope.
._dwtShellId);if(control){ ---> var  <--- p=Dwt.getSize(control.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
getSize(control.getHtmlElement()); ---> var  <--- dragObj=document.getElementById(this._htmlElId)

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._htmlElId); ---> var  <--- size=this.getSize();var dragEndCb

[WARNING] Try to use a single 'var' statement per scope.
var size=this.getSize(); ---> var  <--- dragEndCb=new AjxCallback(this,this._dragEnd

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this._dragEnd); ---> var  <--- dragCb=new AjxCallback(this,this._duringDrag

[WARNING] Try to use a single 'var' statement per scope.
AjxCallback(this,this._duringDrag); ---> var  <--- dragStartCb=new AjxCallback(this,this._dragStart

[WARNING] Try to use a single 'var' statement per scope.
=this._shell._veilOverlay.dialogZ; ---> var  <--- currentDialogZ=null;var thisZ,veilZ;if

[WARNING] Try to use a single 'var' statement per scope.
_veilOverlay.dialogZ;var currentDialogZ=null; ---> var  <--- thisZ,veilZ;if(dialogZ.length)

[WARNING] Try to use a single 'var' statement per scope.
.veilZ;veilZ.pop(); ---> var  <--- newVeilZ=veilZ[veilZ.length-1]

[WARNING] Try to use a single 'var' statement per scope.
._dwtShellId);if(control){ ---> var  <--- p=Dwt.getSize(control.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
"";var standardButtons=params.standardButtons; ---> var  <--- extraButtons=params.extraButtons;if(!standardButtons

[WARNING] Try to use a single 'var' statement per scope.
}}this._buttonList=[]; ---> var  <--- buttonOrder={};buttonOrder[DwtDialog.ALIGN_LEFT

[WARNING] Try to use a single 'var' statement per scope.
_enterButtonId=standardButtons[0];for( ---> var  <--- i=0;i<standardButtons.length;

[WARNING] Try to use a single 'var' statement per scope.
<standardButtons.length;i++){ ---> var  <--- buttonId=standardButtons[i];this._buttonList

[WARNING] Try to use a single 'var' statement per scope.
this._buttonList.push(buttonId); ---> var  <--- align=DwtDialog.ALIGN[buttonId];if

[WARNING] Try to use a single 'var' statement per scope.
=extraButtons[0];}for( ---> var  <--- i=0;i<extraButtons.length;

[WARNING] The variable i has already been declared in the same scope...
extraButtons[0];}for(var  ---> i <--- =0;i<extraButtons.length;i

[WARNING] Try to use a single 'var' statement per scope.
<extraButtons.length;i++){ ---> var  <--- buttonId=extraButtons[i].id;this

[WARNING] The variable buttonId has already been declared in the same scope...
extraButtons.length;i++){var  ---> buttonId <--- =extraButtons[i].id;this.

[WARNING] Try to use a single 'var' statement per scope.
this._buttonList.push(buttonId); ---> var  <--- align=extraButtons[i].align;if

[WARNING] The variable align has already been declared in the same scope...
._buttonList.push(buttonId);var  ---> align <--- =extraButtons[i].align;if(

[WARNING] Try to use a single 'var' statement per scope.
this._buttonElementId={};for( ---> var  <--- i=0;i<this._buttonList.

[WARNING] The variable i has already been declared in the same scope...
._buttonElementId={};for(var  ---> i <--- =0;i<this._buttonList.length

[WARNING] Try to use a single 'var' statement per scope.
._buttonList.length;i++){ ---> var  <--- buttonId=this._buttonList[i];this

[WARNING] The variable buttonId has already been declared in the same scope...
_buttonList.length;i++){var  ---> buttonId <--- =this._buttonList[i];this.

[WARNING] Try to use a single 'var' statement per scope.
this._button={};for( ---> var  <--- i=0;i<this._buttonList.

[WARNING] The variable i has already been declared in the same scope...
._button={};for(var  ---> i <--- =0;i<this._buttonList.length

[WARNING] Try to use a single 'var' statement per scope.
._buttonList.length;i++){ ---> var  <--- buttonId=this._buttonList[i];var 

[WARNING] The variable buttonId has already been declared in the same scope...
_buttonList.length;i++){var  ---> buttonId <--- =this._buttonList[i];var b

[WARNING] Try to use a single 'var' statement per scope.
buttonId=this._buttonList[i]; ---> var  <--- b=this._button[buttonId]=new 

[WARNING] Try to use a single 'var' statement per scope.
(this,this._buttonListener)); ---> var  <--- el=document.getElementById(this._buttonElementId[

[WARNING] Try to use a single 'var' statement per scope.
b.getHtmlElement());}} ---> var  <--- list=buttonOrder[DwtDialog.ALIGN_LEFT].concat

[WARNING] Try to use a single 'var' statement per scope.
[DwtDialog.ALIGN_RIGHT]);for( ---> var  <--- i=0;i<list.length;

[WARNING] The variable i has already been declared in the same scope...
DwtDialog.ALIGN_RIGHT]);for(var  ---> i <--- =0;i<list.length;i

[WARNING] Try to use a single 'var' statement per scope.
<list.length;i++){ ---> var  <--- button=this._button[list[i]

[WARNING] Try to use a single 'var' statement per scope.
);if(this._buttonsEl){ ---> var  <--- html=[];var idx=0;

[WARNING] Try to use a single 'var' statement per scope.
_buttonsEl){var html=[]; ---> var  <--- idx=0;this._addButtonsHtml(html,

[WARNING] Try to use a single 'var' statement per scope.
{var leftButtons=new Array(); ---> var  <--- rightButtons=new Array();var centerButtons=

[WARNING] Try to use a single 'var' statement per scope.
;var rightButtons=new Array(); ---> var  <--- centerButtons=new Array();for(var 

[WARNING] Try to use a single 'var' statement per scope.
centerButtons=new Array();for( ---> var  <--- i=0;i<this._buttonList.

[WARNING] Try to use a single 'var' statement per scope.
._buttonList.length;i++){ ---> var  <--- buttonId=this._buttonList[i];switch

[WARNING] Try to use a single 'var' statement per scope.
),["left"]);for( ---> var  <--- i=0;i<leftButtons.length;

[WARNING] The variable i has already been declared in the same scope...
,["left"]);for(var  ---> i <--- =0;i<leftButtons.length;i

[WARNING] Try to use a single 'var' statement per scope.
<leftButtons.length;i++){ ---> var  <--- buttonId=leftButtons[i];var cellTemplate=

[WARNING] The variable buttonId has already been declared in the same scope...
leftButtons.length;i++){var  ---> buttonId <--- =leftButtons[i];var cellTemplate=this

[WARNING] Try to use a single 'var' statement per scope.
{var buttonId=leftButtons[i]; ---> var  <--- cellTemplate=this._buttonDesc[buttonId].cellTemplate

[WARNING] Try to use a single 'var' statement per scope.
),["center"]);for( ---> var  <--- i=0;i<centerButtons.length;

[WARNING] The variable i has already been declared in the same scope...
,["center"]);for(var  ---> i <--- =0;i<centerButtons.length;i

[WARNING] Try to use a single 'var' statement per scope.
<centerButtons.length;i++){ ---> var  <--- buttonId=centerButtons[i];var cellTemplate=

[WARNING] The variable buttonId has already been declared in the same scope...
centerButtons.length;i++){var  ---> buttonId <--- =centerButtons[i];var cellTemplate=this

[WARNING] Try to use a single 'var' statement per scope.
{var buttonId=centerButtons[i]; ---> var  <--- cellTemplate=this._buttonDesc[buttonId].cellTemplate

[WARNING] The variable cellTemplate has already been declared in the same scope...
var buttonId=centerButtons[i];var  ---> cellTemplate <--- =this._buttonDesc[buttonId].cellTemplate?

[WARNING] Try to use a single 'var' statement per scope.
),["right"]);for( ---> var  <--- i=0;i<rightButtons.length;

[WARNING] The variable i has already been declared in the same scope...
,["right"]);for(var  ---> i <--- =0;i<rightButtons.length;i

[WARNING] Try to use a single 'var' statement per scope.
<rightButtons.length;i++){ ---> var  <--- buttonId=rightButtons[i];var cellTemplate=

[WARNING] The variable buttonId has already been declared in the same scope...
rightButtons.length;i++){var  ---> buttonId <--- =rightButtons[i];var cellTemplate=this

[WARNING] Try to use a single 'var' statement per scope.
{var buttonId=rightButtons[i]; ---> var  <--- cellTemplate=this._buttonDesc[buttonId].cellTemplate

[WARNING] The variable cellTemplate has already been declared in the same scope...
var buttonId=rightButtons[i];var  ---> cellTemplate <--- =this._buttonDesc[buttonId].cellTemplate?

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- buttonId=(obj&&obj.buttonId)||

[WARNING] Try to use a single 'var' statement per scope.
buttonDesc=this._buttonDesc[id]; ---> var  <--- callback=buttonDesc&&buttonDesc.callback;if(

[WARNING] Try to use a single 'var' statement per scope.
.ALL_BUTTONS.length;i++){ ---> var  <--- id=DwtDialog.ALL_BUTTONS[i];if

[WARNING] Try to use a single 'var' statement per scope.
_enabled,null,this.__altText); ---> var  <--- elementClass=(this._style&DwtLabel.IMAGE_RIGHT

[WARNING] Try to use a single 'var' statement per scope.
getShell(window).getKeyboardMgr(); ---> var  <--- handleFocus=AjxCallback.simpleClosure(keyboardMgr.grabFocus,

[WARNING] Try to use a single 'var' statement per scope.
event=DwtUiEvent.getEvent(evt); ---> var  <--- target=DwtUiEvent.getTarget(event);var 

[WARNING] Try to use a single 'var' statement per scope.
target=DwtUiEvent.getTarget(event); ---> var  <--- selEv=DwtShell.selectionEvent;DwtUiEvent.copy(

[WARNING] Try to use a single 'var' statement per scope.
;selEv.detail=target.checked; ---> var  <--- checkbox=DwtControl.findControl(target);checkbox

[WARNING] Try to use a single 'var' statement per scope.
var htmlElement=this.getHtmlElement(); ---> var  <--- html=new Array(50);var idx

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(50); ---> var  <--- idx=0;var headId=Dwt.getNextId

[WARNING] Try to use a single 'var' statement per scope.
(50);var idx=0; ---> var  <--- headId=Dwt.getNextId();var colId

[WARNING] Try to use a single 'var' statement per scope.
var headId=Dwt.getNextId(); ---> var  <--- colId=Dwt.getNextId();html[

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=html.join(""); ---> var  <--- headHtml=document.getElementById(headId);this

[WARNING] Try to use a single 'var' statement per scope.
headHtml.appendChild(this._listColDiv); ---> var  <--- colHtml=document.getElementById(colId);this

[WARNING] Try to use a single 'var' statement per scope.
if(this.useListElement()){ ---> var  <--- ul=document.createElement("ul");ul

[WARNING] Try to use a single 'var' statement per scope.
.ROW_CLASS].join(""); ---> var  <--- nc=this._normalClass=DwtListView.ROW_CLASS;

[WARNING] Try to use a single 'var' statement per scope.
getSelectedItems();if(selection){ ---> var  <--- elements=selection.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=selection.getArray();for( ---> var  <--- i=0;i<elements.length;

[WARNING] Try to use a single 'var' statement per scope.
={};var idx=0; ---> var  <--- htmlArr=[];htmlArr[idx++]

[WARNING] Try to use a single 'var' statement per scope.
;htmlArr[idx++]="<tr>"; ---> var  <--- numCols=this._headerList.length;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._headerList.length;for( ---> var  <--- i=0;i<numCols;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<numCols;i++){ ---> var  <--- headerCol=this._headerList[i];var 

[WARNING] Try to use a single 'var' statement per scope.
headerCol=this._headerList[i]; ---> var  <--- field=headerCol._field;headerCol._index=

[WARNING] Try to use a single 'var' statement per scope.
._field;headerCol._index=i; ---> var  <--- id=headerCol._id=DwtId.getListViewHdrId(

[WARNING] Try to use a single 'var' statement per scope.
;i<numCols;i++){ ---> var  <--- headerCol=this._headerList[i];if

[WARNING] Try to use a single 'var' statement per scope.
}},this),0); ---> var  <--- numResizeable=0,resizeableCol;for(var j

[WARNING] Try to use a single 'var' statement per scope.
var numResizeable=0,resizeableCol;for( ---> var  <--- j=0;j<this._headerList.

[WARNING] Try to use a single 'var' statement per scope.
._headerList.length;j++){ ---> var  <--- headerCol=this._headerList[j];var 

[WARNING] The variable headerCol has already been declared in the same scope...
_headerList.length;j++){var  ---> headerCol <--- =this._headerList[j];var cell

[WARNING] Try to use a single 'var' statement per scope.
headerCol=this._headerList[j]; ---> var  <--- cell=document.getElementById(headerCol._id)

[WARNING] Try to use a single 'var' statement per scope.
;}if(headerCol._resizeable){ ---> var  <--- sashId=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_SASH,

[WARNING] Try to use a single 'var' statement per scope.
this._view,headerCol._field); ---> var  <--- sashCell=document.getElementById(sashId);if

[WARNING] Try to use a single 'var' statement per scope.
;htmlArr[idx++]="' class='"; ---> var  <--- tmpClass=(id==this._currentColId)?

[WARNING] Try to use a single 'var' statement per scope.
;htmlArr[idx++]="<div"; ---> var  <--- headerColWidth=null;if(headerCol._width&&

[WARNING] Try to use a single 'var' statement per scope.
"<table width=100%><tr>";if(headerCol._iconInfo){ ---> var  <--- idText=["id='",DwtId.getListViewHdrId(DwtId

[WARNING] Try to use a single 'var' statement per scope.
._sortable&&!headerCol._noSortArrow){ ---> var  <--- arrowIcon=this._bSortAsc?"ColumnUpArrow":"ColumnDownArrow";

[WARNING] Try to use a single 'var' statement per scope.
;htmlArr[idx++]="'>"; ---> var  <--- isDefault=(field==defaultColumnSort);htmlArr[

[WARNING] Try to use a single 'var' statement per scope.
;selector+=" ."+headerCol._cssClass; ---> var  <--- declaration="width:"+width+($.isNumeric

[WARNING] Try to use a single 'var' statement per scope.
this._list;if(list){ ---> var  <--- len=list.size();for(

[WARNING] Try to use a single 'var' statement per scope.
=list.size();for( ---> var  <--- i=0;i<len;++i

[WARNING] Try to use a single 'var' statement per scope.
{var now=new Date(); ---> var  <--- size=list.size();var htmlArr

[WARNING] Try to use a single 'var' statement per scope.
var size=list.size(); ---> var  <--- htmlArr=[];if(!doAdd)

[WARNING] Try to use a single 'var' statement per scope.
this._parentEl,"DwtListView-Rows-Empty");for( ---> var  <--- i=0;i<size;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<size;i++){ ---> var  <--- item=list.get(i);var 

[WARNING] Try to use a single 'var' statement per scope.
item=list.get(i); ---> var  <--- div=this._createItemHtml(item,{now

[WARNING] Try to use a single 'var' statement per scope.
if(div instanceof Array){for( ---> var  <--- j=0;j<div.length;

[WARNING] Try to use a single 'var' statement per scope.
if(div instanceof Array){for( ---> var  <--- j=0;j<div.length;

[WARNING] Try to use a single 'var' statement per scope.
if(!itemEl){return;} ---> var  <--- altIndex=this._getRowIndex(item);this

[WARNING] Try to use a single 'var' statement per scope.
._list.remove(item);} ---> var  <--- id=itemEl.id;if(this.

[WARNING] Try to use a single 'var' statement per scope.
(item);if(odiv){ ---> var  <--- className=odiv.className;var ndiv=this

[WARNING] Try to use a single 'var' statement per scope.
){var className=odiv.className; ---> var  <--- ndiv=this._createItemHtml(item);ndiv

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- sz=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
._selectedItems.size();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
){var viewedItem=this._curViewedItem; ---> var  <--- viewedEl=viewedItem&&this._getElFromItem(viewedItem)

[WARNING] Try to use a single 'var' statement per scope.
else{if(this._selectedItems){ ---> var  <--- sa=this._selectedItems.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- saLen=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
._selectedItems.size();for( ---> var  <--- i=0;i<saLen;i++

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.SELECTION)){ ---> var  <--- selEv=new DwtSelectionEvent(true);selEv.

[WARNING] Try to use a single 'var' statement per scope.
=this.getEnabled();for( ---> var  <--- i=0;i<sz;++i

[WARNING] Try to use a single 'var' statement per scope.
bSortByAsc;var columnId=null;for( ---> var  <--- i=0;i<this._headerList.

[WARNING] Try to use a single 'var' statement per scope.
var limit=this.getLimit(); ---> var  <--- offset=bPageForward?(this.offset+limit

[WARNING] Try to use a single 'var' statement per scope.
=list.size();for( ---> var  <--- i=0;i<size;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<size;i++){ ---> var  <--- item=list.get(i);var 

[WARNING] Try to use a single 'var' statement per scope.
item=list.get(i); ---> var  <--- div=this._createItemHtml(item);if

[WARNING] Try to use a single 'var' statement per scope.
{break;}var anchorSelected=false; ---> var  <--- a=this.getSelectedItems().getArray(

[WARNING] Try to use a single 'var' statement per scope.
().getArray();for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
DwtKeyMap.SELECT_FIRST:caseDwtKeyMap.SELECT_LAST: ---> var  <--- item=(actionCode==DwtKeyMap.SELECT_FIRST)?

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.ACTION)){ ---> var  <--- p=Dwt.toWindow(this._kbAnchor,

[WARNING] Try to use a single 'var' statement per scope.
this._kbAnchor,0,0); ---> var  <--- s=Dwt.getSize(this._kbAnchor)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this._kbAnchor); ---> var  <--- docX=p.x+s.x/

[WARNING] Try to use a single 'var' statement per scope.
.x+s.x/4; ---> var  <--- docY=p.y+s.y/

[WARNING] Try to use a single 'var' statement per scope.
getSize(this._listColDiv).y; ---> var  <--- listDivHeight=listViewHeight-headerHeight-25;Dwt.

[WARNING] Try to use a single 'var' statement per scope.
size())){return;} ---> var  <--- row=childNodes[index];if(!

[WARNING] Try to use a single 'var' statement per scope.
if(!row){return;} ---> var  <--- odd=Boolean(index%2);this

[WARNING] Try to use a single 'var' statement per scope.
this._setAlternatingRowClass(row,odd); ---> var  <--- sibling=row.nextSibling;while(sibling)

[WARNING] Try to use a single 'var' statement per scope.
?DwtListView.ROW_CLASS_ODD:DwtListView.ROW_CLASS_EVEN; ---> var  <--- nclass=odd?DwtListView.ROW_CLASS_EVEN:DwtListView.

[WARNING] Try to use a single 'var' statement per scope.
,htmlArr,idx);var div; ---> var  <--- htmlArr=[];var idx=0;

[WARNING] Try to use a single 'var' statement per scope.
var div;var htmlArr=[]; ---> var  <--- idx=0;if(asHtml){idx

[WARNING] Try to use a single 'var' statement per scope.
else{if(params.div){ ---> var  <--- classes=[this._getDivClass(params.divClass

[WARNING] Try to use a single 'var' statement per scope.
._getDiv(item,params);} ---> var  <--- useListEl=this.useListElement();if(

[WARNING] Try to use a single 'var' statement per scope.
htmlArr,idx,item,params); ---> var  <--- headerList=params.headerList||this._headerList;

[WARNING] Try to use a single 'var' statement per scope.
headerList&&headerList.length){for( ---> var  <--- colIdx=0;colIdx<headerList.length;

[WARNING] Try to use a single 'var' statement per scope.
colIdx]._visible){continue;} ---> var  <--- field=headerList[colIdx]._field;idx

[WARNING] Try to use a single 'var' statement per scope.
div=document.createElement("div"); ---> var  <--- html=[];this._getDivHtml(item

[WARNING] Try to use a single 'var' statement per scope.
().x+"px");} ---> var  <--- extraStyle=this._getExtraStyle(item);if

[WARNING] Try to use a single 'var' statement per scope.
html[idx++]="'";} ---> var  <--- id=params.isDragProxy?this._getItemId(

[WARNING] Try to use a single 'var' statement per scope.
params)||Dwt.getNextId(); ---> var  <--- className=this._getRowClass(item,params)

[WARNING] Try to use a single 'var' statement per scope.
)){var classes=[]; ---> var  <--- className=this._getCellClass(item,field,

[WARNING] Try to use a single 'var' statement per scope.
className||""]);}else{ ---> var  <--- cellId=this._getCellId(item,field,

[WARNING] Try to use a single 'var' statement per scope.
_getCellId(item,field,params); ---> var  <--- idText=cellId?[" id=","'",cellId

[WARNING] Try to use a single 'var' statement per scope.
].join(""):""; ---> var  <--- width=this._getCellWidth(colIdx,params)

[WARNING] Try to use a single 'var' statement per scope.
this._getCellWidth(colIdx,params); ---> var  <--- widthText=width?([" width=",width]

[WARNING] Try to use a single 'var' statement per scope.
("")):(" width='100%'"); ---> var  <--- className=this._getCellClass(item,field,

[WARNING] The variable className has already been declared in the same scope...
"")):(" width='100%'");var  ---> className <--- =this._getCellClass(item,field,params

[WARNING] Try to use a single 'var' statement per scope.
_getCellClass(item,field,params); ---> var  <--- classText=className?[" class=",className].

[WARNING] Try to use a single 'var' statement per scope.
].join(""):""; ---> var  <--- alignValue=this._getCellAlign(colIdx,params)

[WARNING] Try to use a single 'var' statement per scope.
this._getCellAlign(colIdx,params); ---> var  <--- alignText=alignValue?[" align=",alignValue].

[WARNING] Try to use a single 'var' statement per scope.
].join(""):""; ---> var  <--- otherText=(this._getCellAttrText(item,field

[WARNING] Try to use a single 'var' statement per scope.
,field,params))||""; ---> var  <--- attrText=[idText,widthText,classText,alignText

[WARNING] Try to use a single 'var' statement per scope.
=params.headerList||this._headerList; ---> var  <--- width=headerList[colIdx]._width;if

[WARNING] Try to use a single 'var' statement per scope.
(!dndSelection){returnnull;} ---> var  <--- icon;var div;var roundPlusStyle;this.

[WARNING] Try to use a single 'var' statement per scope.
){returnnull;}var icon; ---> var  <--- div;var roundPlusStyle;this._dndImg=null

[WARNING] Try to use a single 'var' statement per scope.
null;}var icon;var div; ---> var  <--- roundPlusStyle;this._dndImg=null;if(

[WARNING] Try to use a single 'var' statement per scope.
)||dndSelection.length==1){ ---> var  <--- item=(dndSelection instanceof Array)?dndSelection[

[WARNING] Try to use a single 'var' statement per scope.
setPosition(div,Dwt.ABSOLUTE_STYLE); ---> var  <--- text=this.allSelected?ZmMsg.all:

[WARNING] Try to use a single 'var' statement per scope.
,36+32-20);} ---> var  <--- imgHtml=AjxImg.getImageHtml("RoundPlus",roundPlusStyle,

[WARNING] Try to use a single 'var' statement per scope.
(icon);if(div){ ---> var  <--- sz=Dwt.getSize(div);Dwt

[WARNING] Try to use a single 'var' statement per scope.
?DwtCssStyle.DROPPABLE:DwtCssStyle.NOT_DROPPABLE; ---> var  <--- origClass=this._getItemData(this._dndProxy,

[WARNING] Try to use a single 'var' statement per scope.
div=document.createElement("div"); ---> var  <--- subs={message:this._getNoResultsMessage()

[WARNING] Try to use a single 'var' statement per scope.
id=this._getItemId(item); ---> var  <--- childNodes=this._parentEl.childNodes;for(

[WARNING] Try to use a single 'var' statement per scope.
=this._parentEl.childNodes;for( ---> var  <--- i=0;i<childNodes.length;

[WARNING] Try to use a single 'var' statement per scope.
if(type==DwtListView.TYPE_HEADER_ITEM){ ---> var  <--- hdr=this.getItemFromElement(div);if

[WARNING] Try to use a single 'var' statement per scope.
this._currentColId)?"DwtListView-Column":"DwtListView-Column DwtListView-ColumnActive"; ---> var  <--- hdr=this.getItemFromElement(div);if

[WARNING] Try to use a single 'var' statement per scope.
div=this.getTargetItemDiv(ev); ---> var  <--- wasDraggingCol=this._handleColHeaderDrop(ev);var 

[WARNING] Try to use a single 'var' statement per scope.
wasDraggingCol=this._handleColHeaderDrop(ev); ---> var  <--- wasDraggingSash=this._handleColSashDrop(ev);if

[WARNING] Try to use a single 'var' statement per scope.
;return;}delete this._clickDiv; ---> var  <--- type=this._getItemData(div,"type")

[WARNING] Try to use a single 'var' statement per scope.
ev.button==DwtMouseEvent.RIGHT){ ---> var  <--- actionMenu=this._colHeaderActionMenu=this._getActionMenuForColHeader(

[WARNING] Try to use a single 'var' statement per scope.
if(!div){return;} ---> var  <--- type=this._getItemData(div,"type")

[WARNING] Try to use a single 'var' statement per scope.
item));if(div){ ---> var  <--- mev=new DwtMouseEvent();this._setMouseEvent

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.size(); ---> var  <--- bContained=this._selectedItems.contains(clickedEl)

[WARNING] Try to use a single 'var' statement per scope.
!this._selAnchor){return;} ---> var  <--- els=this._getChildren()||clickedEl.

[WARNING] Try to use a single 'var' statement per scope.
()||clickedEl.parentNode.childNodes; ---> var  <--- numEls=els.length;var el;var 

[WARNING] Try to use a single 'var' statement per scope.
childNodes;var numEls=els.length; ---> var  <--- el;var state=0;this._rightSelItem

[WARNING] Try to use a single 'var' statement per scope.
numEls=els.length;var el; ---> var  <--- state=0;this._rightSelItem=null;

[WARNING] Try to use a single 'var' statement per scope.
._selectedItems.removeAll();for( ---> var  <--- i=0;i<numEls;i++

[WARNING] Try to use a single 'var' statement per scope.
){el=els[i]; ---> var  <--- item=this.getItemFromElement(el);if

[WARNING] Try to use a single 'var' statement per scope.
(item===null){continue;} ---> var  <--- selStyleClass=this._selectedClass;var include=(

[WARNING] Try to use a single 'var' statement per scope.
;}var selStyleClass=this._selectedClass; ---> var  <--- include=(state===1);if(

[WARNING] Try to use a single 'var' statement per scope.
}}this._setKbFocusElement(clickedEl); ---> var  <--- newSelectedItems=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
this.sortingEnabled)){return;} ---> var  <--- list=this.getList();var size

[WARNING] Try to use a single 'var' statement per scope.
var list=this.getList(); ---> var  <--- size=list?list.size():

[WARNING] Try to use a single 'var' statement per scope.
?list.size():null; ---> var  <--- customQuery=this._columnHasCustomQuery(hdr);if

[WARNING] Try to use a single 'var' statement per scope.
(headerCol&&!headerCol._noSortArrow){ ---> var  <--- field=headerCol._field;var oldArrowId=DwtId

[WARNING] Try to use a single 'var' statement per scope.
){var field=headerCol._field; ---> var  <--- oldArrowId=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_ARROW,

[WARNING] Try to use a single 'var' statement per scope.
WIDGET_HDR_ARROW,this._view,field); ---> var  <--- oldArrowCell=document.getElementById(oldArrowId);if

[WARNING] Try to use a single 'var' statement per scope.
if(oldArrowCell&&oldArrowCell.firstChild){ ---> var  <--- imgEl=(AjxImg._mode==AjxImg.SINGLE_IMG

[WARNING] Try to use a single 'var' statement per scope.
style.visibility="hidden";}}} ---> var  <--- oldSortedCol=document.getElementById(this._currentColId)

[WARNING] Try to use a single 'var' statement per scope.
;}}this._currentColId=columnId; ---> var  <--- headerCol=this._headerIdHash[this._currentColId]

[WARNING] The variable headerCol has already been declared in the same scope...
}}this._currentColId=columnId;var  ---> headerCol <--- =this._headerIdHash[this._currentColId];

[WARNING] Try to use a single 'var' statement per scope.
;if(!headerCol._noSortArrow){ ---> var  <--- field=headerCol._field;var newArrowId=DwtId

[WARNING] The variable field has already been declared in the same scope...
if(!headerCol._noSortArrow){var  ---> field <--- =headerCol._field;var newArrowId=DwtId.

[WARNING] Try to use a single 'var' statement per scope.
){var field=headerCol._field; ---> var  <--- newArrowId=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_ARROW,

[WARNING] Try to use a single 'var' statement per scope.
WIDGET_HDR_ARROW,this._view,field); ---> var  <--- newArrowCell=document.getElementById(newArrowId);if

[WARNING] Try to use a single 'var' statement per scope.
this._bSortAsc?"ColumnUpArrow":"ColumnDownArrow"); ---> var  <--- imgEl=(AjxImg._mode==AjxImg.SINGLE_IMG

[WARNING] The variable imgEl has already been declared in the same scope...
._bSortAsc?"ColumnUpArrow":"ColumnDownArrow");var  ---> imgEl <--- =(AjxImg._mode==AjxImg.SINGLE_IMG)

[WARNING] Try to use a single 'var' statement per scope.
style.visibility="visible";}}} ---> var  <--- newSortedCol=document.getElementById(columnId);if

[WARNING] Try to use a single 'var' statement per scope.
this._parentEl.hasChildNodes()){ ---> var  <--- cDiv=this._parentEl.removeChild(this.

[WARNING] The variable cDiv has already been declared in the same scope...
._parentEl.hasChildNodes()){var  ---> cDiv <--- =this._parentEl.removeChild(this._parentEl

[WARNING] Try to use a single 'var' statement per scope.
_headerClone=document.createElement("div"); ---> var  <--- size=Dwt.getSize(this._clickDiv)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this._clickDiv); ---> var  <--- width=AjxEnv.isIE?size.x:

[WARNING] Try to use a single 'var' statement per scope.
.x:size.x-3; ---> var  <--- height=AjxEnv.isIE?size.y:

[WARNING] Try to use a single 'var' statement per scope.
._headerClone.style.borderTop="1px solid #777777"; ---> var  <--- headerCol=this._headerIdHash[this._clickDiv.

[WARNING] Try to use a single 'var' statement per scope.
_headerIdHash[this._clickDiv.id]; ---> var  <--- field=headerCol._field;var hdrLabelId=DwtId

[WARNING] Try to use a single 'var' statement per scope.
];var field=headerCol._field; ---> var  <--- hdrLabelId=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_LABEL,

[WARNING] Try to use a single 'var' statement per scope.
WIDGET_HDR_LABEL,this._view,field); ---> var  <--- labelCell=document.getElementById(hdrLabelId);if

[WARNING] Try to use a single 'var' statement per scope.
(this._headerClone);}else{ ---> var  <--- div=this.getTargetItemDiv(ev);var 

[WARNING] Try to use a single 'var' statement per scope.
div=this.getTargetItemDiv(ev); ---> var  <--- type=this._getItemData(div,"type")

[WARNING] Try to use a single 'var' statement per scope.
this._headerSashX=ev.docX;} ---> var  <--- parent=this._getParentForColResize();var loc

[WARNING] Try to use a single 'var' statement per scope.
var parent=this._getParentForColResize(); ---> var  <--- loc=Dwt.toWindow(parent.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
_getItemData(this._clickDiv,"index"); ---> var  <--- tgtItemIdx=this._getItemData(this._headerCloneTarget,

[WARNING] Try to use a single 'var' statement per scope.
this._currentColId)?"DwtListView-Column":"DwtListView-Column DwtListView-ColumnActive"; ---> var  <--- parent=this._headerClone.parentNode;if(

[WARNING] Try to use a single 'var' statement per scope.
_headerClone);}delete this._headerClone; ---> var  <--- data=this._data[this._clickDiv.

[WARNING] Try to use a single 'var' statement per scope.
data.type!=DwtListView.TYPE_HEADER_ITEM){ ---> var  <--- headerCol=this._headerIdHash[this._currentColId]

[WARNING] Try to use a single 'var' statement per scope.
this._headerIdHash[this._currentColId]; ---> var  <--- sortField=headerCol._sortable?headerCol._field:

[WARNING] Try to use a single 'var' statement per scope.
.createHeaderHtml(sortField);}else{ ---> var  <--- headerCol=this._headerIdHash[this._clickDiv.

[WARNING] The variable headerCol has already been declared in the same scope...
createHeaderHtml(sortField);}else{var  ---> headerCol <--- =this._headerIdHash[this._clickDiv.id

[WARNING] Try to use a single 'var' statement per scope.
_headerIdHash[this._clickDiv.id]; ---> var  <--- hdrLabelId=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_LABEL,

[WARNING] Try to use a single 'var' statement per scope.
this._view,headerCol._field); ---> var  <--- labelCell=document.getElementById(hdrLabelId);if

[WARNING] Try to use a single 'var' statement per scope.
.color="#000000";}}for( ---> var  <--- i=0;i<this._headerList.

[WARNING] Try to use a single 'var' statement per scope.
||columnIdx==newIdx){return;} ---> var  <--- temp=this._headerList.splice(columnIdx,

[WARNING] Try to use a single 'var' statement per scope.
;}delete this._headerSash;for( ---> var  <--- i=0;i<this._headerList.

[WARNING] Try to use a single 'var' statement per scope.
=this._calcRelativeWidth(i);} ---> var  <--- headerIdx=this._getItemData(this._clickDiv,

[WARNING] Try to use a single 'var' statement per scope.
headerIdx==null){returnfalse;} ---> var  <--- delta=ev.docX-this._headerSashX;

[WARNING] Try to use a single 'var' statement per scope.
=ev.docX-this._headerSashX; ---> var  <--- fcol=this._headerList[headerIdx];var 

[WARNING] Try to use a single 'var' statement per scope.
fcol=this._headerList[headerIdx]; ---> var  <--- col1=fcol;var col2;var resized=

[WARNING] Try to use a single 'var' statement per scope.
[headerIdx];var col1=fcol; ---> var  <--- col2;var resized=[];if(

[WARNING] Try to use a single 'var' statement per scope.
;var col1=fcol;var col2; ---> var  <--- resized=[];if(delta<0

[WARNING] Try to use a single 'var' statement per scope.
else{if(delta>0){ ---> var  <--- remain=delta;while(remain>0)

[WARNING] Try to use a single 'var' statement per scope.
){delta-=remain;break;} ---> var  <--- col2width=this._calcRelativeWidth(col2._index)

[WARNING] Try to use a single 'var' statement per scope.
this._calcRelativeWidth(col2._index); ---> var  <--- room=col2width-DwtListView.MIN_COLUMN_WIDTH;if(

[WARNING] Try to use a single 'var' statement per scope.
push(fcol._index);}} ---> var  <--- col=this._getNextResizeableColumnHeader(fcol,resized,

[WARNING] Try to use a single 'var' statement per scope.
._headerList.length;i++){ ---> var  <--- headerCol=this._headerList[i];this

[WARNING] Try to use a single 'var' statement per scope.
&&column._width=="auto")){ ---> var  <--- cell=document.getElementById(column._id)

[WARNING] Try to use a single 'var' statement per scope.
_getLastColumnIndex();if(lastColIdx){ ---> var  <--- lastCol=this._headerList[lastColIdx];var 

[WARNING] Try to use a single 'var' statement per scope.
lastCol=this._headerList[lastColIdx]; ---> var  <--- lastCell=document.getElementById(lastCol._id)

[WARNING] Try to use a single 'var' statement per scope.
._id);if(lastCell){ ---> var  <--- div=lastCell.firstChild;var scrollbarPad=16

[WARNING] Try to use a single 'var' statement per scope.
){var div=lastCell.firstChild; ---> var  <--- scrollbarPad=16;var headerWidth=this._listColDiv

[WARNING] Try to use a single 'var' statement per scope.
lastCell.firstChild;var scrollbarPad=16; ---> var  <--- headerWidth=this._listColDiv.clientWidth;var rowWidth

[WARNING] Try to use a single 'var' statement per scope.
var headerWidth=this._listColDiv.clientWidth; ---> var  <--- rowWidth=this._listDiv.clientWidth;if(

[WARNING] Try to use a single 'var' statement per scope.
null;if(this._headerList){ ---> var  <--- count=this._headerList.length-1;

[WARNING] Try to use a single 'var' statement per scope.
._headerList.length;i++){ ---> var  <--- col=this._headerList[i];if

[WARNING] Try to use a single 'var' statement per scope.
}}if(wrap){for( ---> var  <--- i=0;i<start;i++

[WARNING] The variable i has already been declared in the same scope...
}if(wrap){for(var  ---> i <--- =0;i<start;i++)

[WARNING] Try to use a single 'var' statement per scope.
exclude[i]){continue;} ---> var  <--- col=this._headerList[i];if

[WARNING] The variable col has already been declared in the same scope...
[i]){continue;}var  ---> col <--- =this._headerList[i];if(

[WARNING] Try to use a single 'var' statement per scope.
this._headerIdHash[this._currentColId]; ---> var  <--- sortField=(headerCol&&headerCol._sortable)?

[WARNING] Try to use a single 'var' statement per scope.
_sortable)?headerCol._field:null; ---> var  <--- sel=this.getSelection()[0]

[WARNING] Try to use a single 'var' statement per scope.
){this._setMouseEvents();} ---> var  <--- events;if(parent._hasSetMouseEvents){events

[WARNING] Try to use a single 'var' statement per scope.
firstChild:null;if(el){ ---> var  <--- cname=el.className;el.className=

[WARNING] Try to use a single 'var' statement per scope.
;}var callback=this._menu; ---> var  <--- params=this._savedMenuParams||{};params

[WARNING] Try to use a single 'var' statement per scope.
;}var parent=menu.parent; ---> var  <--- parentBounds=parent.getBounds();var windowSize

[WARNING] Try to use a single 'var' statement per scope.
var parentBounds=parent.getBounds(); ---> var  <--- windowSize=menu.shell.getSize();

[WARNING] Try to use a single 'var' statement per scope.
=menu.shell.getSize(); ---> var  <--- menuSize=menu.getSize();var parentElement

[WARNING] Try to use a single 'var' statement per scope.
var menuSize=menu.getSize(); ---> var  <--- parentElement=parent.getHtmlElement();var parentLocation

[WARNING] Try to use a single 'var' statement per scope.
var parentElement=parent.getHtmlElement(); ---> var  <--- parentLocation=Dwt.toWindow(parentElement,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(parentElement,0,0); ---> var  <--- leftBorder=(parentElement.style.borderLeftWidth==""

[WARNING] Try to use a single 'var' statement per scope.
parseInt(parentElement.style.borderLeftWidth); ---> var  <--- kbGenerated=Boolean(event&&DwtKeyEvent.isKeyEvent(

[WARNING] Try to use a single 'var' statement per scope.
&&DwtKeyEvent.isKeyEvent(event)); ---> var  <--- x;if(this._menuPopupStyle==DwtButton.

[WARNING] Try to use a single 'var' statement per scope.
-menuSize.x:x;}} ---> var  <--- y;if(this._menuPopupStyle==DwtButton.

[WARNING] Try to use a single 'var' statement per scope.
y=parentLocation.y;}else{ ---> var  <--- horizontalBorder=(parentElement.style.borderTopWidth==""

[WARNING] Try to use a single 'var' statement per scope.
var htmlEl=this.getHtmlElement(); ---> var  <--- p=Dwt.toWindow(htmlEl);var 

[WARNING] Try to use a single 'var' statement per scope.
p=Dwt.toWindow(htmlEl); ---> var  <--- mev=new DwtMouseEvent();this._setMouseEvent

[WARNING] Try to use a single 'var' statement per scope.
if(!htmlEl){return;} ---> var  <--- p=Dwt.toWindow(htmlEl);var 

[WARNING] Try to use a single 'var' statement per scope.
p=Dwt.toWindow(htmlEl); ---> var  <--- mev=new DwtMouseEvent();this._setMouseEvent

[WARNING] Try to use a single 'var' statement per scope.
){var mouseX=ev.docX; ---> var  <--- dropDownX=Dwt.toWindow(this._dropDownEl,

[WARNING] Try to use a single 'var' statement per scope.
(direction);if(iconEl){ ---> var  <--- info=show?this._hoverImageInfo[direction]

[WARNING] Try to use a single 'var' statement per scope.
._lastNotify>DwtButton.NOTIFY_WINDOW)){ ---> var  <--- selEv=DwtShell.selectionEvent;DwtUiEvent.copy(

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
notifyListeners(DwtEvent.ONMOUSEDOWN,mouseEv); ---> var  <--- obj=DwtControl.getTargetControl(ev);if

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.SELECTION)){ ---> var  <--- selEv=DwtShell.selectionEvent;DwtUiEvent.copy(

[WARNING] Try to use a single 'var' statement per scope.
button.setDisplayState(DwtControl.HOVER); ---> var  <--- dropDown=button._dropDownEl;if(button.

[WARNING] Try to use a single 'var' statement per scope.
target&&ev.target.firstChild){ ---> var  <--- el=ev.target.firstChild;var cname

[WARNING] Try to use a single 'var' statement per scope.
var el=ev.target.firstChild; ---> var  <--- cname=el.className;el.className=

[WARNING] Try to use a single 'var' statement per scope.
();button.isActive=false; ---> var  <--- dropDown=button._dropDownEl;if(button.

[WARNING] Try to use a single 'var' statement per scope.
!=DwtMouseEvent.LEFT){return;} ---> var  <--- dropDown=button._dropDownEl;if(button.

[WARNING] Try to use a single 'var' statement per scope.
!=DwtMouseEvent.LEFT){return;} ---> var  <--- dropDown=button._dropDownEl;if(button.

[WARNING] Try to use a single 'var' statement per scope.
);break;caseDwtButton.ACTION_MOUSEUP: ---> var  <--- el=button.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
,DwtException.INVALIDPARENT,"DwtMenuItem");} ---> var  <--- style=params.style=params.style||

[WARNING] Try to use a single 'var' statement per scope.
|=DwtButton.ALWAYS_FLAT|DwtLabel.IMAGE_LEFT; ---> var  <--- isSeparator=(style&DwtMenuItem.SEPARATOR_STYLE);

[WARNING] The variable params has already been declared in the same scope...
.setMenu=function(params){var  ---> params <--- =Dwt.getParams(arguments,DwtButton.setMenuParams

[WARNING] Try to use a single 'var' statement per scope.
=this._style&DwtMenuItem.CHECK_STYLE; ---> var  <--- isRadio=this._style&DwtMenuItem.RADIO_STYLE;

[WARNING] Try to use a single 'var' statement per scope.
{this._checkEl.innerHTML=""; ---> var  <--- icon=checked?(isCheck?"MenuCheck":"MenuRadio"

[WARNING] Try to use a single 'var' statement per scope.
var menu=this.getMenu(); ---> var  <--- pp=this.parent.parent;var pb

[WARNING] Try to use a single 'var' statement per scope.
var pp=this.parent.parent; ---> var  <--- pb=this.getBounds();var ws

[WARNING] Try to use a single 'var' statement per scope.
var pb=this.getBounds(); ---> var  <--- ws=menu.shell.getSize();

[WARNING] Try to use a single 'var' statement per scope.
=menu.shell.getSize(); ---> var  <--- s=menu.getSize();var x

[WARNING] Try to use a single 'var' statement per scope.
var s=menu.getSize(); ---> var  <--- x;var y;var vBorder;var hBorder

[WARNING] Try to use a single 'var' statement per scope.
menu.getSize();var x; ---> var  <--- y;var vBorder;var hBorder;var ppHtmlElement

[WARNING] Try to use a single 'var' statement per scope.
();var x;var y; ---> var  <--- vBorder;var hBorder;var ppHtmlElement=pp.

[WARNING] Try to use a single 'var' statement per scope.
var x;var y;var vBorder; ---> var  <--- hBorder;var ppHtmlElement=pp.getHtmlElement()

[WARNING] Try to use a single 'var' statement per scope.
var y;var vBorder;var hBorder; ---> var  <--- ppHtmlElement=pp.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
){var menu=this.parent; ---> var  <--- mev=new DwtMouseEvent();this._setMouseEvent

[WARNING] Try to use a single 'var' statement per scope.
){var menu=this.parent; ---> var  <--- currItem=menu.__currentItem;var mev=new 

[WARNING] Try to use a single 'var' statement per scope.
parent;var currItem=menu.__currentItem; ---> var  <--- mev=new DwtMouseEvent();this._setMouseEvent

[WARNING] Try to use a single 'var' statement per scope.
(!menuItem){returnfalse;} ---> var  <--- menu=menuItem.parent;if(menuItem.

[WARNING] Try to use a single 'var' statement per scope.
){var menuItem=ev.dwtObj; ---> var  <--- submenu=menuItem&&menuItem.getMenu();

[WARNING] Try to use a single 'var' statement per scope.
if(!parent){return;} ---> var  <--- events=AjxEnv.isIE?[DwtEvent.ONMOUSEDOWN

[WARNING] Try to use a single 'var' statement per scope.
events);this._hasSetMouseEvents=true; ---> var  <--- htmlElement=this.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
=this.getItems();for( ---> var  <--- i=0;i<items.length;

[WARNING] Try to use a single 'var' statement per scope.
<items.length;i++){ ---> var  <--- itemId=items[i].getData(key

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
<a.length;i++){ ---> var  <--- mi=a[i];if((

[WARNING] Try to use a single 'var' statement per scope.
htmlElement.appendChild(this._bottomScroller); ---> var  <--- scrollUpStartListener=AjxCallback.simpleClosure(this._scroll,

[WARNING] Try to use a single 'var' statement per scope.
_table.id,true,false); ---> var  <--- scrollUpStopListener=AjxCallback.simpleClosure(this._scroll,

[WARNING] Try to use a single 'var' statement per scope.
_table.id,false,false); ---> var  <--- mouseOutTopListener=AjxCallback.simpleClosure(this._handleMouseOut,

[WARNING] Try to use a single 'var' statement per scope.
id,this._table.id); ---> var  <--- mouseOutBottomListener=AjxCallback.simpleClosure(this._handleMouseOut,

[WARNING] Try to use a single 'var' statement per scope.
,DwtEvent.ONMOUSELEAVE,scrollUpStopListener);} ---> var  <--- scrollDownStartListener=AjxCallback.simpleClosure(this._scroll,

[WARNING] Try to use a single 'var' statement per scope.
_table.id,true,true); ---> var  <--- scrollDownStopListener=AjxCallback.simpleClosure(this._scroll,

[WARNING] Try to use a single 'var' statement per scope.
,DwtEvent.ONMOUSELEAVE,scrollDownStopListener);} ---> var  <--- wheelListener=AjxCallback.simpleClosure(this._handleScroll,

[WARNING] Try to use a single 'var' statement per scope.
=this.shell.getSize(); ---> var  <--- mySize=this.getSize();var htmlEl

[WARNING] Try to use a single 'var' statement per scope.
var mySize=this.getSize(); ---> var  <--- htmlEl=this.getHtmlElement();windowSize.

[WARNING] Try to use a single 'var' statement per scope.
0);windowSize.x-=28; ---> var  <--- isScroll=this._layoutStyle==DwtMenu.LAYOUT_SCROLL;

[WARNING] Try to use a single 'var' statement per scope.
=this._layoutStyle==DwtMenu.LAYOUT_SCROLL; ---> var  <--- isPopup=this._isPopupStyle();var isCascade

[WARNING] Try to use a single 'var' statement per scope.
var isPopup=this._isPopupStyle(); ---> var  <--- isCascade=this._layoutStyle==DwtMenu.LAYOUT_CASCADE;

[WARNING] Try to use a single 'var' statement per scope.
){if(isPopup&&isCascade){ ---> var  <--- space=windowSize.y;var newY=null

[WARNING] Try to use a single 'var' statement per scope.
){var space=windowSize.y; ---> var  <--- newY=null;var rows=this._table

[WARNING] Try to use a single 'var' statement per scope.
windowSize.y;var newY=null; ---> var  <--- rows=this._table.rows;var numRows

[WARNING] Try to use a single 'var' statement per scope.
var rows=this._table.rows; ---> var  <--- numRows=rows.length;var maxRows=this

[WARNING] Try to use a single 'var' statement per scope.
rows;var numRows=rows.length; ---> var  <--- maxRows=this._maxRows;var height=mySize

[WARNING] Try to use a single 'var' statement per scope.
length;var maxRows=this._maxRows; ---> var  <--- height=mySize.y;var requiredSpace=space

[WARNING] Try to use a single 'var' statement per scope.
_maxRows;var height=mySize.y; ---> var  <--- requiredSpace=space-25;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var requiredSpace=space-25;for( ---> var  <--- i=numRows-1;i>=0;

[WARNING] Try to use a single 'var' statement per scope.
height<requiredSpace){break;}} ---> var  <--- count=maxRows?Math.min(i+

[WARNING] Try to use a single 'var' statement per scope.
:(i+1);for( ---> var  <--- j=count;j<numRows;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<numRows;j++){ ---> var  <--- row=rows[(j-count)%

[WARNING] Try to use a single 'var' statement per scope.
(j-count)%count]; ---> var  <--- cell=row.insertCell(-1);

[WARNING] Try to use a single 'var' statement per scope.
1);cell.className="DwtMenuCascadeCell"; ---> var  <--- child=rows[j].cells[0

[WARNING] Try to use a single 'var' statement per scope.
._table.deleteRow(count);} ---> var  <--- offset=numRows%count;if(offset>

[WARNING] Try to use a single 'var' statement per scope.
if(offset>0){for( ---> var  <--- j=offset;j<count;j++

[WARNING] The variable j has already been declared in the same scope...
(offset>0){for(var  ---> j <--- =offset;j<count;j++)

[WARNING] Try to use a single 'var' statement per scope.
;j<count;j++){ ---> var  <--- row=rows[j];var cell=

[WARNING] The variable row has already been declared in the same scope...
j<count;j++){var  ---> row <--- =rows[j];var cell=row

[WARNING] Try to use a single 'var' statement per scope.
{var row=rows[j]; ---> var  <--- cell=row.insertCell(-1);

[WARNING] The variable cell has already been declared in the same scope...
var row=rows[j];var  ---> cell <--- =row.insertCell(-1);cell

[WARNING] Try to use a single 'var' statement per scope.
else{if(isPopup&&isScroll){ ---> var  <--- rows=this._table.rows;var numRows

[WARNING] The variable rows has already been declared in the same scope...
{if(isPopup&&isScroll){var  ---> rows <--- =this._table.rows;var numRows=

[WARNING] Try to use a single 'var' statement per scope.
var rows=this._table.rows; ---> var  <--- numRows=rows.length;var maxRows=this

[WARNING] The variable numRows has already been declared in the same scope...
rows=this._table.rows;var  ---> numRows <--- =rows.length;var maxRows=this.

[WARNING] Try to use a single 'var' statement per scope.
rows;var numRows=rows.length; ---> var  <--- maxRows=this._maxRows;var limRows=maxRows

[WARNING] The variable maxRows has already been declared in the same scope...
;var numRows=rows.length;var  ---> maxRows <--- =this._maxRows;var limRows=maxRows?

[WARNING] Try to use a single 'var' statement per scope.
length;var maxRows=this._maxRows; ---> var  <--- limRows=maxRows?Math.min(maxRows,

[WARNING] Try to use a single 'var' statement per scope.
min(maxRows,numRows):numRows; ---> var  <--- availableSpace=windowSize.y-25;var height

[WARNING] Try to use a single 'var' statement per scope.
var availableSpace=windowSize.y-25; ---> var  <--- height=20;for(var i=0

[WARNING] The variable height has already been declared in the same scope...
availableSpace=windowSize.y-25;var  ---> height <--- =20;for(var i=0;

[WARNING] Try to use a single 'var' statement per scope.
25;var height=20;for( ---> var  <--- i=0;i<limRows;i++

[WARNING] The variable i has already been declared in the same scope...
;var height=20;for(var  ---> i <--- =0;i<limRows;i++)

[WARNING] Try to use a single 'var' statement per scope.
;i<limRows;i++){ ---> var  <--- rowSize=Dwt.getSize(rows[i]

[WARNING] Try to use a single 'var' statement per scope.
mySize.y=height;}}} ---> var  <--- newW="auto";var newH="auto";if

[WARNING] Try to use a single 'var' statement per scope.
;}}}var newW="auto"; ---> var  <--- newH="auto";if(isPopup&&isScroll)

[WARNING] Try to use a single 'var' statement per scope.
10:0))+"px";} ---> var  <--- newX=x+mySize.x>=windowSize.

[WARNING] Try to use a single 'var' statement per scope.
Dwt.delClass(htmlEl,"DwtMenu-congruentRight"); ---> var  <--- pbound=this.parent.getBounds();

[WARNING] Try to use a single 'var' statement per scope.
=this.parent.getBounds(); ---> var  <--- pmstyle=DwtCssStyle.getComputedStyleObject(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
parent.parent.getHtmlElement()); ---> var  <--- tstyle=DwtCssStyle.getComputedStyleObject(htmlEl);if

[WARNING] Try to use a single 'var' statement per scope.
pbound.x>=mySize.x){ ---> var  <--- totalWidth=parseInt(tstyle.width);if

[WARNING] Try to use a single 'var' statement per scope.
);if(this._congruent){ ---> var  <--- offset;if(AjxEnv.isIE){offset

[WARNING] The variable offset has already been declared in the same scope...
;if(this._congruent){var  ---> offset <--- ;if(AjxEnv.isIE){offset=

[WARNING] Try to use a single 'var' statement per scope.
,"DwtMenu-congruentLeft");}}}else{ ---> var  <--- left=parseInt(pmstyle.left)||(

[WARNING] Try to use a single 'var' statement per scope.
pmstyle.paddingLeft)||0)); ---> var  <--- width=parseInt(pmstyle.width)||pbound

[WARNING] Try to use a single 'var' statement per scope.
width;if(this._congruent){ ---> var  <--- offset=parseInt(pmstyle.paddingRight)+parseInt

[WARNING] The variable offset has already been declared in the same scope...
;if(this._congruent){var  ---> offset <--- =parseInt(pmstyle.paddingRight)+parseInt(

[WARNING] Try to use a single 'var' statement per scope.
0){y=0;}} ---> var  <--- newY=isPopup&&y+mySize.y>=

[WARNING] The variable newY has already been declared in the same scope...
){y=0;}}var  ---> newY <--- =isPopup&&y+mySize.y>=windowSize

[WARNING] Try to use a single 'var' statement per scope.
parent instanceof DwtMenuItem&&this._congruent){ ---> var  <--- offset=(parseInt(tstyle.paddingTop)||

[WARNING] The variable offset has already been declared in the same scope...
 instanceof DwtMenuItem&&this._congruent){var  ---> offset <--- =(parseInt(tstyle.paddingTop)||0

[WARNING] Try to use a single 'var' statement per scope.
=ev?ev:window.event; ---> var  <--- wheelData=ev.detail?ev.detail*

[WARNING] Try to use a single 'var' statement per scope.
-1:ev.wheelDelta/40; ---> var  <--- rows=div.rows;var step=Dwt

[WARNING] Try to use a single 'var' statement per scope.
40;var rows=div.rows; ---> var  <--- step=Dwt.getSize(rows[0]

[WARNING] Try to use a single 'var' statement per scope.
null;if(div&&scrolling){ ---> var  <--- rows=div.rows;var step=Dwt

[WARNING] Try to use a single 'var' statement per scope.
){var rows=div.rows; ---> var  <--- step=Dwt.getSize(rows[0]

[WARNING] Try to use a single 'var' statement per scope.
div.style.top)||0; ---> var  <--- top;if(step<0){var 

[WARNING] Try to use a single 'var' statement per scope.
top;if(step<0){ ---> var  <--- rows=this._table.rows||null;

[WARNING] Try to use a single 'var' statement per scope.
=this._table.rows||null; ---> var  <--- height=rows&&rows.length&&Dwt.

[WARNING] Try to use a single 'var' statement per scope.
(rows[0]).y; ---> var  <--- max=div.scrollHeight-(parseInt(div

[WARNING] Try to use a single 'var' statement per scope.
_table.rows;if(rows){ ---> var  <--- maxRows=this._maxRows;var visibleHeight=0

[WARNING] Try to use a single 'var' statement per scope.
){var maxRows=this._maxRows; ---> var  <--- visibleHeight=0;var rowHeights=[];

[WARNING] Try to use a single 'var' statement per scope.
this._maxRows;var visibleHeight=0; ---> var  <--- rowHeights=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var rowHeights=[];for( ---> var  <--- i=0,numRows=rows.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<numRows;i++){ ---> var  <--- h=Dwt.getSize(rows[i]

[WARNING] Try to use a single 'var' statement per scope.
}rowHeights.push(h);} ---> var  <--- itemHeight=rowHeights[index];var currentOffset=

[WARNING] Try to use a single 'var' statement per scope.
}var itemHeight=rowHeights[index]; ---> var  <--- currentOffset=parseInt(this._table.style.

[WARNING] Try to use a single 'var' statement per scope.
index=rows.length-1;} ---> var  <--- itemOffset=0;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
;}var itemOffset=0;for( ---> var  <--- i=0;i<index&&i<

[WARNING] The variable i has already been declared in the same scope...
}var itemOffset=0;for(var  ---> i <--- =0;i<index&&i<rowHeights

[WARNING] Try to use a single 'var' statement per scope.
{itemOffset+=rowHeights[i];} ---> var  <--- delta=0;if(justMakeVisible){if

[WARNING] Try to use a single 'var' statement per scope.
this._children.get(0); ---> var  <--- index=this.getItemIndex(item);if

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<items.length;

[WARNING] Try to use a single 'var' statement per scope.
<items.length;i++){ ---> var  <--- item=items[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
.RADIO_STYLE))){continue;} ---> var  <--- val=item.getData(field);if

[WARNING] Try to use a single 'var' statement per scope.
getCellIndex(cell));}else{ ---> var  <--- el=child.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
GENERIC_WIDGET_STYLE){return;}var row; ---> var  <--- col;if(this._style==DwtMenu.

[WARNING] Try to use a single 'var' statement per scope.
this._style==DwtMenu.BAR_STYLE){ ---> var  <--- rows=this._table.rows;row=

[WARNING] Try to use a single 'var' statement per scope.
="center";col.vAlign="middle"; ---> var  <--- spc=row.insertCell(-1);

[WARNING] Try to use a single 'var' statement per scope.
){var radioGroupId=child._radioGroupId; ---> var  <--- sz=this._children.size();

[WARNING] Try to use a single 'var' statement per scope.
=this._children.size(); ---> var  <--- a=this._children.getArray();

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._children.size(); ---> var  <--- a=this._children.getArray();

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._children.size(); ---> var  <--- a=this._children.getArray();

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
this.render(x,y); ---> var  <--- isScroll=this._layoutStyle==DwtMenu.LAYOUT_SCROLL;

[WARNING] Try to use a single 'var' statement per scope.
=this._layoutStyle==DwtMenu.LAYOUT_SCROLL; ---> var  <--- isCascade=this._layoutStyle==DwtMenu.LAYOUT_CASCADE;

[WARNING] Try to use a single 'var' statement per scope.
notifyListeners(DwtEvent.POPUP,this); ---> var  <--- tooltip=this.shell.getToolTip();

[WARNING] Try to use a single 'var' statement per scope.
-1;this._isPoppedUp=true; ---> var  <--- omem=DwtOutsideMouseEventMgr.INSTANCE;var omemParams={

[WARNING] Try to use a single 'var' statement per scope.
true;var omem=DwtOutsideMouseEventMgr.INSTANCE; ---> var  <--- omemParams={id:"DwtMenu",obj:this

[WARNING] Try to use a single 'var' statement per scope.
=this._children.getArray(); ---> var  <--- s=this._children.size();

[WARNING] Try to use a single 'var' statement per scope.
._children.size();for( ---> var  <--- i=0;i<s;i++

[WARNING] Try to use a single 'var' statement per scope.
notifyListeners(DwtEvent.POPDOWN,this); ---> var  <--- omem=DwtOutsideMouseEventMgr.INSTANCE;omem.stopListening(

[WARNING] Try to use a single 'var' statement per scope.
[0].cells.length){ ---> var  <--- numColumns=this._table.rows[0]

[WARNING] Try to use a single 'var' statement per scope.
rows[0].cells.length; ---> var  <--- numRows=this._table.rows.length;

[WARNING] Try to use a single 'var' statement per scope.
._table.rows.length;for( ---> var  <--- i=1;i<numColumns;i++

[WARNING] The variable i has already been declared in the same scope...
_table.rows.length;for(var  ---> i <--- =1;i<numColumns;i++)

[WARNING] Try to use a single 'var' statement per scope.
<numColumns;i++){for( ---> var  <--- j=0;j<numRows;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<numRows;j++){ ---> var  <--- cell=this._table.rows[j]

[WARNING] Try to use a single 'var' statement per scope.
;if(!cell.empty){ ---> var  <--- child=cell.firstChild;var row=this

[WARNING] Try to use a single 'var' statement per scope.
){var child=cell.firstChild; ---> var  <--- row=this._table.insertRow(this.

[WARNING] Try to use a single 'var' statement per scope.
this._table.rows.length); ---> var  <--- cell=row.insertCell(0);while

[WARNING] The variable cell has already been declared in the same scope...
._table.rows.length);var  ---> cell <--- =row.insertCell(0);while(

[WARNING] Try to use a single 'var' statement per scope.
.nextSibling;}}}}for( ---> var  <--- j=0;j<numRows;j++

[WARNING] The variable j has already been declared in the same scope...
nextSibling;}}}}for(var  ---> j <--- =0;j<numRows;j++)

[WARNING] Try to use a single 'var' statement per scope.
;j<numRows;j++){ ---> var  <--- row=this._table.rows[j]

[WARNING] The variable row has already been declared in the same scope...
j<numRows;j++){var  ---> row <--- =this._table.rows[j];

[WARNING] Try to use a single 'var' statement per scope.
_table.rows[j];for( ---> var  <--- i=row.cells.length-1;

[WARNING] The variable i has already been declared in the same scope...
.rows[j];for(var  ---> i <--- =row.cells.length-1;i

[WARNING] Try to use a single 'var' statement per scope.
=this._children.getArray(); ---> var  <--- s=this._children.size();

[WARNING] Try to use a single 'var' statement per scope.
._children.size();for( ---> var  <--- i=0;i<s;i++

[WARNING] Try to use a single 'var' statement per scope.
){var menu=DwtMenu._activeMenu; ---> var  <--- id=menu._htmlElId;var htmlEl=DwtUiEvent

[WARNING] Try to use a single 'var' statement per scope.
_activeMenu;var id=menu._htmlElId; ---> var  <--- htmlEl=DwtUiEvent.getTarget(ev);while

[WARNING] Try to use a single 'var' statement per scope.
menu.popdown(0,ev); ---> var  <--- cMenu=null;do{cMenu=DwtMenu.

[WARNING] Try to use a single 'var' statement per scope.
msgStr){var html=[]; ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
appendChild(this._buttonContainer);for( ---> var  <--- i=0;i<options.length;

[WARNING] Try to use a single 'var' statement per scope.
<options.length;i++){ ---> var  <--- option=AjxUtil.hashCopy(options[i]

[WARNING] Try to use a single 'var' statement per scope.
]);option.index=i; ---> var  <--- checked=(i===0);var button

[WARNING] Try to use a single 'var' statement per scope.
var checked=(i===0); ---> var  <--- button=option.button=new DwtRadioButton({

[WARNING] Try to use a single 'var' statement per scope.
.inputId||Dwt.getNextId(); ---> var  <--- errorIconId=Dwt.getNextId();var htmlEl

[WARNING] Try to use a single 'var' statement per scope.
var errorIconId=Dwt.getNextId(); ---> var  <--- htmlEl=this.getHtmlElement();if(

[WARNING] Try to use a single 'var' statement per scope.
&&params.rows>1)){ ---> var  <--- htmlArr=["<textarea id='",inputFieldId,"' rows=",params

[WARNING] Try to use a single 'var' statement per scope.
inputFieldId,"' rows=",params.rows]; ---> var  <--- i=htmlArr.length;if(params.

[WARNING] Try to use a single 'var' statement per scope.
join("");}}else{ ---> var  <--- htmlArr=["<table cellspacing='0' cellpadding='0'><tr>"];var i=1

[WARNING] The variable htmlArr has already been declared in the same scope...
("");}}else{var  ---> htmlArr <--- =["<table cellspacing='0' cellpadding='0'><tr>"];var i=1;

[WARNING] Try to use a single 'var' statement per scope.
else{var htmlArr=["<table cellspacing='0' cellpadding='0'><tr>"]; ---> var  <--- i=1;if(this._errorIconStyle==

[WARNING] The variable i has already been declared in the same scope...
{var htmlArr=["<table cellspacing='0' cellpadding='0'><tr>"];var  ---> i <--- =1;if(this._errorIconStyle==DwtInputField

[WARNING] Try to use a single 'var' statement per scope.
params.initialValue||"";}else{ ---> var  <--- oinput=document.getElementById(inputFieldId);var 

[WARNING] Try to use a single 'var' statement per scope.
oinput=document.getElementById(inputFieldId); ---> var  <--- ninput=this.__createInputEl(params);if

[WARNING] Try to use a single 'var' statement per scope.
){var oinput=this._inputField; ---> var  <--- ninput=this.__createInputEl();oinput.

[WARNING] Try to use a single 'var' statement per scope.
if(this._decimals!=null){ ---> var  <--- str=n.toString();var pos

[WARNING] Try to use a single 'var' statement per scope.
var str=n.toString(); ---> var  <--- pos=str.indexOf(".");if

[WARNING] Try to use a single 'var' statement per scope.
keyEv.setFromDhtmlEvent(ev,true); ---> var  <--- obj=keyEv.dwtObj;var keyCode=keyEv

[WARNING] Try to use a single 'var' statement per scope.
);var obj=keyEv.dwtObj; ---> var  <--- keyCode=keyEv.keyCode;if(obj.

[WARNING] Try to use a single 'var' statement per scope.
,keyEv)){returntrue;} ---> var  <--- val=null;if((keyCode==13

[WARNING] Try to use a single 'var' statement per scope.
(value){var isValid=true; ---> var  <--- retVal;this._validationError=null;if(

[WARNING] Try to use a single 'var' statement per scope.
_inputField;if(oinput){for( ---> var  <--- eventType in this._inputEventHandlers){oinput.removeAttribute

[WARNING] Try to use a single 'var' statement per scope.
oinput.removeAttribute(eventType);}} ---> var  <--- ninput;var type=this._type!=DwtInputField

[WARNING] Try to use a single 'var' statement per scope.
(eventType);}}var ninput; ---> var  <--- type=this._type!=DwtInputField.PASSWORD?

[WARNING] Try to use a single 'var' statement per scope.
=type;this._inputField=ninput; ---> var  <--- size=params?params.size:oinput.

[WARNING] Try to use a single 'var' statement per scope.
?params.size:oinput.size; ---> var  <--- maxLen=params?params.maxLen:oinput.

[WARNING] Try to use a single 'var' statement per scope.
this._makeFocusable(ninput);for( ---> var  <--- eventType in this._inputEventHandlers){ninput[eventType

[WARNING] The variable eventType has already been declared in the same scope...
._makeFocusable(ninput);for(var  ---> eventType <---  in this._inputEventHandlers){ninput[eventType]

[WARNING] Try to use a single 'var' statement per scope.
var fragment=document.createDocumentFragment(); ---> var  <--- child=this.getHtmlElement().firstChild;

[WARNING] Try to use a single 'var' statement per scope.
).firstChild;while(child){ ---> var  <--- sibling=child.nextSibling;fragment.appendChild(

[WARNING] Try to use a single 'var' statement per scope.
_createHtmlFromTemplate.apply(this,arguments); ---> var  <--- inputEl=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
addMember(this.getInputElement()); ---> var  <--- showCheckboxEl=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
var htmlElement=this.getHtmlElement(); ---> var  <--- templatePrefix="dwt.Widgets#";if(!params.style

[WARNING] Try to use a single 'var' statement per scope.
notifyListeners(DwtEvent.ONMOUSEDOWN,mouseEv); ---> var  <--- sash=mouseEv.dwtObj;if(sash.

[WARNING] Try to use a single 'var' statement per scope.
mouseEvent;mouseEv.setFromDhtmlEvent(ev); ---> var  <--- delta=0;var sash=DwtMouseEventCapture.getTargetObj

[WARNING] Try to use a single 'var' statement per scope.
(ev);var delta=0; ---> var  <--- sash=DwtMouseEventCapture.getTargetObj();if(

[WARNING] Try to use a single 'var' statement per scope.
true,false);returnfalse;} ---> var  <--- sash=DwtMouseEventCapture.getTargetObj();if(

[WARNING] Try to use a single 'var' statement per scope.
placeControl=this.getChild(index); ---> var  <--- placeEl=placeControl?placeControl.getHtmlElement().

[WARNING] Try to use a single 'var' statement per scope.
);if(this._itemsEl){ ---> var  <--- itemEl=this._createItemElement(child.toolbarItemTemplate)

[WARNING] Try to use a single 'var' statement per scope.
returntrue;}}break;default: ---> var  <--- item=this._getCurrentFocusItem();if(

[WARNING] Try to use a single 'var' statement per scope.
itemId:this._createItemId()}; ---> var  <--- html=AjxTemplate.expand(templateId,data)

[WARNING] Try to use a single 'var' statement per scope.
AjxTemplate.expand(templateId,data); ---> var  <--- cont=AjxStringUtil.calcDIV();cont.

[WARNING] Try to use a single 'var' statement per scope.
if(kbm.isEnabled()){ ---> var  <--- kmm=kbm.__keyMapMgr;if(kmm)

[WARNING] Try to use a single 'var' statement per scope.
index=this.__getButtonIndex(id); ---> var  <--- prev=this.getChild(index-1)

[WARNING] Try to use a single 'var' statement per scope.
this.getChild(index-1); ---> var  <--- next=this.getChild(index+1)

[WARNING] Try to use a single 'var' statement per scope.
),DwtToolBar._NEXT_PREV_RE);}} ---> var  <--- first=this.getChild(0);if

[WARNING] Try to use a single 'var' statement per scope.
(),DwtToolBar.FIRST_ITEM);} ---> var  <--- last=this.getChild(this.getItemCount(

[WARNING] Try to use a single 'var' statement per scope.
fromElementId(id):id;for( ---> var  <--- i=0;i<=this.getItemCount(

[WARNING] The variable params has already been declared in the same scope...
length==0){return;}var  ---> params <--- =Dwt.getParams(arguments,DwtToolBarButton.PARAMS

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=AjxTemplate.expand(templateId); ---> var  <--- params=AjxTemplate.getParams(templateId);this

[WARNING] Try to use a single 'var' statement per scope.
(this._mouseOutListener,this)); ---> var  <--- events=[DwtEvent.ONCLICK,DwtEvent.ONDBLCLICK

[WARNING] Try to use a single 'var' statement per scope.
ONMOUSEWHEEL,DwtEvent.ONSCROLL];for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
<events.length;i++){ ---> var  <--- event=events[i];Dwt.setHandler

[WARNING] Try to use a single 'var' statement per scope.
getShell(window).getSize(); ---> var  <--- wdWidth=wdSize.x,wdHeight=wdSize.

[WARNING] Try to use a single 'var' statement per scope.
.x,wdHeight=wdSize.y; ---> var  <--- tooltipX,tooltipY,baseLoc;var baseEl=obj

[WARNING] Try to use a single 'var' statement per scope.
y;var tooltipX,tooltipY,baseLoc; ---> var  <--- baseEl=obj&&obj.getTooltipBase(hoverEv)

[WARNING] Try to use a single 'var' statement per scope.
baseLoc=Dwt.toWindow(baseEl); ---> var  <--- baseSz=Dwt.getSize(baseEl);tooltipX

[WARNING] Try to use a single 'var' statement per scope.
tooltipY=startY+this._offsetY;} ---> var  <--- popupSize=Dwt.getSize(this._div)

[WARNING] Try to use a single 'var' statement per scope.
Dwt.getSize(this._div); ---> var  <--- popupWidth=popupSize.x,popupHeight=popupSize.

[WARNING] Try to use a single 'var' statement per scope.
this._div,tooltipX,tooltipY); ---> var  <--- zIndex=this._dialog?this._dialog.

[WARNING] Try to use a single 'var' statement per scope.
Dwt.toWindow(this._div); ---> var  <--- size=Dwt.getSize(this._div)

[WARNING] Try to use a single 'var' statement per scope.
obj.isZmOrganizer){returnobj;} ---> var  <--- cachedOrganizer=obj&&appCtxt.cacheGet(obj.

[WARNING] Try to use a single 'var' statement per scope.
(expanded,null,skipNotify);} ---> var  <--- a=this.getChildren();for(

[WARNING] Try to use a single 'var' statement per scope.
=this.getChildren();for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
;}break;caseDwtKeyMap.PREV: ---> var  <--- ti=this._tree._getNextTreeItem(false)

[WARNING] The variable ti has already been declared in the same scope...
}break;caseDwtKeyMap.PREV:var  ---> ti <--- =this._tree._getNextTreeItem(false);

[WARNING] Try to use a single 'var' statement per scope.
DwtKeyMap.SELECT_FIRST:caseDwtKeyMap.SELECT_LAST: ---> var  <--- ti=(actionCode===DwtKeyMap.SELECT_FIRST)?

[WARNING] The variable ti has already been declared in the same scope...
.SELECT_FIRST:caseDwtKeyMap.SELECT_LAST:var  ---> ti <--- =(actionCode===DwtKeyMap.SELECT_FIRST)?this

[WARNING] Try to use a single 'var' statement per scope.
_children.size()>0){ ---> var  <--- firstChild=this._children.get(0)

[WARNING] Try to use a single 'var' statement per scope.
}}break;caseDwtKeyMap.SUBMENU: ---> var  <--- target=this.getHtmlElement();var p

[WARNING] Try to use a single 'var' statement per scope.
var target=this.getHtmlElement(); ---> var  <--- p=Dwt.toWindow(target,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(target,0,0); ---> var  <--- s=this.getSize();var docX

[WARNING] Try to use a single 'var' statement per scope.
var s=this.getSize(); ---> var  <--- docX=p.x+s.x/

[WARNING] Try to use a single 'var' statement per scope.
.x+s.x/4; ---> var  <--- docY=p.y+s.y/

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._dynamicWidth){ ---> var  <--- tableNode=document.getElementById(data.id+

[WARNING] Try to use a single 'var' statement per scope.
var id=this._htmlElId+"_table"; ---> var  <--- treeItemTableEl=document.getElementById(id);var 

[WARNING] Try to use a single 'var' statement per scope.
treeItemTableEl=document.getElementById(id); ---> var  <--- treeItemDivEl=document.getElementById(this._htmlElId+

[WARNING] Try to use a single 'var' statement per scope.
getElementById(this._htmlElId+"_div"); ---> var  <--- treeItemEl=this.getHtmlElement();var newClassName

[WARNING] Try to use a single 'var' statement per scope.
var treeItemEl=this.getHtmlElement(); ---> var  <--- newClassName=this._origClassName+" "+className;

[WARNING] Try to use a single 'var' statement per scope.
(DwtEvent.ONCONTEXTMENU);}for( ---> var  <--- i=0;i<events.length;

[WARNING] Try to use a single 'var' statement per scope.
,DwtTreeItem._nodeIconMouseDownHdlr);}}} ---> var  <--- childDiv=this._childDiv;var numChildren=childDiv

[WARNING] Try to use a single 'var' statement per scope.
}}var childDiv=this._childDiv; ---> var  <--- numChildren=childDiv.childNodes.length;if(

[WARNING] Try to use a single 'var' statement per scope.
setPosition(icon,Dwt.ABSOLUTE_STYLE); ---> var  <--- table=document.createElement("table");icon

[WARNING] Try to use a single 'var' statement per scope.
.cellSpacing=table.cellPadding=0; ---> var  <--- row=table.insertRow(0);var 

[WARNING] Try to use a single 'var' statement per scope.
row=table.insertRow(0); ---> var  <--- i=0;var c=row.insertCell

[WARNING] Try to use a single 'var' statement per scope.
(0);var i=0; ---> var  <--- c=row.insertCell(i++);

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv._stopPropagation=

[WARNING] Try to use a single 'var' statement per scope.
._children.getArray();for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
<a.length;i++){ ---> var  <--- treeItem=a[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
treeItem.div&&this._childDiv){ ---> var  <--- div=treeItem.div=document.createElement(

[WARNING] Try to use a single 'var' statement per scope.
).setAttribute("aria-selected",selected); ---> var  <--- treeEl=this._tree.getHtmlElement();

[WARNING] Try to use a single 'var' statement per scope.
treeItem._nodeCell)){return;} ---> var  <--- targetElement=DwtUiEvent.getTargetWithProp(ev,"id")

[WARNING] Try to use a single 'var' statement per scope.
==treeItem._childDiv){return;} ---> var  <--- obj=DwtControl.getTargetControl(ev);var 

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- mouseEv=DwtShell.mouseEvent;mouseEv.setFromDhtmlEvent(

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.getTargetControl(ev); ---> var  <--- prevent=obj?obj.preventContextMenu():

[WARNING] Try to use a single 'var' statement per scope.
;}this._setEventHdlrs(events); ---> var  <--- style=params.style;if(!style

[WARNING] Try to use a single 'var' statement per scope.
=this.getItems();for( ---> var  <--- i=0;i<items.length;

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- sz=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
._selectedItems.size();for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- sz=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.size(); ---> var  <--- da;var j=0;var alreadySelected=

[WARNING] Try to use a single 'var' statement per scope.
_selectedItems.size();var da; ---> var  <--- j=0;var alreadySelected=false;for

[WARNING] Try to use a single 'var' statement per scope.
;var da;var j=0; ---> var  <--- alreadySelected=false;for(var i=0

[WARNING] Try to use a single 'var' statement per scope.
0;var alreadySelected=false;for( ---> var  <--- i=0;i<sz;i++

[WARNING] Try to use a single 'var' statement per scope.
var thisHtmlElement=this._getContainerElement(); ---> var  <--- numChildren=thisHtmlElement.childNodes.length;if(

[WARNING] Try to use a single 'var' statement per scope.
);children.sort(cmp); ---> var  <--- fragment=document.createDocumentFragment();AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
var sel=this.getSelection(); ---> var  <--- curItem=(sel&&sel.length)?

[WARNING] Try to use a single 'var' statement per scope.
)?sel[0]:null; ---> var  <--- nextItem=null,idx=-1;var 

[WARNING] Try to use a single 'var' statement per scope.
nextItem=null,idx=-1; ---> var  <--- list=this.getTreeItemList(true);if

[WARNING] Try to use a single 'var' statement per scope.
);if(curItem){for( ---> var  <--- i=0,len=list.length;

[WARNING] Try to use a single 'var' statement per scope.
;i<len;i++){ ---> var  <--- ti=list[i];if(ti

[WARNING] Try to use a single 'var' statement per scope.
){var parent=treeItem||this; ---> var  <--- children=parent.getChildren?parent.getChildren(

[WARNING] Try to use a single 'var' statement per scope.
getChildren():[];for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
(item,ev){var i; ---> var  <--- a=this._selectedItems.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- numSelectedItems=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
,ev,DwtShell.treeEvent);} ---> var  <--- setSelection=false;var a=this._selectedItems

[WARNING] Try to use a single 'var' statement per scope.
treeEvent);}var setSelection=false; ---> var  <--- a=this._selectedItems.getArray();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.getArray(); ---> var  <--- numSelectedItems=this._selectedItems.size();

[WARNING] Try to use a single 'var' statement per scope.
=this._selectedItems.size(); ---> var  <--- da;var j=0;for(i

[WARNING] Try to use a single 'var' statement per scope.
_selectedItems.size();var da; ---> var  <--- j=0;for(i=0;

[WARNING] Try to use a single 'var' statement per scope.
Date(date.getTime()); ---> var  <--- oldDate=this._date;var layout=false

[WARNING] Try to use a single 'var' statement per scope.
);var oldDate=this._date; ---> var  <--- layout=false;var notify=false;var 

[WARNING] Try to use a single 'var' statement per scope.
this._date;var layout=false; ---> var  <--- notify=false;var cellId;if(this

[WARNING] Try to use a single 'var' statement per scope.
layout=false;var notify=false; ---> var  <--- cellId;if(this._date2CellId!=null)

[WARNING] Try to use a single 'var' statement per scope.
if(this._date2CellId!=null){ ---> var  <--- idx=(newDate.getFullYear()*10000

[WARNING] Try to use a single 'var' statement per scope.
100)+newDate.getDate(); ---> var  <--- cellId=this._date2CellId[idx];if

[WARNING] The variable cellId has already been declared in the same scope...
)+newDate.getDate();var  ---> cellId <--- =this._date2CellId[idx];if(

[WARNING] Try to use a single 'var' statement per scope.
._selectedCellId){notify=true;} ---> var  <--- cell=document.getElementById(cellId);if

[WARNING] Try to use a single 'var' statement per scope.
}if(notify&&!skipNotify){ ---> var  <--- type=dblClick?DwtCalendar.DATE_DBL_CLICKED:DwtCalendar.

[WARNING] Try to use a single 'var' statement per scope.
null){return;}var cell; ---> var  <--- aDate;if(clear){for(aDate

[WARNING] Try to use a single 'var' statement per scope.
,DwtCalendar._NORMAL);}}} ---> var  <--- cellId;for(var i in dates){

[WARNING] Try to use a single 'var' statement per scope.
;}}}var cellId;for( ---> var  <--- i in dates){if(dates.hasOwnProperty

[WARNING] Try to use a single 'var' statement per scope.
)):(i-firstDayOfWeek); ---> var  <--- dowCell=document.getElementById(this._getDOWCellId(

[WARNING] Try to use a single 'var' statement per scope.
);date.setDate(1); ---> var  <--- year=date.getFullYear();var month

[WARNING] Try to use a single 'var' statement per scope.
var year=date.getFullYear(); ---> var  <--- month=date.getMonth();var firstDay

[WARNING] Try to use a single 'var' statement per scope.
var month=date.getMonth(); ---> var  <--- firstDay=date.getDay();var daysInMonth

[WARNING] Try to use a single 'var' statement per scope.
var firstDay=date.getDay(); ---> var  <--- daysInMonth=this._getDaysInMonth(month,year)

[WARNING] Try to use a single 'var' statement per scope.
this._getDaysInMonth(month,year); ---> var  <--- day=1;var nextMoDay=1;this

[WARNING] Try to use a single 'var' statement per scope.
,year);var day=1; ---> var  <--- nextMoDay=1;this._date2CellId=new Object

[WARNING] Try to use a single 'var' statement per scope.
();this._selectedDayElId=null; ---> var  <--- lastMoDay,lastMoYear,lastMoMonth,nextMoMonth,nextMoYear;

[WARNING] Try to use a single 'var' statement per scope.
;nextMoYear=year;}}for( ---> var  <--- i=0;i<6;i++

[WARNING] Try to use a single 'var' statement per scope.
<6;i++){for( ---> var  <--- j=0;j<7;j++

[WARNING] Try to use a single 'var' statement per scope.
;j<7;j++){ ---> var  <--- dayCell=document.getElementById(this._getDayCellId(

[WARNING] Try to use a single 'var' statement per scope.
;}if(this._showWeekNumber){ ---> var  <--- kwCellId=this._getWeekNumberCellId("kw"+i*

[WARNING] Try to use a single 'var' statement per scope.
_getWeekNumberCellId("kw"+i*7); ---> var  <--- kwCell=document.getElementById(kwCellId);if

[WARNING] Try to use a single 'var' statement per scope.
(kwCellId);if(kwCell){ ---> var  <--- firstDayCell=document.getElementById(this._getDayCellId(

[WARNING] Try to use a single 'var' statement per scope.
(this._getDayCellId(0)); ---> var  <--- start=new Date(cell._year,cell

[WARNING] Try to use a single 'var' statement per scope.
._getDayCellId(DwtCalendar._LAST_DAY_CELL_IDX)); ---> var  <--- daysInMo=this._getDaysInMonth(cell._month,

[WARNING] Try to use a single 'var' statement per scope.
cell._month,cell._year); ---> var  <--- end;if(cell._day<daysInMo)

[WARNING] Try to use a single 'var' statement per scope.
_setToday=function(){var cell; ---> var  <--- today=new Date();var todayDay=

[WARNING] Try to use a single 'var' statement per scope.
;var today=new Date(); ---> var  <--- todayDay=today.getDate();if(

[WARNING] Try to use a single 'var' statement per scope.
=this._date.getDate(); ---> var  <--- month=this._date.getMonth();

[WARNING] Try to use a single 'var' statement per scope.
=this._date.getMonth(); ---> var  <--- year=this._date.getFullYear();

[WARNING] Try to use a single 'var' statement per scope.
=this._date.getFullYear(); ---> var  <--- cell;if(this._selectedDayElId){cell

[WARNING] Try to use a single 'var' statement per scope.
(cell,DwtCalendar._DESELECTED);} ---> var  <--- cellId=this._date2CellId[(year*10000

[WARNING] Try to use a single 'var' statement per scope.
||mode==DwtCalendar._DESELECTED)){ ---> var  <--- firstCellIdx=Math.floor(this._getDayCellIndex(

[WARNING] Try to use a single 'var' statement per scope.
)/7)*7;for( ---> var  <--- i=0;i<7;i++

[WARNING] Try to use a single 'var' statement per scope.
++){className=this._origDayClassName; ---> var  <--- aCell=document.getElementById(this._getDayCellId(

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._monthCell); ---> var  <--- formatter=DwtCalendar.getMonthFormatter();var date

[WARNING] Try to use a single 'var' statement per scope.
var formatter=DwtCalendar.getMonthFormatter(); ---> var  <--- date=new Date(year,month);

[WARNING] Try to use a single 'var' statement per scope.
var html=new Array(100); ---> var  <--- idx=0;this._monthCell="t:"+

[WARNING] Try to use a single 'var' statement per scope.
idx++]="</td>";}for( ---> var  <--- i=0;i<7;i++

[WARNING] Try to use a single 'var' statement per scope.
[idx++]="</tr>";for( ---> var  <--- i=0;i<6;i++

[WARNING] The variable i has already been declared in the same scope...
idx++]="</tr>";for(var  ---> i <--- =0;i<6;i++)

[WARNING] Try to use a single 'var' statement per scope.
*7)+"'>&nbsp;</td>";}for( ---> var  <--- j=0;j<7;j++

[WARNING] Try to use a single 'var' statement per scope.
.charAt(0)=="b"){ ---> var  <--- img;if(target.firstChild==null)

[WARNING] Try to use a single 'var' statement per scope.
.charAt(0)=="b"){ ---> var  <--- img;target.className=DwtCalendar._BUTTON_CLASS;

[WARNING] Try to use a single 'var' statement per scope.
.charAt(0)=="b"){ ---> var  <--- img;if(target.firstChild==null)

[WARNING] Try to use a single 'var' statement per scope.
){DwtMenu.closeActiveMenu();} ---> var  <--- sDate=new Date(target._year,target

[WARNING] Try to use a single 'var' statement per scope.
.charAt(0)=="b"){ ---> var  <--- img;if(target.firstChild==null)

[WARNING] Try to use a single 'var' statement per scope.
this._fieldIds[field]=id; ---> var  <--- tWidth="20ex";if(titleWidth){tWidth

[WARNING] Try to use a single 'var' statement per scope.
(noWrap){myWrap="off";} ---> var  <--- id=Dwt.getNextId();this.

[WARNING] Try to use a single 'var' statement per scope.
(titleWidth){tWidth=titleWidth;} ---> var  <--- id=Dwt.getNextId();this.

[WARNING] Try to use a single 'var' statement per scope.
);if(tabKey==1){ ---> var  <--- tabView=this.getTabView(tabKey);if

[WARNING] Try to use a single 'var' statement per scope.
(var i in this._tabs){ ---> var  <--- button=this._tabs[i].button

[WARNING] Try to use a single 'var' statement per scope.
if(tabKey==this._currentTabKey){ ---> var  <--- tabGroup=tabView.getTabGroupMember();this.

[WARNING] Try to use a single 'var' statement per scope.
tab=this.getTab(tabKey); ---> var  <--- tabView=tab&&tab.view;if(

[WARNING] Try to use a single 'var' statement per scope.
view;if(tabView instanceof AjxCallback){ ---> var  <--- callback=tabView;tabView=callback.run(

[WARNING] Try to use a single 'var' statement per scope.
this.setTabView(tabKey,tabView); ---> var  <--- size=this._getTabSize();tabView.

[WARNING] Try to use a single 'var' statement per scope.
(tabKey);if(ntab){ ---> var  <--- otab=this.getTab(this._currentTabKey)

[WARNING] Try to use a single 'var' statement per scope.
if(kbm.isEnabled()){ ---> var  <--- kmm=kbm.__keyMapMgr;if(!kmm

[WARNING] Try to use a single 'var' statement per scope.
if(!kmm){return;} ---> var  <--- num=this.getNumTabs();var seqs

[WARNING] Try to use a single 'var' statement per scope.
var num=this.getNumTabs(); ---> var  <--- seqs=kmm.getKeySequences(DwtKeyMap.MAP_TAB_VIEW,

[WARNING] Try to use a single 'var' statement per scope.
DwtKeyMap.MAP_TAB_VIEW,"GoToTab");for( ---> var  <--- k=0;k<seqs.length;

[WARNING] Try to use a single 'var' statement per scope.
<seqs.length;k++){ ---> var  <--- ks=seqs[k];for(var 

[WARNING] Try to use a single 'var' statement per scope.
ks=seqs[k];for( ---> var  <--- i=1;i<=num;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<=num;i++){ ---> var  <--- keycode=48+i;var newKs=ks

[WARNING] Try to use a single 'var' statement per scope.
){var keycode=48+i; ---> var  <--- newKs=ks.replace(/NNN/,keycode)

[WARNING] Try to use a single 'var' statement per scope.
;}break;caseDwtKeyMap.PREV_TAB: ---> var  <--- curTab=this.getCurrentTab();if(

[WARNING] The variable curTab has already been declared in the same scope...
}break;caseDwtKeyMap.PREV_TAB:var  ---> curTab <--- =this.getCurrentTab();if(curTab

[WARNING] Try to use a single 'var' statement per scope.
-1);}break;default: ---> var  <--- m=actionCode.match(DwtKeyMap.GOTO_TAB_RE)

[WARNING] Try to use a single 'var' statement per scope.
if(m&&m.length){ ---> var  <--- idx=m[1];if((

[WARNING] Try to use a single 'var' statement per scope.
(var curTabKey in this._tabs){ ---> var  <--- tabView=this._tabs[curTabKey].view

[WARNING] Try to use a single 'var' statement per scope.
&&!(tabView instanceof AjxCallback)){ ---> var  <--- contentHeight;contentHeight=contentHeight||height-Dwt.

[WARNING] Try to use a single 'var' statement per scope.
var size=this.getSize(); ---> var  <--- width=size.x||this.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
||this.getHtmlElement().clientWidth; ---> var  <--- height=size.y||this.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
||this.getHtmlElement().clientHeight; ---> var  <--- tabBarSize=this._tabBar.getSize();

[WARNING] Try to use a single 'var' statement per scope.
=this._tabBar.getSize(); ---> var  <--- tabBarHeight=tabBarSize.y||this._tabBar.

[WARNING] Try to use a single 'var' statement per scope.
(var curTabKey in this._tabs){ ---> var  <--- tabView=this._tabs[curTabKey].view

[WARNING] Try to use a single 'var' statement per scope.
getHtmlElement().style.height); ---> var  <--- units=AjxStringUtil.getUnitsFromSizeString(this.parent.

[WARNING] Try to use a single 'var' statement per scope.
.openTab(tabKey,true);} ---> var  <--- sindex=this.__getButtonIndex(this._currentTabKey)

[WARNING] Try to use a single 'var' statement per scope.
;if(sindex!=-1){ ---> var  <--- nindex=this.__getButtonIndex(tabKey);if

[WARNING] Try to use a single 'var' statement per scope.
=this._buttons.length;for( ---> var  <--- ix=0;ix<cnt;ix++

[WARNING] Try to use a single 'var' statement per scope.
(ix==tabK){continue;} ---> var  <--- button=this._buttons[ix];if

[WARNING] Try to use a single 'var' statement per scope.
;button.setClosed();}} ---> var  <--- button=this._buttons[tabK];if

[WARNING] The variable button has already been declared in the same scope...
button.setClosed();}}var  ---> button <--- =this._buttons[tabK];if(

[WARNING] Try to use a single 'var' statement per scope.
if(ev&&ev.target){ ---> var  <--- elem=ev.target;while(elem.

[WARNING] Try to use a single 'var' statement per scope.
.openTab(tabKey,true);} ---> var  <--- sindex=this.__getButtonIndex(this._currentTabKey)

[WARNING] Try to use a single 'var' statement per scope.
;if(sindex!=-1){ ---> var  <--- nindex=this.__getButtonIndex(tabKey);if

[WARNING] Try to use a single 'var' statement per scope.
(this,this.goNext)); ---> var  <--- prevButton=new DwtDialog_ButtonDescriptor(DwtWizardDialog.PREV_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
(this,this.goPrev)); ---> var  <--- finishButton=new DwtDialog_ButtonDescriptor(DwtWizardDialog.FINISH_BUTTON,AjxMsg

[WARNING] Try to use a single 'var' statement per scope.
(),"background-color");var row1; ---> var  <--- col1;row1=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
this._progressBar.getHtmlElement()); ---> var  <--- rowSep;var colSep;rowSep=this._table

[WARNING] Try to use a single 'var' statement per scope.
.getHtmlElement());var rowSep; ---> var  <--- colSep;rowSep=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
.style.width=this._contentW; ---> var  <--- sepDiv=document.createElement("div");sepDiv

[WARNING] Try to use a single 'var' statement per scope.
"5px";colSep.appendChild(sepDiv); ---> var  <--- row2;var col2;row2=this._table

[WARNING] Try to use a single 'var' statement per scope.
.appendChild(sepDiv);var row2; ---> var  <--- col2;row2=this._table.insertRow(

[WARNING] Try to use a single 'var' statement per scope.
.add(child);var row; ---> var  <--- col;this._table.width="100%";

[WARNING] Try to use a single 'var' statement per scope.
.congruent;this._hrCount=0; ---> var  <--- options=params.options;if(options)

[WARNING] Try to use a single 'var' statement per scope.
options;if(options){for( ---> var  <--- i=0;i<options.length;

[WARNING] Try to use a single 'var' statement per scope.
image||null;var opt=null; ---> var  <--- val=null;var id=null;if

[WARNING] Try to use a single 'var' statement per scope.
opt=null;var val=null; ---> var  <--- id=null;if(typeof(option)

[WARNING] Try to use a single 'var' statement per scope.
{this._setSelectedOption(opt);} ---> var  <--- table=this._pseudoItemsEl;var row=table

[WARNING] Try to use a single 'var' statement per scope.
;}var table=this._pseudoItemsEl; ---> var  <--- row=table.insertRow(-1);

[WARNING] Try to use a single 'var' statement per scope.
=table.insertRow(-1); ---> var  <--- cell=row.insertCell(-1);

[WARNING] Try to use a single 'var' statement per scope.
=this._options.size(); ---> var  <--- value=option.getValue();var index

[WARNING] Try to use a single 'var' statement per scope.
var value=option.getValue(); ---> var  <--- index=this._optionValuesToIndices[value];if

[WARNING] Try to use a single 'var' statement per scope.
){if(size>0){ ---> var  <--- newSelIndex=(index>=size)?size-

[WARNING] Try to use a single 'var' statement per scope.
this._optionValuesToIndices[value];for( ---> var  <--- i=index;i<size;i++

[WARNING] Try to use a single 'var' statement per scope.
;i<size;i++){ ---> var  <--- option=this._options.get(i)

[WARNING] The variable option has already been declared in the same scope...
i<size;i++){var  ---> option <--- =this._options.get(i);

[WARNING] Try to use a single 'var' statement per scope.
if(!menu){return;} ---> var  <--- selectElement=this._selectEl;var selectBounds=Dwt

[WARNING] Try to use a single 'var' statement per scope.
;}var selectElement=this._selectEl; ---> var  <--- selectBounds=Dwt.getBounds(selectElement);var 

[WARNING] Try to use a single 'var' statement per scope.
selectBounds=Dwt.getBounds(selectElement); ---> var  <--- verticalBorder=(selectElement.style.borderLeftWidth==""

[WARNING] Try to use a single 'var' statement per scope.
parseInt(selectElement.style.borderLeftWidth); ---> var  <--- horizontalBorder=(selectElement.style.borderTopWidth==""

[WARNING] Try to use a single 'var' statement per scope.
parseInt(selectElement.style.borderBottomWidth); ---> var  <--- selectLocation=Dwt.toWindow(selectElement,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(selectElement,0,0); ---> var  <--- x=selectLocation.x+verticalBorder;var y

[WARNING] Try to use a single 'var' statement per scope.
var x=selectLocation.x+verticalBorder; ---> var  <--- y=selectLocation.y+selectBounds.height+

[WARNING] Try to use a single 'var' statement per scope.
enabled){option.enabled=enabled; ---> var  <--- item=option.getItem();if(

[WARNING] Try to use a single 'var' statement per scope.
._options.getArray();for( ---> var  <--- i=0;i<opts.length;

[WARNING] Try to use a single 'var' statement per scope.
index=this._optionValuesToIndices[optionValue]; ---> var  <--- option=null;if(index!=null)

[WARNING] Try to use a single 'var' statement per scope.
"block";var elm=this._selectEl; ---> var  <--- width=elm.offsetWidth;if(width)

[WARNING] Try to use a single 'var' statement per scope.
){var containerTemplateId=DwtSelect._CONTAINER_TEMPLATE; ---> var  <--- containerData={id:data.id,selectTemplateId

[WARNING] Try to use a single 'var' statement per scope.
._pseudoItemsEl.style.display="block"; ---> var  <--- el=this._containerEl=this.getHtmlElement(

[WARNING] Try to use a single 'var' statement per scope.
var menu=new DwtSelectMenu(this); ---> var  <--- mi;for(var i=0,len

[WARNING] Try to use a single 'var' statement per scope.
(this);var mi;for( ---> var  <--- i=0,len=this._options.

[WARNING] Try to use a single 'var' statement per scope.
;i<len;++i){ ---> var  <--- option=this._options.get(i)

[WARNING] Try to use a single 'var' statement per scope.
.setEnabled(false);}else{ ---> var  <--- mi=new DwtSelectMenuItem(menu,option.id

[WARNING] The variable mi has already been declared in the same scope...
setEnabled(false);}else{var  ---> mi <--- =new DwtSelectMenuItem(menu,option.id||

[WARNING] Try to use a single 'var' statement per scope.
(menu._htmlElId+"_option_")); ---> var  <--- image=option.getImage();if(

[WARNING] Try to use a single 'var' statement per scope.
{mi.setImage(image);} ---> var  <--- text=option.getDisplayValue();if(

[WARNING] Try to use a single 'var' statement per scope.
;option.setItem(mi);} ---> var  <--- select=this;menu.addPopupListener(function(

[WARNING] Try to use a single 'var' statement per scope.
){var menuItem=ev.item; ---> var  <--- optionIndex=menuItem._optionIndex;var opt=this

[WARNING] Try to use a single 'var' statement per scope.
item;var optionIndex=menuItem._optionIndex; ---> var  <--- opt=this._options.get(optionIndex)

[WARNING] Try to use a single 'var' statement per scope.
this._options.get(optionIndex); ---> var  <--- oldValue=this.getValue();this.

[WARNING] Try to use a single 'var' statement per scope.
);this._setSelectedOption(opt); ---> var  <--- args=new Object();args.selectObj

[WARNING] Try to use a single 'var' statement per scope.
();args.oldValue=oldValue; ---> var  <--- event=DwtUiEvent.getEvent(ev);event

[WARNING] Try to use a single 'var' statement per scope.
()||option.getDisplayValue(); ---> var  <--- image=option.getImage();if(

[WARNING] Try to use a single 'var' statement per scope.
return;}newOption.select(); ---> var  <--- menu=this.getMenu(true);if

[WARNING] Try to use a single 'var' statement per scope.
Dwt.CLIP:Dwt.VISIBLE); ---> var  <--- reset=function(){try{this.

[WARNING] Try to use a single 'var' statement per scope.
}catch(e){}}; ---> var  <--- resetAction=new AjxTimedAction(this,reset);

[WARNING] Try to use a single 'var' statement per scope.
var iframe=this.getIframe(); ---> var  <--- idoc=Dwt.getIframeDoc(iframe);var 

[WARNING] Try to use a single 'var' statement per scope.
idoc=Dwt.getIframeDoc(iframe); ---> var  <--- doc=AjxEnv.isIE?idoc:iframe.

[WARNING] Try to use a single 'var' statement per scope.
var iframe=this.getIframe(); ---> var  <--- win=iframe.contentWindow;if(AjxEnv.

[WARNING] Try to use a single 'var' statement per scope.
){ev=win.event;} ---> var  <--- dw;if(/mouse|context|click|select/i.test(ev.

[WARNING] Try to use a single 'var' statement per scope.
{DwtOutsideMouseEventMgr.forwardEvent(ev);} ---> var  <--- type=dw.type.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
){type="on"+type;} ---> var  <--- pos=this.getLocation();if(

[WARNING] Try to use a single 'var' statement per scope.
;if(!AjxEnv.isIE){ ---> var  <--- doc=win.document;var sl=doc

[WARNING] Try to use a single 'var' statement per scope.
){var doc=win.document; ---> var  <--- sl=doc.documentElement.scrollLeft||(doc

[WARNING] Try to use a single 'var' statement per scope.
doc.body.scrollLeft:0); ---> var  <--- st=doc.documentElement.scrollTop||(doc

[WARNING] Try to use a single 'var' statement per scope.
;dw.elementY+=pos.y; ---> var  <--- capture=DwtMouseEventCapture.getCaptureObj();capture=

[WARNING] Try to use a single 'var' statement per scope.
type,dw);}}else{ ---> var  <--- fake=document.createEvent("MouseEvents");fake

[WARNING] Try to use a single 'var' statement per scope.
myElement=document.getElementById(myId); ---> var  <--- self=DwtControl.findControl(myElement);return

[WARNING] Try to use a single 'var' statement per scope.
[],i=0,idoc; ---> var  <--- myElement=document.getElementById(myId);var 

[WARNING] Try to use a single 'var' statement per scope.
myElement=document.getElementById(myId); ---> var  <--- self=DwtControl.findControl(myElement);if

[WARNING] Try to use a single 'var' statement per scope.
body.style.margin="0";} ---> var  <--- htmlEl=idoc.firstChild&&idoc.firstChild.

[WARNING] Try to use a single 'var' statement per scope.
=this._tableEl.rows.length; ---> var  <--- row=this._tableEl.insertRow(-1

[WARNING] Try to use a single 'var' statement per scope.
._vAlign?this._vAlign:"top"; ---> var  <--- labelId=Dwt.getNextId(),valueId=

[WARNING] Try to use a single 'var' statement per scope.
,required,labelId,valueId);} ---> var  <--- id=this._propertyIdCount++;var property=

[WARNING] Try to use a single 'var' statement per scope.
}var id=this._propertyIdCount++; ---> var  <--- property={id:id,index:index

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=label;if(required){ ---> var  <--- asterisk=this._tableEl.ownerDocument.createElement(

[WARNING] Try to use a single 'var' statement per scope.
this._tabGroup.addMember(value); ---> var  <--- input=value.getInputElement&&value.getInputElement(

[WARNING] Try to use a single 'var' statement per scope.
[id];if(prop){ ---> var  <--- propIndex=prop.index;if(prop.

[WARNING] Try to use a single 'var' statement per scope.
index;if(prop.visible){ ---> var  <--- tableIndex=this.__getTableIndex(propIndex);var 

[WARNING] Try to use a single 'var' statement per scope.
tableIndex=this.__getTableIndex(propIndex); ---> var  <--- row=this._tableEl.rows[tableIndex]

[WARNING] Try to use a single 'var' statement per scope.
}prop.row=null;for( ---> var  <--- i=propIndex+1;i<this.

[WARNING] Try to use a single 'var' statement per scope.
[prop.index],visible); ---> var  <--- tabValue=prop.tabValue;if(tabValue.

[WARNING] Try to use a single 'var' statement per scope.
._insetEl;element.innerHTML=htmlContent; ---> var  <--- inputElements=element.getElementsByTagName("input");for

[WARNING] Try to use a single 'var' statement per scope.
element.getElementsByTagName("input");for( ---> var  <--- i=0;i<inputElements.length;

[WARNING] Try to use a single 'var' statement per scope.
labelNode=document.createTextNode(text); ---> var  <--- position=isRightAlign?-1:0;var 

[WARNING] Try to use a single 'var' statement per scope.
position=isRightAlign?-1:0; ---> var  <--- labelCell=this._row.insertCell(position)

[WARNING] Try to use a single 'var' statement per scope.
;div.style.position="relative"; ---> var  <--- table=document.createElement("table");table

[WARNING] Try to use a single 'var' statement per scope.
){var target=event.target; ---> var  <--- tag=target.tagName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
,n=schema.length;for( ---> var  <--- i=0;i<n;++i

[WARNING] Try to use a single 'var' statement per scope.
,n=schema.length;for( ---> var  <--- i=0;i<n;++i

[WARNING] Try to use a single 'var' statement per scope.
?parent._level+1:0; ---> var  <--- tr=this.getTable().firstChild.

[WARNING] Try to use a single 'var' statement per scope.
;prop._propertyEditor=this;for( ---> var  <--- i in DwtPropertyEditor._prop_functions){prop[i

[WARNING] Try to use a single 'var' statement per scope.
.className+=" "+prop.type; ---> var  <--- tdLabel=document.createElement("td");tdLabel

[WARNING] Try to use a single 'var' statement per scope.
;}tr.appendChild(tdLabel); ---> var  <--- html=AjxStringUtil.htmlEncode(prop.label||

[WARNING] Try to use a single 'var' statement per scope.
"<span class='DwtPropertyEditor-required'>*</span>";}tdLabel.innerHTML=html; ---> var  <--- tdField=document.createElement("td");tdField

[WARNING] Try to use a single 'var' statement per scope.
=tdField.offsetWidth;}}else{ ---> var  <--- td=document.createElement("td");td

[WARNING] Try to use a single 'var' statement per scope.
.createTextNode(prop.value)); ---> var  <--- table=document.createElement("table");table

[WARNING] Try to use a single 'var' statement per scope.
.createElement("tbody"));for( ---> var  <--- i=0;i<prop.checkBox.

[WARNING] Try to use a single 'var' statement per scope.
.checkBox.length;i++){ ---> var  <--- tr=document.createElement("tr");var 

[WARNING] Try to use a single 'var' statement per scope.
tr=document.createElement("tr"); ---> var  <--- tdField1=document.createElement("td");tdField1

[WARNING] Try to use a single 'var' statement per scope.
"td");tdField1.className="field"; ---> var  <--- checkBox=this._createCheckboxForGroup(prop,prop.

[WARNING] Try to use a single 'var' statement per scope.
prop.checkBox[i].label; ---> var  <--- tdField2=document.createElement("td");tdField2

[WARNING] Try to use a single 'var' statement per scope.
setText(prop._makeDisplayValue()); ---> var  <--- menu=new DwtMenu({parent:btn,

[WARNING] Try to use a single 'var' statement per scope.
);menu.setAssociatedObj(btn); ---> var  <--- cal=new DwtCalendar({parent:menu}

[WARNING] Try to use a single 'var' statement per scope.
DwtCalendar({parent:menu}); ---> var  <--- date=new Date();date.setTime

[WARNING] Try to use a single 'var' statement per scope.
prop.type]||DwtInputField.STRING; ---> var  <--- field=new DwtInputField({parent:this,

[WARNING] Try to use a single 'var' statement per scope.
,"*");break;case"date": ---> var  <--- date=new Date();date.setTime

[WARNING] Try to use a single 'var' statement per scope.
"":"none";if(c){ ---> var  <--- i=c.length;while(--i

[WARNING] Try to use a single 'var' statement per scope.
}}this._hidden=!visible; ---> var  <--- tr=this._getRowEl();tr.

[WARNING] Try to use a single 'var' statement per scope.
){var pe=this._propertyEditor; ---> var  <--- td=document.getElementById(this._fieldCellId)

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._fieldCellId); ---> var  <--- canvas=pe.getRelDiv();var input

[WARNING] Try to use a single 'var' statement per scope.
var canvas=pe.getRelDiv(); ---> var  <--- input=document.createElement("input");input

[WARNING] Try to use a single 'var' statement per scope.
.type=="password"?"password":"text"; ---> var  <--- left=td.offsetLeft,top=td.

[WARNING] Try to use a single 'var' statement per scope.
type){case"integer":case"number": ---> var  <--- n=new Number(val);if(

[WARNING] Try to use a single 'var' statement per scope.
"number"&&this.decimals!=null){ ---> var  <--- str=val.toString();var pos

[WARNING] Try to use a single 'var' statement per scope.
var str=val.toString(); ---> var  <--- pos=str.indexOf(".");if

[WARNING] Try to use a single 'var' statement per scope.
var x,y,w,h; ---> var  <--- pe=this._propertyEditor;var div=pe

[WARNING] Try to use a single 'var' statement per scope.
h;var pe=this._propertyEditor; ---> var  <--- div=pe._currentMsgDiv;if(!div

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=AjxStringUtil.htmlEncode(msg); ---> var  <--- table=pe.getTable();w=

[WARNING] Try to use a single 'var' statement per scope.
+"px";h=div.offsetHeight; ---> var  <--- td=document.getElementById(this._fieldCellId)

[WARNING] Try to use a single 'var' statement per scope.
){var input=this._inputField; ---> var  <--- val=this._checkValue(input.value)

[WARNING] Try to use a single 'var' statement per scope.
.onkeydown=input.onkeypress=null; ---> var  <--- td=document.getElementById(this._fieldCellId)

[WARNING] Try to use a single 'var' statement per scope.
?ev.srcElement:ev.target; ---> var  <--- chkBxs=el._prop._checkBox;var val

[WARNING] Try to use a single 'var' statement per scope.
var chkBxs=el._prop._checkBox; ---> var  <--- val=[];for(var i=

[WARNING] Try to use a single 'var' statement per scope.
;var val=[];for( ---> var  <--- i=0;i<chkBxs.length;

[WARNING] Try to use a single 'var' statement per scope.
=params.parent.getSize(); ---> var  <--- listWidth=params.listWidth||parentSz.x;

[WARNING] Try to use a single 'var' statement per scope.
=params.listWidth||parentSz.x; ---> var  <--- listHeight=params.listHeight||parentSz.y;

[WARNING] Try to use a single 'var' statement per scope.
{var data={};for( ---> var  <--- i in this._data){data[i

[WARNING] Try to use a single 'var' statement per scope.
view==DwtChooserListView.SOURCE){for( ---> var  <--- i=0;i<list.length;

[WARNING] Try to use a single 'var' statement per scope.
null,skipNotify);}}else{ ---> var  <--- data;if(this._selectStyle==DwtChooser.

[WARNING] Try to use a single 'var' statement per scope.
0]]:list;}for( ---> var  <--- i=0;i<list.length;

[WARNING] The variable i has already been declared in the same scope...
]]:list;}for(var  ---> i <--- =0;i<list.length;i

[WARNING] Try to use a single 'var' statement per scope.
if(view==DwtChooserListView.SOURCE){ ---> var  <--- list=this.sourceListView.getList();

[WARNING] The variable list has already been declared in the same scope...
(view==DwtChooserListView.SOURCE){var  ---> list <--- =this.sourceListView.getList();this

[WARNING] Try to use a single 'var' statement per scope.
<list.length;i++){ ---> var  <--- index=this._getInsertionIndex(this.sourceListView,

[WARNING] Try to use a single 'var' statement per scope.
);}if(!noResize){ ---> var  <--- curSz=this.getSize();this.

[WARNING] Try to use a single 'var' statement per scope.
if(style==DwtChooser.SINGLE_SELECT){ ---> var  <--- list=this.targetListView.getList();

[WARNING] Try to use a single 'var' statement per scope.
=this.targetListView.getList(); ---> var  <--- a=list?list.clone().

[WARNING] Try to use a single 'var' statement per scope.
);}var html=[]; ---> var  <--- idx=0;if(this._layoutStyle==

[WARNING] Try to use a single 'var' statement per scope.
idx++]="'></div><br>";}for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
idx++]="'></td>";}for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] The variable i has already been declared in the same scope...
++]="'></td>";}for(var  ---> i <--- =0;i<this._buttonInfo.length

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] The variable id has already been declared in the same scope...
_buttonInfo.length;i++){var  ---> id <--- =this._buttonInfo[i].id;

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
this._data={};for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
}}if(this._hasTextField){ ---> var  <--- params={parent:this,type:DwtInputField

[WARNING] Try to use a single 'var' statement per scope.
addMember(this.sourceListView);for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
document.getElementById(this._buttonsDivId); ---> var  <--- btnSz=Dwt.getSize(buttonsDiv);var 

[WARNING] Try to use a single 'var' statement per scope.
btnSz=Dwt.getSize(buttonsDiv); ---> var  <--- w,sh,th;if(this.

[WARNING] Try to use a single 'var' statement per scope.
=buttonId;button._buttonId=id; ---> var  <--- buttonDiv=document.getElementById(buttonDivId);buttonDiv

[WARNING] Try to use a single 'var' statement per scope.
button=DwtControl.getTargetControl(ev); ---> var  <--- id=button._buttonId;var sel=this

[WARNING] Try to use a single 'var' statement per scope.
);var id=button._buttonId; ---> var  <--- sel=this.sourceListView.getSelection();

[WARNING] Try to use a single 'var' statement per scope.
this._enableButtons();}else{ ---> var  <--- email=this._getEmailFromText();if(

[WARNING] Try to use a single 'var' statement per scope.
=this.sourceListView.getList(); ---> var  <--- targetList=this.targetListView.getList();

[WARNING] Try to use a single 'var' statement per scope.
=this.targetListView.getList(); ---> var  <--- sourceEnabled=(sForce||(this.sourceListView.

[WARNING] Try to use a single 'var' statement per scope.
()>0));for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
._buttonInfo.length;i++){ ---> var  <--- id=this._buttonInfo[i].id

[WARNING] Try to use a single 'var' statement per scope.
id].setEnabled(sourceEnabled);} ---> var  <--- targetEnabled=(tForce||(this.targetListView.

[WARNING] Try to use a single 'var' statement per scope.
._selectStyle==DwtChooser.MULTI_SELECT)){ ---> var  <--- sourceSize=sourceList?sourceList.size():

[WARNING] Try to use a single 'var' statement per scope.
?sourceList.size():0; ---> var  <--- targetSize=targetList?targetList.size():

[WARNING] Try to use a single 'var' statement per scope.
?this.sourceListView:this.targetListView; ---> var  <--- list=listView.getList();if(

[WARNING] Try to use a single 'var' statement per scope.
._activeButtonId];if(buttonId){ ---> var  <--- oldButton=DwtControl.findControl(document.getElementById(

[WARNING] Try to use a single 'var' statement per scope.
_removeButtonId:this._buttonId[id]; ---> var  <--- button=DwtControl.findControl(document.getElementById(

[WARNING] Try to use a single 'var' statement per scope.
(item)&&item.clone){ ---> var  <--- newItem=item.clone();newItem.

[WARNING] Try to use a single 'var' statement per scope.
getNextId();item=newItem;} ---> var  <--- idx=null;if(this._hasMultiButtons)

[WARNING] Try to use a single 'var' statement per scope.
){list=[];for( ---> var  <--- i=0;i<this._buttonInfo.

[WARNING] Try to use a single 'var' statement per scope.
id].getArray());} ---> var  <--- buttonIdx=this._buttonIndex[id];for

[WARNING] Try to use a single 'var' statement per scope.
<list.length;idx++){ ---> var  <--- testButtonIdx=this._buttonIndex[list[idx]

[WARNING] Try to use a single 'var' statement per scope.
(!list){returnnull;} ---> var  <--- a=list.getArray();for(

[WARNING] Try to use a single 'var' statement per scope.
=list.getArray();for( ---> var  <--- i=0;i<a.length;

[WARNING] Try to use a single 'var' statement per scope.
=this._textField.getValue(); ---> var  <--- email=AjxEmailAddress.parse(text);if

[WARNING] Try to use a single 'var' statement per scope.
el=DwtUiEvent.getTarget(ev); ---> var  <--- obj=DwtControl.findControl(el);var 

[WARNING] Try to use a single 'var' statement per scope.
obj=DwtControl.findControl(el); ---> var  <--- chooser=obj._chooser;var key=DwtKeyEvent

[WARNING] Try to use a single 'var' statement per scope.
);var chooser=obj._chooser; ---> var  <--- key=DwtKeyEvent.getCharCode(ev);if

[WARNING] Try to use a single 'var' statement per scope.
(DwtKeyEvent.IS_RETURN[key]){ ---> var  <--- email=chooser._getEmailFromText();if(

[WARNING] Try to use a single 'var' statement per scope.
._getHeaderSashLocation.call(this);} ---> var  <--- thisLoc=Dwt.toWindow(el,0,

[WARNING] Try to use a single 'var' statement per scope.
toWindow(el,0,0); ---> var  <--- contLoc=Dwt.toWindow(this._chooserParent.

[WARNING] Try to use a single 'var' statement per scope.
var div=this.getHtmlElement(); ---> var  <--- id=Dwt.getNextId();this.

[WARNING] Try to use a single 'var' statement per scope.
;this._idDownButton=id+"-down"; ---> var  <--- html=["<table class='DwtSpinner' cellspacing='0' cellpadding='0'>","<tr><td rowspan='2' class='DwtSpinner-inputCell'>","<input id='",id

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=html.join(""); ---> var  <--- b1=this._getUpButton();b1.

[WARNING] Try to use a single 'var' statement per scope.
this._btnPressed,this,"Up"); ---> var  <--- b2=this._getDownButton();b2.

[WARNING] Try to use a single 'var' statement per scope.
this._btnPressed,this,"Down"); ---> var  <--- input=this.getInputElement();if(

[WARNING] Try to use a single 'var' statement per scope.
this._rotateVal(this._direction); ---> var  <--- v2=this.getValue();this.

[WARNING] Try to use a single 'var' statement per scope.
getValue();this._timerSteps++; ---> var  <--- timeout=this._timerSteps>4?DwtSpinner.

[WARNING] Try to use a single 'var' statement per scope.
;this._btnPressCapture.release(); ---> var  <--- input=this.getInputElement();input.

[WARNING] Try to use a single 'var' statement per scope.
){this._rotateVal(dir); ---> var  <--- input=this.getInputElement();Dwt.

[WARNING] Try to use a single 'var' statement per scope.
);this.setMenu(m); ---> var  <--- cp=new DwtColorPicker(m,null,null

[WARNING] Try to use a single 'var' statement per scope.
=[];while(n){ ---> var  <--- d=DwtButtonColorPicker._hexdigits[n&15]

[WARNING] Try to use a single 'var' statement per scope.
);}this.__color=color; ---> var  <--- colorEl=this._colorEl;if(colorEl)

[WARNING] Try to use a single 'var' statement per scope.
.__color=this.__detail=color; ---> var  <--- colorEl=this._colorEl;if(colorEl)

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.SELECTION)){ ---> var  <--- selEv=DwtShell.selectionEvent;selEv.item=

[WARNING] Try to use a single 'var' statement per scope.
.isListenerRegistered(DwtEvent.SELECTION)){ ---> var  <--- selEv=DwtShell.selectionEvent;selEv.item=

[WARNING] Try to use a single 'var' statement per scope.
.getHtmlElement().innerHTML="<table class='DwtCompositeTable' border='0' cellspacing='0' cellpadding='0'><tr valign='center'></tr></table>"; ---> var  <--- row=this.getHtmlElement().firstChild.

[WARNING] Try to use a single 'var' statement per scope.
).firstChild.rows[0]; ---> var  <--- segments=this._formatter.getSegments();

[WARNING] Try to use a single 'var' statement per scope.
._formatter.getSegments();for( ---> var  <--- i=0;i<segments.length;

[WARNING] Try to use a single 'var' statement per scope.
<segments.length;i++){ ---> var  <--- segment=segments[i];var isMsgSegment=

[WARNING] Try to use a single 'var' statement per scope.
{var segment=segments[i]; ---> var  <--- isMsgSegment=segment instanceof AjxMessageFormat.MessageSegment;var cid

[WARNING] Try to use a single 'var' statement per scope.
var isMsgSegment=segment instanceof AjxMessageFormat.MessageSegment; ---> var  <--- cid=[id,i].join(

[WARNING] Try to use a single 'var' statement per scope.
,i].join("_"); ---> var  <--- cell=document.createElement("TD");cell

[WARNING] Try to use a single 'var' statement per scope.
+=" MessageControl"+segment.getIndex(); ---> var  <--- control=callback?callback.run(this,

[WARNING] Try to use a single 'var' statement per scope.
());if(hintsCallback){ ---> var  <--- hints=hintsCallback.run(this,segment,

[WARNING] Try to use a single 'var' statement per scope.
(),hints,true);} ---> var  <--- sindex=segment.getIndex();this.

[WARNING] Try to use a single 'var' statement per scope.
{var args=[];for( ---> var  <--- sindex in this._controls){args[sindex

[WARNING] Try to use a single 'var' statement per scope.
.setVisible(visible);}for( ---> var  <--- id in this._radios){Dwt.setVisible

[WARNING] The variable id has already been declared in the same scope...
setVisible(visible);}for(var  ---> id <---  in this._radios){Dwt.setVisible(

[WARNING] Try to use a single 'var' statement per scope.
){var isRadioButton=radioButtonOrValue instanceof DwtRadioButton; ---> var  <--- radioButton=isRadioButton?radioButtonOrValue:null;var value

[WARNING] Try to use a single 'var' statement per scope.
var radioButton=isRadioButton?radioButtonOrValue:null; ---> var  <--- value=radioButton?radioButton.getValue():

[WARNING] Try to use a single 'var' statement per scope.
this._value2id[value]=id; ---> var  <--- element=document.getElementById(id);this

[WARNING] Try to use a single 'var' statement per scope.
this._radioButtons[id]=radioButton; ---> var  <--- handler=AjxCallback.simpleClosure(this._handleClick,

[WARNING] Try to use a single 'var' statement per scope.
=id;if(!skipNotify){ ---> var  <--- selEv=DwtShell.selectionEvent;selEv.reset(

[WARNING] Try to use a single 'var' statement per scope.
isIE?"htmlFor":"for"));} ---> var  <--- id=target.id;if(!target

[WARNING] Try to use a single 'var' statement per scope.
_selectedId){this._selectedId=id; ---> var  <--- selEv=DwtShell.selectionEvent;DwtUiEvent.copy(

[WARNING] Try to use a single 'var' statement per scope.
,".$1$2").split("."); ---> var  <--- control=this.getControl(parts[0]

[WARNING] Try to use a single 'var' statement per scope.
value,force);}return;} ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
,".$1$2").split("."); ---> var  <--- control=this.getControl(parts[0]

[WARNING] Try to use a single 'var' statement per scope.
"."));}returnnull;} ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
(item.getter)||defaultValue;} ---> var  <--- value=this._getControlValue(id);if

[WARNING] Try to use a single 'var' statement per scope.
getLabel(id)){return;} ---> var  <--- control=item.control;if(!control

[WARNING] Try to use a single 'var' statement per scope.
if(!item){return;} ---> var  <--- control=item.control;if(!control

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[id]; ---> var  <--- control=item&&item.control;if(

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[id]; ---> var  <--- control=item&&item.control;if(

[WARNING] Try to use a single 'var' statement per scope.
.setVisible(control,visible);} ---> var  <--- el=document.getElementById([this._htmlElId

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[id]; ---> var  <--- control=item&&item.control;if(

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[id]; ---> var  <--- control=item&&item.control;if(

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[id]; ---> var  <--- control=item&&item.control;if(

[WARNING] The variable id has already been declared in the same scope...
isUndefined(id)){for(var  ---> id <---  in this._invalid){returnfalse;}

[WARNING] Try to use a single 'var' statement per scope.
{var messages={};for( ---> var  <--- id in this._invalid){messages[id

[WARNING] The variable id has already been declared in the same scope...
var messages={};for(var  ---> id <---  in this._invalid){messages[id]

[WARNING] The variable id has already been declared in the same scope...
.length==0){for(var  ---> id <---  in this._dirty){var item=this

[WARNING] Try to use a single 'var' statement per scope.
(var id in this._dirty){ ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
}returntrue;}returnfalse;} ---> var  <--- item=this._items[id];return

[WARNING] The variable item has already been declared in the same scope...
returntrue;}returnfalse;}var  ---> item <--- =this._items[id];returnitem

[WARNING] Try to use a single 'var' statement per scope.
var form=arguments.callee.form; ---> var  <--- item=form._items[id];return

[WARNING] The variable id has already been declared in the same scope...
.setValid(true);for(var  ---> id <---  in this._items){this._validateItem(

[WARNING] Try to use a single 'var' statement per scope.
item){returntrue;}try{ ---> var  <--- value=this.getValue(id);var 

[WARNING] Try to use a single 'var' statement per scope.
value=this.getValue(id); ---> var  <--- outcome=item.validator?item.validator(

[WARNING] Try to use a single 'var' statement per scope.
setter,[outcome]):outcome; ---> var  <--- dirty=!Boolean(this._call(item

[WARNING] Try to use a single 'var' statement per scope.
(var id in this._items){ ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
.control.reset(useCurrentValues);} ---> var  <--- itemDef=this._items[id].def

[WARNING] Try to use a single 'var' statement per scope.
}this.update();for( ---> var  <--- id in this._items){var item=

[WARNING] The variable id has already been declared in the same scope...
this.update();for(var  ---> id <---  in this._items){var item=this

[WARNING] Try to use a single 'var' statement per scope.
(var id in this._items){ ---> var  <--- item=this._items[id];item

[WARNING] The variable item has already been declared in the same scope...
var id in this._items){var  ---> item <--- =this._items[id];item.

[WARNING] Try to use a single 'var' statement per scope.
(var id in this._items){ ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
.getter));}}for( ---> var  <--- id in this._items){var item=

[WARNING] The variable id has already been declared in the same scope...
getter));}}for(var  ---> id <---  in this._items){var item=this

[WARNING] Try to use a single 'var' statement per scope.
(var id in this._items){ ---> var  <--- item=this._items[id];if

[WARNING] The variable item has already been declared in the same scope...
var id in this._items){var  ---> item <--- =this._items[id];if(

[WARNING] Try to use a single 'var' statement per scope.
setter,[value]):value; ---> var  <--- dirty=!Boolean(this._call(item

[WARNING] Try to use a single 'var' statement per scope.
=null;this._ondirty=null; ---> var  <--- form=this.form;if(form&&

[WARNING] Try to use a single 'var' statement per scope.
.__makeFunc(form.ondirty);} ---> var  <--- links=this.getHtmlElement().getElementsByTagName(

[WARNING] Try to use a single 'var' statement per scope.
).getElementsByTagName("A");for( ---> var  <--- i=0;i<links.length;

[WARNING] Try to use a single 'var' statement per scope.
<links.length;i++){ ---> var  <--- link=links[i];if(!

[WARNING] Try to use a single 'var' statement per scope.
"notab")=="true"){continue;} ---> var  <--- controlId=link.id&&link.id.

[WARNING] Try to use a single 'var' statement per scope.
sort(DwtForm.__byTabIndex);for( ---> var  <--- i=0;i<tabIndexes.length;

[WARNING] The variable i has already been declared in the same scope...
(DwtForm.__byTabIndex);for(var  ---> i <--- =0;i<tabIndexes.length;i

[WARNING] Try to use a single 'var' statement per scope.
<tabIndexes.length;i++){ ---> var  <--- control=tabIndexes[i].control;var 

[WARNING] Try to use a single 'var' statement per scope.
control=tabIndexes[i].control; ---> var  <--- member=(control.getTabGroupMember&&control.getTabGroupMember

[WARNING] Try to use a single 'var' statement per scope.
()].join("_"); ---> var  <--- item=this._items[id]={

[WARNING] Try to use a single 'var' statement per scope.
[itemDef.aka]=item;} ---> var  <--- control=item.control;if(control)

[WARNING] Try to use a single 'var' statement per scope.
control;}parent=parent||this; ---> var  <--- type=itemDef.type=itemDef.type||

[WARNING] Try to use a single 'var' statement per scope.
.type=itemDef.type||defaultType; ---> var  <--- isMenu=(parentDef&&parentDef.menu==itemDef

[WARNING] Try to use a single 'var' statement per scope.
parentDef&&parentDef.menu==itemDef); ---> var  <--- element=document.getElementById([parent._htmlElId

[WARNING] Try to use a single 'var' statement per scope.
});item.control=control; ---> var  <--- nparams={name:[parent._htmlElId,

[WARNING] Try to use a single 'var' statement per scope.
if(itemDef.items){for( ---> var  <--- i=0;i<itemDef.items.

[WARNING] Try to use a single 'var' statement per scope.
.items.length;i++){ ---> var  <--- radioItemDef=itemDef.items[i];var 

[WARNING] Try to use a single 'var' statement per scope.
radioItemDef=itemDef.items[i]; ---> var  <--- checked=radioItemDef.checked||radioItemDef.value==

[WARNING] Try to use a single 'var' statement per scope.
||radioItemDef.value==itemDef.value; ---> var  <--- radio=this._registerControl(radioItemDef,itemDef,

[WARNING] Try to use a single 'var' statement per scope.
).id,radio,checked); ---> var  <--- handler=DwtForm.__makeFunc(radioItemDef.onclick||

[WARNING] Try to use a single 'var' statement per scope.
){var id=itemDef.id; ---> var  <--- name=element.nodeName.toLowerCase();

[WARNING] Try to use a single 'var' statement per scope.
=element.nodeName.toLowerCase(); ---> var  <--- type=element.type;if(type==

[WARNING] Try to use a single 'var' statement per scope.
type=="checkbox"||type=="radio"){ ---> var  <--- parentId;if(type=="radio"){parentId

[WARNING] Try to use a single 'var' statement per scope.
.value=element.value;}} ---> var  <--- onclick=element.onclick;var handler=DwtForm

[WARNING] Try to use a single 'var' statement per scope.
}}var onclick=element.onclick; ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onclick)

[WARNING] Try to use a single 'var' statement per scope.
else{if(name=="select"){ ---> var  <--- onchange=element.onchange;var handler=DwtForm

[WARNING] Try to use a single 'var' statement per scope.
){var onchange=element.onchange; ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onchange)

[WARNING] The variable handler has already been declared in the same scope...
{var onchange=element.onchange;var  ---> handler <--- =DwtForm.__makeFunc(itemDef.onchange);

[WARNING] Try to use a single 'var' statement per scope.
type=="reset"||type=="submit"){ ---> var  <--- onclick=element.onclick;var handler=DwtForm

[WARNING] The variable onclick has already been declared in the same scope...
=="reset"||type=="submit"){var  ---> onclick <--- =element.onclick;var handler=DwtForm.

[WARNING] Try to use a single 'var' statement per scope.
){var onclick=element.onclick; ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onclick)

[WARNING] The variable handler has already been declared in the same scope...
{var onclick=element.onclick;var  ---> handler <--- =DwtForm.__makeFunc(itemDef.onclick);

[WARNING] Try to use a single 'var' statement per scope.
name=="textarea"||name=="input"){ ---> var  <--- onchange=element.onchange;var handler=DwtForm

[WARNING] The variable onchange has already been declared in the same scope...
=="textarea"||name=="input"){var  ---> onchange <--- =element.onchange;var handler=DwtForm.

[WARNING] Try to use a single 'var' statement per scope.
){var onchange=element.onchange; ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onchange)

[WARNING] The variable handler has already been declared in the same scope...
{var onchange=element.onchange;var  ---> handler <--- =DwtForm.__makeFunc(itemDef.onchange);

[WARNING] Try to use a single 'var' statement per scope.
()].join("_"); ---> var  <--- type=itemDef.type=itemDef.type||

[WARNING] Try to use a single 'var' statement per scope.
=itemDef.className||params.className; ---> var  <--- isRadioButton=Dwt.instanceOf(type,"DwtRadioButton")

[WARNING] Try to use a single 'var' statement per scope.
Dwt.instanceOf(type,"DwtRadioButton"); ---> var  <--- isCheckBox=Dwt.instanceOf(type,"DwtCheckbox")

[WARNING] Try to use a single 'var' statement per scope.
itemDef.checked:params.checked;} ---> var  <--- isTextField=Dwt.instanceOf(type,"DwtInputField")

[WARNING] Try to use a single 'var' statement per scope.
params.rows=itemDef.rows;} ---> var  <--- isTabPage=Dwt.instanceOf(type,"DwtTabViewPage")

[WARNING] Try to use a single 'var' statement per scope.
.template;delete itemDef.template;} ---> var  <--- isTree=Dwt.instanceOf(type,"DwtTree")

[WARNING] Try to use a single 'var' statement per scope.
if(itemDef.params){for( ---> var  <--- p in itemDef.params){params[p

[WARNING] Try to use a single 'var' statement per scope.
itemDef.params[p];}} ---> var  <--- control=new window[type](params)

[WARNING] Try to use a single 'var' statement per scope.
);if(control instanceof DwtSelect){ ---> var  <--- options=itemDef.items;if(options)

[WARNING] Try to use a single 'var' statement per scope.
items;if(options){for( ---> var  <--- i=0;i<options.length;

[WARNING] Try to use a single 'var' statement per scope.
<options.length;i++){ ---> var  <--- option=options[i];option.displayValue

[WARNING] Try to use a single 'var' statement per scope.
control.addOption(option);}} ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onchange)

[WARNING] Try to use a single 'var' statement per scope.
;}if(itemDef.menu){ ---> var  <--- isMenu=Dwt.instanceOf(itemDef.menu.

[WARNING] Try to use a single 'var' statement per scope.
menu.type||"DwtMenu","DwtMenu"); ---> var  <--- menu;if(isMenu){menu=this

[WARNING] Try to use a single 'var' statement per scope.
DwtMenu({parent:control}); ---> var  <--- style=Dwt.instanceOf(itemDef.menu.

[WARNING] Try to use a single 'var' statement per scope.
}control.setMenu(menu);} ---> var  <--- parentId;if(parent instanceof DwtToolBar||parent instanceof 

[WARNING] Try to use a single 'var' statement per scope.
){parentId=parentDef.id;} ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onclick||

[WARNING] The variable handler has already been declared in the same scope...
{parentId=parentDef.id;}var  ---> handler <--- =DwtForm.__makeFunc(itemDef.onclick||(

[WARNING] Try to use a single 'var' statement per scope.
&&!(control instanceof DwtRadioButton)){ ---> var  <--- handler=DwtForm.__makeFunc(itemDef.onclick)

[WARNING] The variable handler has already been declared in the same scope...
!(control instanceof DwtRadioButton)){var  ---> handler <--- =DwtForm.__makeFunc(itemDef.onclick);

[WARNING] Try to use a single 'var' statement per scope.
else{if(control instanceof DwtInputField){ ---> var  <--- changehandler=DwtForm.__makeFunc(itemDef.onchange)

[WARNING] Try to use a single 'var' statement per scope.
DwtForm.__makeFunc(itemDef.onchange); ---> var  <--- onkeyup=AjxCallback.simpleClosure(this._input2model2handler,

[WARNING] Try to use a single 'var' statement per scope.
);if(AjxEnv.isFirefox){ ---> var  <--- onkeydown=this._onkeydownhandler.bind(this,

[WARNING] Try to use a single 'var' statement per scope.
(DwtEvent.ONKEYDOWN,onkeydown);} ---> var  <--- blurhandler=DwtForm.__makeFunc(itemDef.onblur)

[WARNING] Try to use a single 'var' statement per scope.
.onblur);if(blurhandler){ ---> var  <--- onblur=AjxCallback.simpleClosure(this._input2model2handler,

[WARNING] Try to use a single 'var' statement per scope.
){if(itemDef.items){ ---> var  <--- menuItemDefs=itemDef.items;for(var i

[WARNING] Try to use a single 'var' statement per scope.
var menuItemDefs=itemDef.items;for( ---> var  <--- i=0;i<menuItemDefs.length;

[WARNING] The variable i has already been declared in the same scope...
menuItemDefs=itemDef.items;for(var  ---> i <--- =0;i<menuItemDefs.length;i

[WARNING] Try to use a single 'var' statement per scope.
<menuItemDefs.length;i++){ ---> var  <--- menuItemDef=menuItemDefs[i];if(menuItemDef

[WARNING] Try to use a single 'var' statement per scope.
else{if(control instanceof DwtTabView){ ---> var  <--- pageDefs=itemDef.items;if(pageDefs)

[WARNING] Try to use a single 'var' statement per scope.
control instanceof DwtTabViewPage&&parent instanceof DwtTabView){ ---> var  <--- key=parent.addTab(itemDef.label,

[WARNING] Try to use a single 'var' statement per scope.
else{if(control instanceof DwtToolBar){ ---> var  <--- toolbarItemDefs=itemDef.items;if(toolbarItemDefs)

[WARNING] Try to use a single 'var' statement per scope.
items;if(toolbarItemDefs){for( ---> var  <--- i=0;i<toolbarItemDefs.length;

[WARNING] The variable i has already been declared in the same scope...
;if(toolbarItemDefs){for(var  ---> i <--- =0;i<toolbarItemDefs.length;i

[WARNING] Try to use a single 'var' statement per scope.
<toolbarItemDefs.length;i++){ ---> var  <--- toolbarItemDef=toolbarItemDefs[i];if(toolbarItemDef

[WARNING] Try to use a single 'var' statement per scope.
(id,itemDef.label);} ---> var  <--- item=this._items[id];if

[WARNING] Try to use a single 'var' statement per scope.
control=this.getControl(id); ---> var  <--- checked=control.checked;this._setModelValue(

[WARNING] Try to use a single 'var' statement per scope.
control=this.getControl(itemId); ---> var  <--- itemDef=this._items[itemId].def

[WARNING] Try to use a single 'var' statement per scope.
returnDwtForm.__makeFunc(getter);} ---> var  <--- ref=item.ref;if(!ref

[WARNING] Try to use a single 'var' statement per scope.
(!ref){returnnull;} ---> var  <--- parts=ref.split(".");var 

[WARNING] Try to use a single 'var' statement per scope.
parts=ref.split("."); ---> var  <--- body=["var context = this.model;"];for(var i

[WARNING] Try to use a single 'var' statement per scope.
var body=["var context = this.model;"];for( ---> var  <--- i=0;i<parts.length;

[WARNING] Try to use a single 'var' statement per scope.
<parts.length;i++){ ---> var  <--- name=parts[i];var fname=

[WARNING] Try to use a single 'var' statement per scope.
{var name=parts[i]; ---> var  <--- fname=DwtForm.__makeFuncName(name);if

[WARNING] Try to use a single 'var' statement per scope.
returnDwtForm.__makeFunc(setter);} ---> var  <--- ref=item.ref;if(!ref

[WARNING] Try to use a single 'var' statement per scope.
(!ref){returnnull;} ---> var  <--- parts=ref.split(".");var 

[WARNING] Try to use a single 'var' statement per scope.
parts=ref.split("."); ---> var  <--- body=["var context = this.model;"];for(var i

[WARNING] Try to use a single 'var' statement per scope.
var body=["var context = this.model;"];for( ---> var  <--- i=0;i<parts.length;

[WARNING] Try to use a single 'var' statement per scope.
<parts.length;i++){ ---> var  <--- isLast=i==parts.length-1;

[WARNING] Try to use a single 'var' statement per scope.
=i==parts.length-1; ---> var  <--- name=parts[i];var fname=

[WARNING] Try to use a single 'var' statement per scope.
;var name=parts[i]; ---> var  <--- fname=DwtForm.__makeFuncName(name,isLast?

[WARNING] Try to use a single 'var' statement per scope.
).onclick,DwtCheckbox.__handleClick]; ---> var  <--- handler=function(evt){for(var 

[WARNING] Try to use a single 'var' statement per scope.
<handlers.length;i++){ ---> var  <--- func=handlers[i];if(func

[WARNING] Try to use a single 'var' statement per scope.
_itemDef.items||[];for( ---> var  <--- i=0;i<itemDefs.length;

[WARNING] Try to use a single 'var' statement per scope.
length,this._minRows);for( ---> var  <--- i=this._rowCount;i>min;

[WARNING] Try to use a single 'var' statement per scope.
.removeRow(i-1);} ---> var  <--- max=Math.min(array.length,

[WARNING] Try to use a single 'var' statement per scope.
length,this._maxRows);for( ---> var  <--- i=this._rowCount;i<max;

[WARNING] The variable i has already been declared in the same scope...
,this._maxRows);for(var  ---> i <--- =this._rowCount;i<max;i

[WARNING] Try to use a single 'var' statement per scope.
this.addRow();}for( ---> var  <--- i=0;i<max;i++

[WARNING] The variable i has already been declared in the same scope...
.addRow();}for(var  ---> i <--- =0;i<max;i++)

[WARNING] Try to use a single 'var' statement per scope.
i],true);}for( ---> var  <--- i=array.length;i<this.

[WARNING] The variable i has already been declared in the same scope...
],true);}for(var  ---> i <--- =array.length;i<this._rowCount

[WARNING] Try to use a single 'var' statement per scope.
Array(this._rowCount);for( ---> var  <--- i=0;i<this._rowCount;

[WARNING] Try to use a single 'var' statement per scope.
;i>=index;i--){ ---> var  <--- oindex=i,nindex=i+1;

[WARNING] Try to use a single 'var' statement per scope.
=i,nindex=i+1; ---> var  <--- item=this._items[oindex];item

[WARNING] Try to use a single 'var' statement per scope.
(index);this._rowCount++; ---> var  <--- data={id:[this.getHTMLElId(

[WARNING] Try to use a single 'var' statement per scope.
id].join("_")}; ---> var  <--- rowHtml=AjxTemplate.expand(this.ROW_TEMPLATE,

[WARNING] Try to use a single 'var' statement per scope.
expand(this.ROW_TEMPLATE,data); ---> var  <--- rowsEl=this._rowsEl;rowsEl.appendChild(

[WARNING] Try to use a single 'var' statement per scope.
,data.id+"_row")); ---> var  <--- rowEl=rowsEl.lastChild;if(index!=

[WARNING] Try to use a single 'var' statement per scope.
rowsEl.childNodes[index]);} ---> var  <--- tabIndexes=[];var rowControl=this.

[WARNING] Try to use a single 'var' statement per scope.
);}var tabIndexes=[]; ---> var  <--- rowControl=this._registerControl(itemDef,null,

[WARNING] Try to use a single 'var' statement per scope.
_registerControl(itemDef,null,tabIndexes); ---> var  <--- addDef=this._itemDef.additem?AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
="this.getRowCount() < this.getMaxRows()";addDef.ignore=true; ---> var  <--- addButton=this._registerControl(addDef,null,

[WARNING] Try to use a single 'var' statement per scope.
[itemDef.id]));} ---> var  <--- removeDef=this._itemDef.removeitem?AjxUtil.

[WARNING] Try to use a single 'var' statement per scope.
="this.getRowCount() > this.getMinRows()";removeDef.ignore=true; ---> var  <--- removeButton=this._registerControl(removeDef,null,

[WARNING] Try to use a single 'var' statement per scope.
[itemDef.id]));} ---> var  <--- item=this._items[itemDef.id]

[WARNING] The variable item has already been declared in the same scope...
itemDef.id]));}var  ---> item <--- =this._items[itemDef.id];

[WARNING] Try to use a single 'var' statement per scope.
_setControlIds(item.id,index); ---> var  <--- tabGroup=new DwtTabGroup(itemDef.id);

[WARNING] Try to use a single 'var' statement per scope.
sort(DwtForm.__byTabIndex);for( ---> var  <--- i=0;i<tabIndexes.length;

[WARNING] The variable i has already been declared in the same scope...
(DwtForm.__byTabIndex);for(var  ---> i <--- =0;i<tabIndexes.length;i

[WARNING] Try to use a single 'var' statement per scope.
<tabIndexes.length;i++){ ---> var  <--- control=tabIndexes[i].control;tabGroup

[WARNING] Try to use a single 'var' statement per scope.
.addMember(tabGroup);}else{ ---> var  <--- indexItemDef=this._items[String(index+

[WARNING] Try to use a single 'var' statement per scope.
item=this._items[indexOrId]; ---> var  <--- hadFocus=Dwt.isAncestor(item._rowEl,

[WARNING] Try to use a single 'var' statement per scope.
this._deleteItem(item.id); ---> var  <--- addItem=this._items[item._addId]

[WARNING] Try to use a single 'var' statement per scope.
._deleteItem(addItem.id);} ---> var  <--- removeItem=this._items[item._removeId]

[WARNING] Try to use a single 'var' statement per scope.
._deleteItem(removeItem.id);} ---> var  <--- fromIndex=Number(item.aka);for

[WARNING] Try to use a single 'var' statement per scope.
Number(item.aka);for( ---> var  <--- i=fromIndex+1;i<this.

[WARNING] Try to use a single 'var' statement per scope.
<this._rowCount;i++){ ---> var  <--- oindex=i,nindex=i-1;

[WARNING] Try to use a single 'var' statement per scope.
String(--this._rowCount)); ---> var  <--- rowEl=item._rowEl;rowEl.parentNode.

[WARNING] Try to use a single 'var' statement per scope.
(rowEl);delete item._rowEl; ---> var  <--- tabGroup=DwtTabGroup.getByName(item.id)

[WARNING] Try to use a single 'var' statement per scope.
update();if(hadFocus){ ---> var  <--- otherItem=this._items[item.aka]

[WARNING] Try to use a single 'var' statement per scope.
=this._rowsEl.childNodes;for( ---> var  <--- i=0;i<children.length;

[WARNING] Try to use a single 'var' statement per scope.
,index].join("_"); ---> var  <--- item=this._items[rowId];this

[WARNING] Try to use a single 'var' statement per scope.
item&&item.control,id); ---> var  <--- addButton=this._items[item._addId]

[WARNING] Try to use a single 'var' statement per scope.
addButton.control,id+"_add"); ---> var  <--- removeButton=this._items[item._removeId]

[WARNING] Try to use a single 'var' statement per scope.
getMenu().removeChild(item); ---> var  <--- text=this._valueToText[value];delete 

[WARNING] Try to use a single 'var' statement per scope.
params.layout=this._layout;} ---> var  <--- menu=this._menu=new DwtMenu(params

[WARNING] Try to use a single 'var' statement per scope.
=new DwtMenu(params);for( ---> var  <--- i in this._textToValue){var item=

[WARNING] Try to use a single 'var' statement per scope.
(var i in this._textToValue){ ---> var  <--- item=this._createMenuItem(menu,i)

[WARNING] Try to use a single 'var' statement per scope.
this._createMenuItem(menu,i); ---> var  <--- value=this._textToValue[i];this

[WARNING] Try to use a single 'var' statement per scope.
){var menuItem=ev.dwtObj; ---> var  <--- ovalue=this.getText();var nvalue

[WARNING] Try to use a single 'var' statement per scope.
var ovalue=this.getText(); ---> var  <--- nvalue=menuItem.getText();this.

[WARNING] Try to use a single 'var' statement per scope.
;this._menu.popdown(); ---> var  <--- event=DwtUiEvent.getEvent(ev);event

[WARNING] Try to use a single 'var' statement per scope.
;if(!this._useLabel){ ---> var  <--- input=this.input.getInputElement();

[WARNING] Try to use a single 'var' statement per scope.
event=DwtUiEvent.getEvent(ev); ---> var  <--- newValue=this.getText();event.

[WARNING] Try to use a single 'var' statement per scope.
_autoScroll&&newValue!=this.__ovalue){ ---> var  <--- index=0;for(var text in this

[WARNING] Try to use a single 'var' statement per scope.
){var index=0;for( ---> var  <--- text in this._textToValue){if(text

[WARNING] Try to use a single 'var' statement per scope.
=function(timeString){var date; ---> var  <--- lTimeString=timeString.toLowerCase();if(

[WARNING] Try to use a single 'var' statement per scope.
?12:0);}else{ ---> var  <--- timeFormatter=AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT)

[WARNING] Try to use a single 'var' statement per scope.
var select=ev._args.selectObj; ---> var  <--- startDate=AjxDateUtil.simpleParseDateStr(startDateField.value)

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(startDateField.value); ---> var  <--- endDate=AjxDateUtil.simpleParseDateStr(endDateField.value)

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(endDateField.value); ---> var  <--- startDateOrig=startDateField.value;var endDateOrig=endDateField

[WARNING] Try to use a single 'var' statement per scope.
);var startDateOrig=startDateField.value; ---> var  <--- endDateOrig=endDateField.value;if(select.

[WARNING] Try to use a single 'var' statement per scope.
select.id==DwtTimeSelect.START){ ---> var  <--- hours=(select.compId==DwtTimeSelect.HOUR

[WARNING] Try to use a single 'var' statement per scope.
.oldValue:startSelect.getHours(); ---> var  <--- minutes=(select.compId==DwtTimeSelect.MINUTE

[WARNING] Try to use a single 'var' statement per scope.
.oldValue:startSelect.getMinutes(); ---> var  <--- ampm=(select.compId==DwtTimeSelect.AMPM

[WARNING] Try to use a single 'var' statement per scope.
.oldValue:startSelect.getAmPm(); ---> var  <--- oldStartDateMs=DwtTimeSelect.getDateFromFields(hours,minutes,

[WARNING] Try to use a single 'var' statement per scope.
ampm,startDate).getTime(); ---> var  <--- newStartDateMs=DwtTimeSelect.getDateFromFields(startSelect.getHours(

[WARNING] Try to use a single 'var' statement per scope.
),startDate).getTime(); ---> var  <--- oldEndDateMs=DwtTimeSelect.getDateFromFields(endSelect.getHours(

[WARNING] Try to use a single 'var' statement per scope.
),endDate).getTime(); ---> var  <--- delta=oldEndDateMs-oldStartDateMs;if(!delta

[WARNING] Try to use a single 'var' statement per scope.
(!delta){returnnull;} ---> var  <--- newEndDateMs=newStartDateMs+delta;var newEndDate=new 

[WARNING] Try to use a single 'var' statement per scope.
;}var newEndDateMs=newStartDateMs+delta; ---> var  <--- newEndDate=new Date(newEndDateMs);endSelect.

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(startDateField.value); ---> var  <--- endDate=AjxDateUtil.simpleParseDateStr(endDateField.value)

[WARNING] Try to use a single 'var' statement per scope.
;}if(ss&&es){ ---> var  <--- startDateMs=DwtTimeSelect.getDateFromFields(ss.getHours(

[WARNING] Try to use a single 'var' statement per scope.
),startDate).getTime(); ---> var  <--- endDateMs=DwtTimeSelect.getDateFromFields(es.getHours(

[WARNING] Try to use a single 'var' statement per scope.
,minuteIdx=0,amPmIdx=0; ---> var  <--- isLocale24Hour=this.isLocale24Hour();var hours

[WARNING] Try to use a single 'var' statement per scope.
var isLocale24Hour=this.isLocale24Hour(); ---> var  <--- hours=date.getHours();if(

[WARNING] Try to use a single 'var' statement per scope.
AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT); ---> var  <--- hourSegmentIdx=0;var minuteSegmentIdx=0;var 

[WARNING] Try to use a single 'var' statement per scope.
.SHORT);var hourSegmentIdx=0; ---> var  <--- minuteSegmentIdx=0;var html=[];

[WARNING] Try to use a single 'var' statement per scope.
hourSegmentIdx=0;var minuteSegmentIdx=0; ---> var  <--- html=[];var i=0;

[WARNING] Try to use a single 'var' statement per scope.
=0;var html=[]; ---> var  <--- i=0;html[i++]=

[WARNING] Try to use a single 'var' statement per scope.
[i++]="<table border=0 cellpadding=0 cellspacing=0><tr>";for( ---> var  <--- j=0;j<timeFormatter._segments.

[WARNING] Try to use a single 'var' statement per scope.
._segments.length;j++){ ---> var  <--- segmentStr=timeFormatter._segments[j]._s

[WARNING] Try to use a single 'var' statement per scope.
[j] instanceof AjxFormat.TextSegment){ ---> var  <--- trimStr=AjxStringUtil.trim(segmentStr);if

[WARNING] Try to use a single 'var' statement per scope.
innerHTML=html.join(""); ---> var  <--- now=new Date();var start=

[WARNING] Try to use a single 'var' statement per scope.
;var now=new Date(); ---> var  <--- start=this._isLocale24Hour?0:1;

[WARNING] Try to use a single 'var' statement per scope.
=this._isLocale24Hour?0:1; ---> var  <--- limit=this._isLocale24Hour?24:13;

[WARNING] Try to use a single 'var' statement per scope.
.compId=DwtTimeSelect.HOUR;for( ---> var  <--- i=start;i<limit;i++

[WARNING] The variable i has already been declared in the same scope...
compId=DwtTimeSelect.HOUR;for(var  ---> i <--- =start;i<limit;i++)

[WARNING] Try to use a single 'var' statement per scope.
){now.setHours(i); ---> var  <--- label=timeFormatter._segments[hourSegmentIdx].format

[WARNING] Try to use a single 'var' statement per scope.
.compId=DwtTimeSelect.MINUTE;for( ---> var  <--- i=0;i<60;i=

[WARNING] The variable i has already been declared in the same scope...
compId=DwtTimeSelect.MINUTE;for(var  ---> i <--- =0;i<60;i=i

[WARNING] Try to use a single 'var' statement per scope.
){now.setMinutes(i); ---> var  <--- label=timeFormatter._segments[minuteSegmentIdx].format

[WARNING] The variable label has already been declared in the same scope...
{now.setMinutes(i);var  ---> label <--- =timeFormatter._segments[minuteSegmentIdx].format(

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(startDateField.value); ---> var  <--- endDate=AjxDateUtil.simpleParseDateStr(endDateField.value)

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(endDateField.value); ---> var  <--- startDateOrig=startDateField.value;var endDateOrig=endDateField

[WARNING] Try to use a single 'var' statement per scope.
);var startDateOrig=startDateField.value; ---> var  <--- endDateOrig=endDateField.value;if(id==

[WARNING] Try to use a single 'var' statement per scope.
if(id==DwtTimeInput.START){ ---> var  <--- timeStr=dateInfo?dateInfo.startTimeStr:startSelect.

[WARNING] Try to use a single 'var' statement per scope.
.startTimeStr:startSelect.getTimeString(); ---> var  <--- oldStartDateMs=DwtTimeInput.getDateFromFields(timeStr,startDate)

[WARNING] Try to use a single 'var' statement per scope.
timeStr,startDate).getTime(); ---> var  <--- newStartDateMs=DwtTimeInput.getDateFromFields(startSelect.getTimeString(

[WARNING] Try to use a single 'var' statement per scope.
),startDate).getTime(); ---> var  <--- oldEndDateMs=DwtTimeInput.getDateFromFields(endSelect.getTimeString(

[WARNING] Try to use a single 'var' statement per scope.
),endDate).getTime(); ---> var  <--- delta=oldEndDateMs-oldStartDateMs;if(!delta

[WARNING] Try to use a single 'var' statement per scope.
(!delta){returnnull;} ---> var  <--- newEndDateMs=newStartDateMs+delta;var newEndDate=new 

[WARNING] Try to use a single 'var' statement per scope.
;}var newEndDateMs=newStartDateMs+delta; ---> var  <--- newEndDate=new Date(newEndDateMs);startSelect.

[WARNING] Try to use a single 'var' statement per scope.
if(id==DwtTimeInput.END){ ---> var  <--- timeStr=dateInfo?dateInfo.endTimeStr:endSelect.

[WARNING] The variable timeStr has already been declared in the same scope...
(id==DwtTimeInput.END){var  ---> timeStr <--- =dateInfo?dateInfo.endTimeStr:endSelect.getTimeString

[WARNING] Try to use a single 'var' statement per scope.
.endTimeStr:endSelect.getTimeString(); ---> var  <--- oldEndDateMs=DwtTimeInput.getDateFromFields(timeStr,endDate)

[WARNING] The variable oldEndDateMs has already been declared in the same scope...
endTimeStr:endSelect.getTimeString();var  ---> oldEndDateMs <--- =DwtTimeInput.getDateFromFields(timeStr,endDate).

[WARNING] Try to use a single 'var' statement per scope.
timeStr,endDate).getTime(); ---> var  <--- newEndDateMs=DwtTimeInput.getDateFromFields(endSelect.getTimeString(

[WARNING] The variable newEndDateMs has already been declared in the same scope...
,endDate).getTime();var  ---> newEndDateMs <--- =DwtTimeInput.getDateFromFields(endSelect.getTimeString()

[WARNING] Try to use a single 'var' statement per scope.
),endDate).getTime(); ---> var  <--- oldStartDateMs=DwtTimeInput.getDateFromFields(startSelect.getTimeString(

[WARNING] The variable oldStartDateMs has already been declared in the same scope...
,endDate).getTime();var  ---> oldStartDateMs <--- =DwtTimeInput.getDateFromFields(startSelect.getTimeString()

[WARNING] Try to use a single 'var' statement per scope.
),startDate).getTime(); ---> var  <--- delta=oldEndDateMs-oldStartDateMs;if(!delta

[WARNING] The variable delta has already been declared in the same scope...
,startDate).getTime();var  ---> delta <--- =oldEndDateMs-oldStartDateMs;if(!delta)

[WARNING] Try to use a single 'var' statement per scope.
;}if(newEndDateMs<oldStartDateMs){ ---> var  <--- newStartDateMs=newEndDateMs-delta;var newStartDate=new 

[WARNING] The variable newStartDateMs has already been declared in the same scope...
}if(newEndDateMs<oldStartDateMs){var  ---> newStartDateMs <--- =newEndDateMs-delta;var newStartDate=new Date

[WARNING] Try to use a single 'var' statement per scope.
){var newStartDateMs=newEndDateMs-delta; ---> var  <--- newStartDate=new Date(newStartDateMs);startSelect.

[WARNING] Try to use a single 'var' statement per scope.
AjxDateUtil.simpleParseDateStr(startDateField.value); ---> var  <--- endDate=AjxDateUtil.simpleParseDateStr(endDateField.value)

[WARNING] Try to use a single 'var' statement per scope.
;}if(ss&&es){ ---> var  <--- startTime=ss.getTimeString();var endTime

[WARNING] Try to use a single 'var' statement per scope.
var startTime=ss.getTimeString(); ---> var  <--- endTime=es.getTimeString();if(

[WARNING] Try to use a single 'var' statement per scope.
);if(startTime&&endTime){ ---> var  <--- startDateMs=DwtTimeInput.getDateFromFields(startTime,startDate)

[WARNING] Try to use a single 'var' statement per scope.
startTime,startDate).getTime(); ---> var  <--- endDateMs=DwtTimeInput.getDateFromFields(endTime,endDate)

[WARNING] Try to use a single 'var' statement per scope.
=this._timeSelectInput.getValue(); ---> var  <--- d=DwtTimeSelect.parse(str);if

[WARNING] Try to use a single 'var' statement per scope.
(!segments){returnoriginalDate;} ---> var  <--- hrs=(segments.length&&segments[0

[WARNING] Try to use a single 'var' statement per scope.
(/\D/g,"")):null; ---> var  <--- mins=(segments.length>1&&segments

[WARNING] Try to use a single 'var' statement per scope.
AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT); ---> var  <--- defaultTopMenuItem;if(!this._menuItemsAdded){

[WARNING] Try to use a single 'var' statement per scope.
;if(!this._menuItemsAdded){ ---> var  <--- j,k,mi,smi,text,

[WARNING] Try to use a single 'var' statement per scope.
{id:this._htmlElId}); ---> var  <--- inputId=Dwt.getNextId("DwtTimeInputSelect_");if

[WARNING] Try to use a single 'var' statement per scope.
END){inputId+="_endTimeInput";}} ---> var  <--- params={parent:this,parentElement:(

[WARNING] Try to use a single 'var' statement per scope.
._timeSelectInput=new DwtInputField(params); ---> var  <--- timeInputEl=this._timeSelectInput.getInputElement();

[WARNING] Try to use a single 'var' statement per scope.
;timeInputEl.typeId=this.id; ---> var  <--- buttonListener=new AjxListener(this,this._timeButtonListener

[WARNING] Try to use a single 'var' statement per scope.
AjxListener(this,this._timeButtonListener); ---> var  <--- buttonId=this._htmlElId+"_timeSelectBtn";var timeSelectButton

[WARNING] Try to use a single 'var' statement per scope.
var buttonId=this._htmlElId+"_timeSelectBtn"; ---> var  <--- timeSelectButton=this._timeSelectBtn=new DwtButton({

[WARNING] Using 'eval' is not recommended. Moreover, using 'eval' reduces the level of compression!
execScript||function(b){a. ---> eval <--- .call(a,b);})

[WARNING] Try to use a single 'var' statement per scope.
0&&b-1 in a;} ---> var  <--- t=function(a){var b,

[WARNING] Try to use a single 'var' statement per scope.
,n.contains=t.contains; ---> var  <--- u=n.expr.match.needsContext,

[WARNING] Try to use a single 'var' statement per scope.
1).length;}}); ---> var  <--- y,z=a.document,A=

[WARNING] Try to use a single 'var' statement per scope.
fn,y=n(z); ---> var  <--- C=/^(?:parents|prev(?:Until|All))/,D={children:!

[WARNING] Try to use a single 'var' statement per scope.
(e);};}); ---> var  <--- F=/\S+/g,G={};function

[WARNING] Try to use a single 'var' statement per scope.
.promise();}}); ---> var  <--- I;n.fn.ready=function(

[WARNING] Try to use a single 'var' statement per scope.
I.promise(b);}; ---> var  <--- L="undefined",M;for(M in 

[WARNING] Try to use a single 'var' statement per scope.
getAttribute("classid")===b;}; ---> var  <--- N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;functionP

[WARNING] Try to use a single 'var' statement per scope.
promise(b);}}); ---> var  <--- T=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,U=["Top"

[WARNING] Try to use a single 'var' statement per scope.
}d=null;}(); ---> var  <--- Y=/^(?:input|select|textarea)$/i,Z=/^key/,$=

[WARNING] Try to use a single 'var' statement per scope.
));}}returnc;} ---> var  <--- fb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",gb=/ jQuery\d+="(?:null|\d+)"/g,hb=

[WARNING] Try to use a single 'var' statement per scope.
(e);};}); ---> var  <--- Db,Eb={};functionFb(

[WARNING] Try to use a single 'var' statement per scope.
returnb;};}(); ---> var  <--- Hb=/^margin/,Ib=new RegExp("^("

[WARNING] Try to use a single 'var' statement per scope.
f];}returne;}; ---> var  <--- Nb=/alpha\([^)]*\)/i,Ob=/opacity\s*=\s*([^)]*)/,Pb=

[WARNING] Try to use a single 'var' statement per scope.
n.fx.step={}; ---> var  <--- _b,ac,bc=/^(?:toggle|show|hide)$/,cc=

[WARNING] Try to use a single 'var' statement per scope.
=e=null;}(); ---> var  <--- mc=/\r/g;n.fn.extend(

[WARNING] Try to use a single 'var' statement per scope.
.value;});}); ---> var  <--- nc,oc,pc=n.expr.

[WARNING] Try to use a single 'var' statement per scope.
=b+"";}}); ---> var  <--- tc=/^(?:input|select|textarea|button|object)$/i,uc=/^(?:a|area)$/i;n.

[WARNING] Try to use a single 'var' statement per scope.
n.propFix.enctype="encoding"); ---> var  <--- vc=/[\t\r\n\f]/g;n.fn.extend(

[WARNING] Try to use a single 'var' statement per scope.
"**",c);}}); ---> var  <--- wc=n.now(),xc=

[WARNING] Try to use a single 'var' statement per scope.
"Invalid XML: "+b),c;}; ---> var  <--- zc,Ac,Bc=/#.*$/,Cc=

[WARNING] Try to use a single 'var' statement per scope.
filters.hidden(a);}; ---> var  <--- Rc=/%20/g,Sc=/\[\]$/,Tc=

[WARNING] Try to use a single 'var' statement per scope.
||_c();}:$c; ---> var  <--- Xc=0,Yc={},Zc

[WARNING] Try to use a single 'var' statement per scope.
);}};}}); ---> var  <--- ad=[],bd=/(=)\?(?=&|$)|\?\?/;n

[WARNING] Try to use a single 'var' statement per scope.
,d.childNodes));}; ---> var  <--- cd=n.fn.load;n.

[WARNING] Try to use a single 'var' statement per scope.
elem;}).length;}; ---> var  <--- dd=a.document.documentElement;functioned

[WARNING] Try to use a single 'var' statement per scope.
(){returnn;}); ---> var  <--- fd=a.jQuery,gd=a.

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;var buttonClass=data

[WARNING] Try to use a single 'var' statement per scope.
];var _i=buffer.length; ---> var  <--- buttonClass=data.buttonClass||"Button";buffer[

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;data.buttonClass=

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;var buttonClass=data

[WARNING] Try to use a single 'var' statement per scope.
];var _i=buffer.length; ---> var  <--- buttonClass=data.buttonClass||"Button";buffer[

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;if(data.

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;var buttonClass=data

[WARNING] Try to use a single 'var' statement per scope.
];var _i=buffer.length; ---> var  <--- buttonClass=data.buttonClass||"Button";buffer[

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;var buttonClass=data

[WARNING] Try to use a single 'var' statement per scope.
];var _i=buffer.length; ---> var  <--- buttonClass=data.buttonClass||"Tab";buffer[

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;var buttonClass=data

[WARNING] Try to use a single 'var' statement per scope.
];var _i=buffer.length; ---> var  <--- buttonClass=data.buttonClass||"Tab";buffer[

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Try to use a single 'var' statement per scope.
};buffer=buffer||[]; ---> var  <--- _i=buffer.length;buffer[_i++

[WARNING] Found an undeclared symbol: DBG
return"\\u"+codestr;}}}} ---> DBG <--- .println(AjxDebug.NONE,"unexpected condition in AjxStringUtil.__jsEscapeChar -- code point 0x"+codestr

[WARNING] Found an undeclared symbol: Dwt
.position=span2.style.position= ---> Dwt <--- .ABSOLUTE_STYLE;var shellEl=DwtShell.getShell(

[WARNING] Found an undeclared symbol: rec
){returnthis.__msh_content;}; ---> rec <--- =function(i,o){var tags

[WARNING] Found an undeclared symbol: $
;Dwt.printPerfMetric=function(){ ---> $ <--- .each($('div[id*="_loaded"]'),function(

[WARNING] Found an undeclared symbol: b
.resetButtonStates=function(){for( ---> b <---  in this._button){this._button[

[WARNING] Found an undeclared symbol: ev
{this._popupMenu(DwtKeyEvent.isKeyEvent( ---> ev <--- ));}}return;}}}

[WARNING] Found an undeclared symbol: opt
.prototype.addHR=function(){ ---> opt <--- =new DwtSelectOption("hr"+this._hrCount.

[WARNING] The symbol attr is declared but is apparently never used.
This code can probably be written in a more compact way.
.getClassAttr=function(classes){var  ---> attr <--- =[];if(classes&&classes.

[WARNING] The symbol x is declared but is apparently never used.
This code can probably be written in a more compact way.
length;i++){try{var  ---> x <--- =new ActiveXObject(msxmlVers[i]);

[WARNING] The symbol test is declared but is apparently never used.
This code can probably be written in a more compact way.
member=this._array[i], ---> test <--- =func?func.call(member):

[WARNING] The symbol len is declared but is apparently never used.
This code can probably be written in a more compact way.
].join("");}var  ---> len <--- =params.len||80;var pre=

[WARNING] The symbol regEx is declared but is apparently never used.
This code can probably be written in a more compact way.
)){points+=3;}var  ---> regEx <--- =new RegExp("^(--|"+AjxMsg.on+

[WARNING] The symbol contentFrameDoc is declared but is apparently never used.
This code can probably be written in a more compact way.
||!linkFrame){return;}var  ---> contentFrameDoc <--- =contentFrame.contentWindow.document;var linkFrameDoc=

[WARNING] The symbol linkFrameDoc is declared but is apparently never used.
This code can probably be written in a more compact way.
contentFrameDoc=contentFrame.contentWindow.document;var  ---> linkFrameDoc <--- =linkFrame.contentWindow.document;var now=

[WARNING] The symbol now is declared but is apparently never used.
This code can probably be written in a more compact way.
window.console){return;}var  ---> now <--- =new Date();for(var i

[WARNING] The symbol clip is declared but is apparently never used.
This code can probably be written in a more compact way.
";"].join("");var  ---> clip <--- =["clip:rect(",(-1*mask.

[WARNING] The symbol startTime is declared but is apparently never used.
This code can probably be written in a more compact way.
var startYear=startOfWeek.getFullYear(), ---> startTime <--- =startOfWeek.getTime();endOfWeek=new 

[WARNING] The symbol weekord is declared but is apparently never used.
This code can probably be written in a more compact way.
,plusminus,number,type,amount, ---> weekord <--- ,daynum;for(var i=0;

[WARNING] The symbol daynum is declared but is apparently never used.
This code can probably be written in a more compact way.
,number,type,amount,weekord, ---> daynum <--- ;for(var i=0;i<

[WARNING] The symbol offsetMatchingRules is declared but is apparently never used.
This code can probably be written in a more compact way.
];var matchingRulesMap={};var  ---> offsetMatchingRules <--- =[];var daylightMatchingFound=false;if

[WARNING] The symbol insets is declared but is apparently never used.
This code can probably be written in a more compact way.
.getScrollbarSizes=function(node){var  ---> insets <--- =Dwt.getInsets(node);var style

[WARNING] The symbol result is declared but is apparently never used.
This code can probably be written in a more compact way.
=function(htmlElement,cssPropName){var  ---> result <--- ;if(htmlElement.ownerDocument==null){

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
_mouseEventCaptureObj==null){return;}var  ---> obj <--- =window._shellCaptureObj;if(document.body

[WARNING] The symbol callerText is declared but is apparently never used.
This code can probably be written in a more compact way.
.AjxDebug&&window.DBG){var  ---> callerText <--- =caller?"DwtTabGroup."+caller+": ":""

[WARNING] The symbol fullText is declared but is apparently never used.
This code can probably be written in a more compact way.
item.getText())||"", ---> fullText <--- =itemText+otherText;}};}if

[WARNING] The symbol scroll is declared but is apparently never used.
This code can probably be written in a more compact way.
realTop=containerTop+container.scrollTop;var  ---> scroll <--- =container.scrollTop;var diff=ev.

[WARNING] The symbol containerTop is declared but is apparently never used.
This code can probably be written in a more compact way.
{var container=params.container;var  ---> containerTop <--- =Dwt.toWindow(container,0,0

[WARNING] The symbol el is declared but is apparently never used.
This code can probably be written in a more compact way.
;if(childHtmlEl.parentNode){var  ---> el <--- =childHtmlEl.parentNode.removeChild(childHtmlEl);

[WARNING] The symbol p is declared but is apparently never used.
This code can probably be written in a more compact way.
_dwtShellId);if(control){var  ---> p <--- =Dwt.getSize(control.getHtmlElement()

[WARNING] The symbol size is declared but is apparently never used.
This code can probably be written in a more compact way.
.getElementById(this._htmlElId);var  ---> size <--- =this.getSize();var dragEndCb=

[WARNING] The symbol htmlArr is declared but is apparently never used.
This code can probably be written in a more compact way.
size=list.size();var  ---> htmlArr <--- =[];if(!doAdd){

[WARNING] The symbol el is declared but is apparently never used.
This code can probably be written in a more compact way.
;break;caseDwtButton.ACTION_MOUSEUP:var  ---> el <--- =button.getHtmlElement();if(button

[WARNING] The symbol currItem is declared but is apparently never used.
This code can probably be written in a more compact way.
{var menu=this.parent;var  ---> currItem <--- =menu.__currentItem;var mev=new DwtMouseEvent

[WARNING] The symbol ev is declared but is apparently never used.
This code can probably be written in a more compact way.
{this._popupMenu(DwtKeyEvent.isKeyEvent( ---> ev <--- ));}}return;}}}

[WARNING] The symbol treeItemTableEl is declared but is apparently never used.
This code can probably be written in a more compact way.
id=this._htmlElId+"_table";var  ---> treeItemTableEl <--- =document.getElementById(id);var treeItemDivEl

[WARNING] The symbol obj is declared but is apparently never used.
This code can probably be written in a more compact way.
._nodeIconMouseUpHdlr=function(ev){var  ---> obj <--- =DwtControl.getTargetControl(ev);var mouseEv

[WARNING] The symbol oldDate is declared but is apparently never used.
This code can probably be written in a more compact way.
(date.getTime());var  ---> oldDate <--- =this._date;var layout=false;

[WARNING] The symbol clsName is declared but is apparently never used.
This code can probably be written in a more compact way.
length==0){return;}var  ---> clsName <--- =className||"DwtDialog";DwtPropertyPage.call(this

[WARNING] The symbol data is declared but is apparently never used.
This code can probably be written in a more compact way.
,skipNotify);}}else{var  ---> data <--- ;if(this._selectStyle==DwtChooser.SINGLE_SELECT

[WARNING] The symbol keycode is declared but is apparently never used.
This code can probably be written in a more compact way.
._handleKeyDown=function(ev){var  ---> keycode <--- =DwtKeyEvent.getCharCode(ev);this.

[WARNING] The symbol startDateOrig is declared but is apparently never used.
This code can probably be written in a more compact way.
.simpleParseDateStr(endDateField.value);var  ---> startDateOrig <--- =startDateField.value;var endDateOrig=endDateField.
